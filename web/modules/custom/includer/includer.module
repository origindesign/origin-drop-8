<?php

use Drupal\Core\Cache\Cache;
use Drupal\node\Entity\Node;


/**
 * Return node ids to clear cache tags when content of type is created or updated
 */
function returnCacheTags($node){

    // Switch on type
    switch($node->getType()){

        case 'activity':
            $tags = ['node:3'];
            break;
        case 'dining':
            $tags = ['node:4'];
            break;
        case 'lodging':
            $tags = ['node:5'];
            break;
        case 'lesson':
            $tags = ['node:7'];
            break;
        case 'lift_trail':
            $tags = ['node:22'];
            break;
        default:
            $tags = [];
            break;

    }

    return $tags;

}


/**
 * Implements hook_ENTITY_TYPE_insert().
 * Clear listing page cache when new node inserted
 */
function includer_node_presave(Node $node) {

    $tags = returnCacheTags($node);

    if (isset($tags) && !empty($tags)) {
        Cache::invalidateTags($tags);
    }

}


/**
 * Implements hook_ENTITY_TYPE_update().
 * Clear listing page cache when new node updated
 */
function includer_node_delete(Node $node) {

    $tags = returnCacheTags($node);

    if (isset($tags) && !empty($tags)) {
        Cache::invalidateTags($tags);
    }

}
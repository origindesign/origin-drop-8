/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */@import url("//fonts.googleapis.com/css?family=Lato:400,700,900");html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}@keyframes a{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.clearfix:after{clear:both;content:"";display:table}.container{margin-left:auto;margin-right:auto;max-width:1400px;padding-left:15px;padding-right:15px;position:relative}.container:after{clear:both;content:"";display:table}@media (min-width:1430px){.container{padding-left:0;padding-right:0}}.content-container{margin-left:auto;margin-right:auto;max-width:700px;padding-left:15px;padding-right:15px;position:relative}.content-container:after{clear:both;content:"";display:table}@media (min-width:1430px){.content-container{padding-left:0;padding-right:0}}@media (min-width:730px){.content-container{padding-left:0;padding-right:0}}.layout-table{display:table;height:100%;width:100%}.layout-table>*{display:table-cell;width:auto;vertical-align:middle}.center-floats{left:50%}.center-floats,.center-floats>.inner{float:left;position:relative;width:100%}.center-floats>.inner{left:-50%}.visually-hidden{clip:rect(1px,1px,1px,1px);height:1px;overflow:hidden;overflow-wrap:normal;position:absolute!important;width:1px}.messages{font-size:16px;font-size:1.6rem;margin-left:auto;margin-right:auto;max-width:1400px;margin:40px auto}.block-local-tasks-block{position:fixed;top:450px;left:0;width:120px;z-index:10000}.block-local-tasks-block>.contextual{display:none}.block-local-tasks-block ul.tabs li{display:block}.block-local-tasks-block ul.tabs li a{font-size:16px;font-size:1.6rem;transition:all .2s ease-in-out;text-transform:uppercase;color:#fff;display:block;padding:5px 10px;text-align:center;background:rgba(0,0,0,.8)}.block-local-tasks-block ul.tabs li a:hover{background:#000}*{box-sizing:border-box}html{font-size:62.5%}body{font-size:15px;font-size:1.5rem;line-height:1.8;color:#3d3d3d}@media (min-width:740px){body{font-size:16px;font-size:1.6rem}}body.cke_editable{font-size:16px;font-size:1.6rem;padding:20px!important;background:#fff!important}h1:first-child,h2:first-child,h3:first-child,h4:first-child,h5:first-child{margin-top:0}h1:last-child,h2:last-child,h3:last-child,h4:last-child,h5:last-child{margin-bottom:0}h1{font-size:25px;font-size:2.5rem;line-height:1;margin:0}@media (min-width:740px){h1{font-size:30px;font-size:3rem}}h2{font-size:24px;font-size:2.4rem;line-height:1;margin:0 0 30px}@media (min-width:740px){h2{font-size:28px;font-size:2.8rem}}h3{font-size:23px;font-size:2.3rem;line-height:1;margin:0 0 30px}@media (min-width:740px){h3{font-size:26px;font-size:2.6rem}}h4{font-size:22px;font-size:2.2rem;line-height:1;margin:0}@media (min-width:740px){h4{font-size:24px;font-size:2.4rem}}h5{font-size:20px;font-size:2rem;line-height:1;margin:0}@media (min-width:740px){h5{font-size:20px;font-size:2rem}}h6{font-size:16px;font-size:1.6rem;line-height:1;margin:0}ol,p,ul{margin:30px 0}ol:first-child,p:first-child,ul:first-child{margin-top:0}ol:last-child,p:last-child,ul:last-child{margin-bottom:0}a{transition:all .2s ease-in-out;text-decoration:none}a:focus,a:hover{color:#3d3d3d}a.image{display:block;outline-offset:2px}blockquote{padding:20px 30px;margin:30px 0}img{max-width:100%;height:auto;display:block}article.embedded-entity+article.embedded-entity{margin-top:15px}iframe,table{width:100%}table{font-size:16px;font-size:1.6rem}table caption{font-size:22px;font-size:2.2rem;line-height:1;margin:0;text-align:left}@media (min-width:740px){table caption{font-size:24px;font-size:2.4rem}}table th{white-space:nowrap}@media (min-width:740px){table th{white-space:normal}}table thead th{background:#c9c9c9;color:#fff;text-align:left}table tbody th{font-weight:700}table th{text-align:left}table td,table th{padding:5px 10px}table tr{background:#fff}.table-wrap{margin:30px 0;position:relative}.table-wrap.scroll{overflow-x:auto;overflow-y:hidden}.scroll-indicator{padding-right:20px;display:none}.scroll-indicator+.table-wrap{margin-top:0}.button{color:#fff;background:#007bff;border:0;padding:.5em 1em;border-radius:.5em}.button:hover{background:#0e6bac;cursor:pointer}form .form-item{margin:30px 0;position:relative}form .form-item:after{clear:both;content:"";display:table}form .form-item:first-child{margin-top:0}form .form-item:last-child{margin-bottom:0}form button,form input,form select,form textarea{-webkit-appearance:none!important;border-radius:0!important}form input[type=email],form input[type=number],form input[type=password],form input[type=tel],form input[type=text],form select{background:#fff;border:1px solid #3d3d3d;width:100%;padding:0 20px;line-height:35px;height:35px}form .form-composite legend,form label{display:block;margin-bottom:10px;font-weight:700}form .form-composite legend.form-required:after,form label.form-required:after{content:" *";color:red}form label.error{font-size:16px;font-size:1.6rem;color:red}form textarea{padding:10px;border:1px solid #3d3d3d;width:100%}form button[type=submit],form input[type=submit]{margin-top:20px;outline-offset:2px}form button[type=submit]:focus,form input[type=submit]:focus{outline:1px dotted #007bff}form fieldset.webform-type-fieldset{margin:30px 0;border:none;padding:0}form fieldset.webform-type-fieldset>legend{font-size:24px;font-size:2.4rem;line-height:1;margin:0 0 30px}@media (min-width:740px){form fieldset.webform-type-fieldset>legend{font-size:28px;font-size:2.8rem}}form .form-checkboxes .form-item,form .form-radios .form-item{display:inline-block;margin:10px 0;vertical-align:bottom;width:100%}form .form-type-checkbox label,form .form-type-radio label{width:auto!important}form .description{margin-top:10px}form input.form-type-date{background:url(../images/calendar.svg) 95% no-repeat;background-size:20px 20px;position:relative;z-index:2}button[type=submit],input[type=submit]{color:#fff;background:#007bff;border:0;padding:.5em 1em;border-radius:.5em;-webkit-appearance:none!important;border-radius:0!important}button[type=submit]:hover,input[type=submit]:hover{background:#0e6bac;cursor:pointer}button[type=submit]:focus,input[type=submit]:focus{outline:1px dotted #000}.fs-dropdown.fs-light{position:relative}.fs-dropdown.fs-light .fs-dropdown-selected{background:#fff;border:1px solid #3d3d3d;width:100%;padding:0 20px;line-height:35px;height:35px;background:#fff!important;border-radius:0;z-index:-1;border:1px solid #3d3d3d!important;padding-right:40px}.fs-dropdown.fs-light .fs-dropdown-selected:after{display:none}.fs-dropdown.fs-light.fs-dropdown-open .fs-dropdown-selected:before{transform:rotate(-180deg);top:10px}.fs-dropdown.fs-light.fs-dropdown-open .fs-dropdown-options{display:block!important}.fs-dropdown.fs-light .fs-dropdown-options{border:1px solid #3d3d3d;border-top:none;border-radius:0;display:none!important}.fs-dropdown.fs-light .fs-dropdown-item{transition:all .2s ease-in-out;background:#fff!important;padding:10px 20px;margin:0}.fs-dropdown.fs-light .fs-dropdown-item:focus,.fs-dropdown.fs-light .fs-dropdown-item:hover{padding-left:25px}.fs-dropdown.fs-light .fs-dropdown-item:first-child{padding-top:20px}.fs-dropdown.fs-light .fs-dropdown-item:last-child{padding-bottom:20px}.fs-dropdown.fs-light.fs-dropdown-multiple{border:none;border-radius:0}.fs-dropdown.fs-light.fs-dropdown-multiple select{z-index:-1}.fs-dropdown.fs-light.fs-dropdown-multiple .fs-dropdown-options{width:auto;border:none}.fs-checkbox-label.fs-light{text-transform:none;font-weight:400;letter-spacing:0;position:static;vertical-align:middle;display:inline-block;margin-bottom:0;float:none!important;line-height:30px;font-family:Roboto,sans-serif}.fs-checkbox.fs-light{display:inline-block}.fs-checkbox.fs-light:after{clear:both;content:"";display:table}.fs-checkbox.fs-light .fs-checkbox-marker{border-radius:0;width:30px;height:30px;float:left;margin-right:10px;border:1px solid #3d3d3d}.fs-checkbox.fs-light.fs-checkbox-focus .fs-checkbox-marker{outline:1px dashed #3d3d3d}.fs-checkbox.fs-light:not(.fs-checkbox-disabled):hover:not(.fs-checkbox-checked) .fs-checkbox-marker{border:2px solid #3d3d3d!important}.fs-checkbox.fs-light .fs-checkbox-flag:before{color:#000!important;border-color:#000!important;height:20px;width:10px;margin:2px 0 0 11px}.fs-checkbox.fs-light.fs-checkbox-radio .fs-checkbox-marker{border-radius:99em}.fs-checkbox.fs-light.fs-checkbox-radio .fs-checkbox-flag{background:#000!important}.media--loading{position:relative}.media--loading:after{transition:all .2s ease-in-out;content:"\020";width:32px;height:32px;top:0;margin-left:-16px;border-radius:50%;z-index:2;background-color:transparent;border-top:5px solid rgba(0,0,0,.2);border-right:5px solid rgba(0,0,0,.2);border-bottom:5px solid rgba(0,0,0,.2);border-left:5px solid #eee;transform:translateZ(0) translateX(120px);animation-iteration-count:infinite;animation-timing-function:linear;animation-duration:.8s;animation-name:a;position:absolute;top:50%;left:50%;transform:translateX(-50%) translateY(-50%)}.media--loading:before{display:none}.media{position:relative}.blazy .media{position:absolute}.blazy .media,.media .image{width:100%;height:100%;top:0;left:0}.media .image{position:absolute;position:relative}.media .field--name-field-media-image{position:relative;display:block;padding-bottom:56.25%}.media .field--name-field-media-image img.b-lazy.b-loaded,.media .field--name-field-media-image img:not(.b-lazy){width:100%;height:100%;position:absolute;top:0;left:0;-o-object-fit:cover;object-fit:cover;font-family:object-fit\: cover}.focus-top-left .media .field--name-field-media-image img.b-lazy.b-loaded,.focus-top-left .media .field--name-field-media-image img:not(.b-lazy){-o-object-fit:cover;object-fit:cover;-o-object-position:0 0;object-position:0 0;font-family:"object-fit: cover; object-position: 0 0"}.focus-top-center .media .field--name-field-media-image img.b-lazy.b-loaded,.focus-top-center .media .field--name-field-media-image img:not(.b-lazy){-o-object-fit:cover;object-fit:cover;-o-object-position:50% 0;object-position:50% 0;font-family:"object-fit: cover; object-position: 50% 0"}.focus-top-right .media .field--name-field-media-image img.b-lazy.b-loaded,.focus-top-right .media .field--name-field-media-image img:not(.b-lazy){-o-object-fit:cover;object-fit:cover;-o-object-position:100% 0;object-position:100% 0;font-family:"object-fit: cover; object-position: 100% 0"}.focus-middle-left .media .field--name-field-media-image img.b-lazy.b-loaded,.focus-middle-left .media .field--name-field-media-image img:not(.b-lazy){-o-object-fit:cover;object-fit:cover;-o-object-position:0 50%;object-position:0 50%;font-family:"object-fit: cover; object-position: 0 50%"}.focus-middle-center .media .field--name-field-media-image img.b-lazy.b-loaded,.focus-middle-center .media .field--name-field-media-image img:not(.b-lazy){-o-object-fit:cover;object-fit:cover;-o-object-position:50% 50%;object-position:50% 50%;font-family:"object-fit: cover; object-position: 50% 50%"}.focus-middle-right .media .field--name-field-media-image img.b-lazy.b-loaded,.focus-middle-right .media .field--name-field-media-image img:not(.b-lazy){-o-object-fit:cover;object-fit:cover;-o-object-position:100% 50%;object-position:100% 50%;font-family:"object-fit: cover; object-position: 100% 50%"}.focus-bottom-left .media .field--name-field-media-image img.b-lazy.b-loaded,.focus-bottom-left .media .field--name-field-media-image img:not(.b-lazy){-o-object-fit:cover;object-fit:cover;-o-object-position:0 100%;object-position:0 100%;font-family:"object-fit: cover; object-position: 0 100%"}.focus-bottom-center .media .field--name-field-media-image img.b-lazy.b-loaded,.focus-bottom-center .media .field--name-field-media-image img:not(.b-lazy){-o-object-fit:cover;object-fit:cover;-o-object-position:50% 100%;object-position:50% 100%;font-family:"object-fit: cover; object-position: 50% 100%"}.focus-bottom-right .media .field--name-field-media-image img.b-lazy.b-loaded,.focus-bottom-right .media .field--name-field-media-image img:not(.b-lazy){-o-object-fit:cover;object-fit:cover;-o-object-position:100% 100%;object-position:100% 100%;font-family:"object-fit: cover; object-position: 100% 100%"}.media .field--name-field-media-image.focus-top-left img{-o-object-fit:cover;object-fit:cover;-o-object-position:0 0;object-position:0 0;font-family:"object-fit: cover; object-position: 0 0"}.media .field--name-field-media-image.focus-top-center img{-o-object-fit:cover;object-fit:cover;-o-object-position:50% 0;object-position:50% 0;font-family:"object-fit: cover; object-position: 50% 0"}.media .field--name-field-media-image.focus-top-right img{-o-object-fit:cover;object-fit:cover;-o-object-position:100% 0;object-position:100% 0;font-family:"object-fit: cover; object-position: 100% 0"}.media .field--name-field-media-image.focus-middle-left img{-o-object-fit:cover;object-fit:cover;-o-object-position:0 50%;object-position:0 50%;font-family:"object-fit: cover; object-position: 0 50%"}.media .field--name-field-media-image.focus-middle-center img{-o-object-fit:cover;object-fit:cover;-o-object-position:50% 50%;object-position:50% 50%;font-family:"object-fit: cover; object-position: 50% 50%"}.media .field--name-field-media-image.focus-middle-right img{-o-object-fit:cover;object-fit:cover;-o-object-position:100% 50%;object-position:100% 50%;font-family:"object-fit: cover; object-position: 100% 50%"}.media .field--name-field-media-image.focus-bottom-left img{-o-object-fit:cover;object-fit:cover;-o-object-position:0 100%;object-position:0 100%;font-family:"object-fit: cover; object-position: 0 100%"}.media .field--name-field-media-image.focus-bottom-center img{-o-object-fit:cover;object-fit:cover;-o-object-position:50% 100%;object-position:50% 100%;font-family:"object-fit: cover; object-position: 50% 100%"}.media .field--name-field-media-image.focus-bottom-right img{-o-object-fit:cover;object-fit:cover;-o-object-position:100% 100%;object-position:100% 100%;font-family:"object-fit: cover; object-position: 100% 100%"}.menu--footer ul.menu,.menu--main ul.menu{margin:0}.menu--footer ul.menu:after,.menu--main ul.menu:after{clear:both;content:"";display:table}.menu--footer li,.menu--main li{float:left;display:inline-block;height:60px;padding:18px 20px 10px}.menu--footer li:first-child,.menu--main li:first-child{padding-left:0}.menu--footer li:last-child,.menu--main li:last-child{padding-right:0}footer.site-footer{background:#c9c9c9;border-top:1px solid #3d3d3d}footer.site-footer:after{clear:both;content:"";display:table}footer.site-footer .navigation{width:100%;float:right;margin-left:0;margin-right:0;clear:none}.site-header{background:#c9c9c9;border-bottom:1px solid #3d3d3d}.site-header:after{clear:both;content:"";display:table}.main-menu,.site-header .logo{float:left}.main-menu:after{clear:both;content:"";display:table}.main-menu .navigation{width:100%;float:right;margin-left:0;margin-right:0;clear:none}.listing .no-results{text-align:center;min-height:200px}.listing.isotope .isoGrid{min-height:200px}.listing.isotope .no-results{display:none}.listing.isotope .iso-gutter{display:block;width:0}.pager{text-align:center;clear:both}.pager ul{margin:0}.pager ul,.pager ul li{padding:0;list-style:none}.pager ul li:before{display:none}.pager ul li{margin:0;display:inline-block}.pager ul li.pager__item--ellipsis,.pager ul li.pager__item--first,.pager ul li.pager__item--last{display:none}.pager ul li.next a,.pager ul li.pager__item--next a,.pager ul li.pager__item--previous a,.pager ul li.prev a{width:30px;height:20px;padding:0}.pager ul li.next a span,.pager ul li.pager__item--next a span,.pager ul li.pager__item--previous a span,.pager ul li.prev a span{clip:rect(1px,1px,1px,1px);height:1px;overflow:hidden;overflow-wrap:normal;position:absolute!important;width:1px}.pager ul li.next a:before,.pager ul li.pager__item--next a:before,.pager ul li.pager__item--previous a:before,.pager ul li.prev a:before{transform:rotate(90deg)}.pager ul li.next a:focus:before,.pager ul li.next a:hover:before,.pager ul li.pager__item--next a:focus:before,.pager ul li.pager__item--next a:hover:before,.pager ul li.pager__item--previous a:focus:before,.pager ul li.pager__item--previous a:hover:before,.pager ul li.prev a:focus:before,.pager ul li.prev a:hover:before{transform:rotate(90deg) translateY(5px)}.pager ul li.pager__item--previous,.pager ul li.prev{margin-left:0}.pager ul li.next,.pager ul li.pager__item--next{margin-right:0}.pager ul li.next a:before,.pager ul li.pager__item--next a:before{transform:rotate(-90deg)}.pager ul li.next a:focus:before,.pager ul li.next a:hover:before,.pager ul li.pager__item--next a:focus:before,.pager ul li.pager__item--next a:hover:before{transform:rotate(-90deg) translateY(5px)}.pager ul li a{display:inline-block;padding:0 10px}.pager ul li a.active,.pager ul li a:focus,.pager ul li a:hover{color:#007bff}.pager ul li.is-active a{font-weight:700}.node--view-mode-card{width:31.91489%;clear:right;float:left;margin-left:0;margin-right:2.12766%}.node--view-mode-card>.wrapper{border:1px solid #3d3d3d;padding:20px}main{margin-top:20px}main:after{clear:both;content:"";display:table}.layout-container{margin-left:auto;margin-right:auto;max-width:1400px;padding-left:15px;padding-right:15px;position:relative}.layout-container:after{clear:both;content:"";display:table}@media (min-width:1430px){.layout-container{padding-left:0;padding-right:0}}.layout-content{padding:40px 0 80px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuc2Nzcy9ub3JtYWxpemUuc2NzcyIsInN0eWxlLnNjc3MiLCJzdHlsZS5jc3MiLCIuLi9jb21wb25lbnRzLzAwLWNvbmZpZy9fYW5pbWF0aW9uLnNjc3MiLCIuLi9jb21wb25lbnRzLzAzLW1peGlucy9fbWl4aW5zLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2FkZG9ucy9fY2xlYXJmaXguc2NzcyIsIi4uL2NvbXBvbmVudHMvMDAtY29uZmlnL19zZXR0aW5ncy5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL2JyZWFrcG9pbnQtc2Fzcy9zdHlsZXNoZWV0cy9fYnJlYWtwb2ludC5zY3NzIiwiLi4vY29tcG9uZW50cy8wNS1iYXNlL19hZG1pbi5zY3NzIiwiLi4vY29tcG9uZW50cy8wMC1jb25maWcvX3R5cG9ncmFwaHkuc2NzcyIsIi4uL2NvbXBvbmVudHMvMDUtYmFzZS9faHRtbC1lbGVtZW50cy5zY3NzIiwiLi4vY29tcG9uZW50cy8wMC1jb25maWcvX2NvbG9ycy5zY3NzIiwiLi4vY29tcG9uZW50cy8wNS1iYXNlL190YWJsZXMuc2NzcyIsIi4uL2NvbXBvbmVudHMvMTAtYXRvbXMvYnV0dG9uL19idXR0b24uc2NzcyIsIi4uL2NvbXBvbmVudHMvMTAtYXRvbXMvZm9ybXMvX2Zvcm1zLnNjc3MiLCIuLi9jb21wb25lbnRzLzEwLWF0b21zL2Zvcm1zL19mb3Jtc3RvbmUuc2NzcyIsIi4uL2NvbXBvbmVudHMvMDAtY29uZmlnL19mb250cy5zY3NzIiwiLi4vY29tcG9uZW50cy8yMC1tb2xlY3VsZXMvbWVkaWEvX21lZGlhLnNjc3MiLCIuLi9jb21wb25lbnRzLzA1LWJhc2UvX2ltYWdlcy5zY3NzIiwiLi4vY29tcG9uZW50cy8yMC1tb2xlY3VsZXMvbWVudXMvX25hdmlnYXRpb24uc2NzcyIsIi4uL2NvbXBvbmVudHMvMzAtb3JnYW5pc21zL2dsb2JhbC9fZm9vdGVyLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvc2luZ3VsYXJpdHlncy9zdHlsZXNoZWV0cy9zaW5ndWxhcml0eWdzL19hcGkuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9zaW5ndWxhcml0eWdzL3N0eWxlc2hlZXRzL3Npbmd1bGFyaXR5Z3MvbWF0aC9fY29sdW1ucy5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL3Npbmd1bGFyaXR5Z3Mvc3R5bGVzaGVldHMvc2luZ3VsYXJpdHlncy9oZWxwZXJzL19kaXJlY3Rpb25zLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvc2luZ3VsYXJpdHlncy9zdHlsZXNoZWV0cy9zaW5ndWxhcml0eWdzL2FwaS9faXNvbGF0aW9uLnNjc3MiLCIuLi9jb21wb25lbnRzLzMwLW9yZ2FuaXNtcy9nbG9iYWwvX2hlYWRlci5zY3NzIiwiLi4vY29tcG9uZW50cy8zMC1vcmdhbmlzbXMvbGlzdGluZ3MvX2xpc3RpbmdzLnNjc3MiLCIuLi9jb21wb25lbnRzLzMwLW9yZ2FuaXNtcy9saXN0aW5ncy9fcGFnZXIuc2NzcyIsIi4uL2NvbXBvbmVudHMvNDAtdGVtcGxhdGVzL19jYXJkLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvc2luZ3VsYXJpdHlncy9zdHlsZXNoZWV0cy9zaW5ndWxhcml0eWdzL2FwaS9fZmxvYXQuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9zaW5ndWxhcml0eWdzL3N0eWxlc2hlZXRzL3Npbmd1bGFyaXR5Z3MvbWF0aC9fZ3V0dGVycy5zY3NzIiwiLi4vY29tcG9uZW50cy81MC1wYWdlcy9fcGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNFQUFzRSxBQ2F0RSxrRUFBWSxBRExaLEtBQ0UsdUJBQXdCLEFBQ3hCLDBCQUEyQixBQUMzQiw2QkFBK0IsQ0FDaEMsQUFNRCxLQUNFLFFBQVUsQ0FDWCxBQVlELDJGQWFFLGFBQWUsQ0FDaEIsQUFPRCw0QkFJRSxxQkFBc0IsQUFDdEIsdUJBQXlCLENBQzFCLEFBT0Qsc0JBQ0UsYUFBYyxBQUNkLFFBQVUsQ0FD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QUUsY0FBZSxDQU16QyxBQTdEYixnRUEyRG9CLGFoQjNEVSxDZ0I0RGIsQUE1RGpCLHlCQWdFb0IsZUFBaUIsQ0FDcEIsQUNsRWpCLHNCUGlHSSxnQkN6RXlCLEFEeUV6QixZRTVGYSxBRjRGYixXQXZDZ0YsQUF1Q2hGLGNRbENpRSxBUmtDakUscUJTbkZVLENGTGIsQUFURCwrQkFLUSx5QmpCQWEsQWlCQ2IsWUFBYyxDQUNqQixBR1BMLEtBRUksZUFBaUIsQ0FDcEIsQUFIRCxXMUJvQkksV0FBWSxBQUNaLFdBQVksQUFDWixhQUFlLENBQ2hCLEEwQmxCSCxrQjNCdUNRLGlCQU1vQixBQU5ILGtCQU1HLEFBRXhCLGlCRWxEd0IsQUZpQ3BCLGtCRWhDbUIsQUZnQ0QsbUJFaENDLEFGZ0V2QixpQkFBa0IsQzJCNURyQixBQUZELHdCMUJlSSxXQUFZLEFBQ1osV0FBWSxBQUNaLGFBQWUsQ0FDaEIsQUV5Q0MsMEJ3QjNESixrQjNCOEJRLGVBMEJzQixBQTFCSixlQTBCSSxDMkJ0RDdCLENBQUEsQUFFRCxnQkFDSSxtQkFBb0IsQ0FDdkIiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5zY3NzIHYwLjEuMCB8IE1JVCBMaWNlbnNlIHwgYmFzZWQgb24gZ2l0LmlvL25vcm1hbGl6ZSAqL1xuXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmdcbiAqICAgIHVzZXIgem9vbS5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuXG5ociB7XG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgbWFyZ2luOiAwOyAvKiAzICovXG59XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAqL1xuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cblxuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cblxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4gKiAgICAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMiAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59XG4iLCIvLyBCZXR0ZXIgc3R5bGUgcmVzZXQsIGh0dHBzOi8vZ2l0aHViLmNvbS9Kb2huQWxiaW4vbm9ybWFsaXplLXNjc3NcclxuQGltcG9ydCBcIi4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuc2Nzcy9ub3JtYWxpemVcIjtcclxuXHJcbi8vIEdyaWQgc3lzdGVtLCBodHRwczovL2dpdGh1Yi5jb20vYXQtaW1wb3J0L1Npbmd1bGFyaXR5XHJcbkBpbXBvcnQgXCIuLi9ub2RlX21vZHVsZXMvc2luZ3VsYXJpdHlncy9zdHlsZXNoZWV0cy9zaW5ndWxhcml0eWdzXCI7XHJcblxyXG4vLyBBIGNsZWFuZXIgd2F5IHRvIGRvIGJyZWFrcG9pbnRzL21lZGlhIHF1ZXJpZXMsIGh0dHA6Ly9icmVha3BvaW50LXNhc3MuY29tL1xyXG5AaW1wb3J0IFwiLi4vbm9kZV9tb2R1bGVzL2JyZWFrcG9pbnQtc2Fzcy9zdHlsZXNoZWV0cy9icmVha3BvaW50XCI7XHJcblxyXG4vLyBIZWxwZnVsIG1peGlucywgaHR0cDovL2JvdXJib24uaW8vZG9jcy9cclxuQGltcG9ydCBcIi4uL25vZGVfbW9kdWxlcy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvYm91cmJvblwiO1xyXG5cclxuLy8gSW1wb3J0IEZvbnRzIGZyb20gR29vZ2xlIEZvbnRzXHJcbkBpbXBvcnQgdXJsKFwiLy9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxhdG86NDAwLDcwMCw5MDBcIik7XHJcblxyXG4vLyBJbXBvcnQgYWxsIGNvbXBvbmVudCBzdHlsZXMuXHJcbkBpbXBvcnQgXCJDOi93ZWJyb290L29yaWdpbi1kcm9wLTgvd2ViL3RoZW1lcy9jdXN0b20vb3JpZ2luL2NvbXBvbmVudHMvMDAtY29uZmlnL19hbmltYXRpb24uc2Nzc1wiO1xuQGltcG9ydCBcIkM6L3dlYnJvb3Qvb3JpZ2luLWRyb3AtOC93ZWIvdGhlbWVzL2N1c3RvbS9vcmlnaW4vY29tcG9uZW50cy8wMC1jb25maWcvX2NvbG9ycy5zY3NzXCI7XG5AaW1wb3J0IFwiQzovd2Vicm9vdC9vcmlnaW4tZHJvcC04L3dlYi90aGVtZXMvY3VzdG9tL29yaWdpbi9jb21wb25lbnRzLzAwLWNvbmZpZy9fZm9udHMuc2Nzc1wiO1xuQGltcG9ydCBcIkM6L3dlYnJvb3Qvb3JpZ2luLWRyb3AtOC93ZWIvdGhlbWVzL2N1c3RvbS9vcmlnaW4vY29tcG9uZW50cy8wMC1jb25maWcvX3NldHRpbmdzLnNjc3NcIjtcbkBpbXBvcnQgXCJDOi93ZWJyb290L29yaWdpbi1kcm9wLTgvd2ViL3RoZW1lcy9jdXN0b20vb3JpZ2luL2NvbXBvbmVudHMvMDAtY29uZmlnL190eXBvZ3JhcGh5LnNjc3NcIjtcbkBpbXBvcnQgXCJDOi93ZWJyb290L29yaWdpbi1kcm9wLTgvd2ViL3RoZW1lcy9jdXN0b20vb3JpZ2luL2NvbXBvbmVudHMvMDMtbWl4aW5zL19taXhpbnMuc2Nzc1wiO1xuQGltcG9ydCBcIkM6L3dlYnJvb3Qvb3JpZ2luLWRyb3AtOC93ZWIvdGhlbWVzL2N1c3RvbS9vcmlnaW4vY29tcG9uZW50cy8wNS1iYXNlL19hZG1pbi5zY3NzXCI7XG5AaW1wb3J0IFwiQzovd2Vicm9vdC9vcmlnaW4tZHJvcC04L3dlYi90aGVtZXMvY3VzdG9tL29yaWdpbi9jb21wb25lbnRzLzA1LWJhc2UvX2dyaWQuc2Nzc1wiO1xuQGltcG9ydCBcIkM6L3dlYnJvb3Qvb3JpZ2luLWRyb3AtOC93ZWIvdGhlbWVzL2N1c3RvbS9vcmlnaW4vY29tcG9uZW50cy8wNS1iYXNlL19odG1sLWVsZW1lbnRzLnNjc3NcIjtcbkBpbXBvcnQgXCJDOi93ZWJyb290L29yaWdpbi1kcm9wLTgvd2ViL3RoZW1lcy9jdXN0b20vb3JpZ2luL2NvbXBvbmVudHMvMDUtYmFzZS9faW1hZ2VzLnNjc3NcIjtcbkBpbXBvcnQgXCJDOi93ZWJyb290L29yaWdpbi1kcm9wLTgvd2ViL3RoZW1lcy9jdXN0b20vb3JpZ2luL2NvbXBvbmVudHMvMDUtYmFzZS9fdGFibGVzLnNjc3NcIjtcbkBpbXBvcnQgXCJDOi93ZWJyb290L29yaWdpbi1kcm9wLTgvd2ViL3RoZW1lcy9jdXN0b20vb3JpZ2luL2NvbXBvbmVudHMvMTAtYXRvbXMvYnV0dG9uL19idXR0b24uc2Nzc1wiO1xuQGltcG9ydCBcIkM6L3dlYnJvb3Qvb3JpZ2luLWRyb3AtOC93ZWIvdGhlbWVzL2N1c3RvbS9vcmlnaW4vY29tcG9uZW50cy8xMC1hdG9tcy9mb3Jtcy9fZm9ybXMuc2Nzc1wiO1xuQGltcG9ydCBcIkM6L3dlYnJvb3Qvb3JpZ2luLWRyb3AtOC93ZWIvdGhlbWVzL2N1c3RvbS9vcmlnaW4vY29tcG9uZW50cy8xMC1hdG9tcy9mb3Jtcy9fZm9ybXN0b25lLnNjc3NcIjtcbkBpbXBvcnQgXCJDOi93ZWJyb290L29yaWdpbi1kcm9wLTgvd2ViL3RoZW1lcy9jdXN0b20vb3JpZ2luL2NvbXBvbmVudHMvMjAtbW9sZWN1bGVzL21lZGlhL19tZWRpYS5zY3NzXCI7XG5AaW1wb3J0IFwiQzovd2Vicm9vdC9vcmlnaW4tZHJvcC04L3dlYi90aGVtZXMvY3VzdG9tL29yaWdpbi9jb21wb25lbnRzLzIwLW1vbGVjdWxlcy9tZW51cy9fbmF2aWdhdGlvbi5zY3NzXCI7XG5AaW1wb3J0IFwiQzovd2Vicm9vdC9vcmlnaW4tZHJvcC04L3dlYi90aGVtZXMvY3VzdG9tL29yaWdpbi9jb21wb25lbnRzLzMwLW9yZ2FuaXNtcy9nbG9iYWwvX2Zvb3Rlci5zY3NzXCI7XG5AaW1wb3J0IFwiQzovd2Vicm9vdC9vcmlnaW4tZHJvcC04L3dlYi90aGVtZXMvY3VzdG9tL29yaWdpbi9jb21wb25lbnRzLzMwLW9yZ2FuaXNtcy9nbG9iYWwvX2hlYWRlci5zY3NzXCI7XG5AaW1wb3J0IFwiQzovd2Vicm9vdC9vcmlnaW4tZHJvcC04L3dlYi90aGVtZXMvY3VzdG9tL29yaWdpbi9jb21wb25lbnRzLzMwLW9yZ2FuaXNtcy9saXN0aW5ncy9fbGlzdGluZ3Muc2Nzc1wiO1xuQGltcG9ydCBcIkM6L3dlYnJvb3Qvb3JpZ2luLWRyb3AtOC93ZWIvdGhlbWVzL2N1c3RvbS9vcmlnaW4vY29tcG9uZW50cy8zMC1vcmdhbmlzbXMvbGlzdGluZ3MvX3BhZ2VyLnNjc3NcIjtcbkBpbXBvcnQgXCJDOi93ZWJyb290L29yaWdpbi1kcm9wLTgvd2ViL3RoZW1lcy9jdXN0b20vb3JpZ2luL2NvbXBvbmVudHMvNDAtdGVtcGxhdGVzL19jYXJkLnNjc3NcIjtcbkBpbXBvcnQgXCJDOi93ZWJyb290L29yaWdpbi1kcm9wLTgvd2ViL3RoZW1lcy9jdXN0b20vb3JpZ2luL2NvbXBvbmVudHMvNTAtcGFnZXMvX3BhZ2Uuc2Nzc1wiO1xyXG5cclxuXHJcbiIsIi8qISBub3JtYWxpemUuc2NzcyB2MC4xLjAgfCBNSVQgTGljZW5zZSB8IGJhc2VkIG9uIGdpdC5pby9ub3JtYWxpemUgKi9cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG5AaW1wb3J0IHVybChcIi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1MYXRvOjQwMCw3MDAsOTAwXCIpO1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4gKiAgICAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDIgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwOyB9XG5cbkBrZXlmcmFtZXMgYW5pbXNpdGlvbi1sb2FkaW5nIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxdHVybik7IH0gfVxuXG4vKiBHT09HTEUgRk9OVFNcclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ0xpYnJlIEZyYW5rbGluJztcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbiAgICBzcmM6IGxvY2FsKCdMaWJyZSBGcmFua2xpbiBCb2xkJyksIGxvY2FsKCdMaWJyZUZyYW5rbGluLUJvbGQnKSwgdXJsKFwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2xpYnJlZnJhbmtsaW4vdjIvaml6QVJFVkl0SGdjOHFESWJTVEtxNFhrUmkya19pSTBxMXMud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvbGlicmVmcmFua2xpbi92Mi9qaXpBUkVWSXRIZ2M4cURJYlNUS3E0WGtSaTJrX2lJMHExMC53b2ZmXCIpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcclxufVxyXG4qL1xuLyogSUNPTU9PTlxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnaWNvbW9vbic7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG4gICAgc3JjOiB1cmwoJ2h0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9pY29tb29uLmlvLzQyNTYwL05FSVJBL2ljb21vb24ud29mZjI/NnIxeTJlJykgZm9ybWF0KCd3b2ZmMicpLCB1cmwoJ2h0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9pY29tb29uLmlvLzQyNTYwL05FSVJBL2ljb21vb24ud29mZj82cjF5MmUnKSBmb3JtYXQoJ3dvZmYnKTtcclxufSovXG4uY2xlYXJmaXg6OmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlOyB9XG5cbi5jb250YWluZXIge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDE0MDBweDtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmNvbnRhaW5lcjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDE0MzBweCkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgcGFkZGluZy1yaWdodDogMDsgfSB9XG5cbi5jb250ZW50LWNvbnRhaW5lciB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogNzAwcHg7XG4gIHBhZGRpbmctbGVmdDogMTVweDtcbiAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jb250ZW50LWNvbnRhaW5lcjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDE0MzBweCkge1xuICAgIC5jb250ZW50LWNvbnRhaW5lciB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDczMHB4KSB7XG4gICAgLmNvbnRlbnQtY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7IH0gfVxuXG4ubGF5b3V0LXRhYmxlIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLmxheW91dC10YWJsZSA+ICoge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG4uY2VudGVyLWZsb2F0cyB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDUwJTtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLmNlbnRlci1mbG9hdHMgPiAuaW5uZXIge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsZWZ0OiAtNTAlO1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi52aXN1YWxseS1oaWRkZW4ge1xuICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG4gIGhlaWdodDogMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBvdmVyZmxvdy13cmFwOiBub3JtYWw7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICB3aWR0aDogMXB4OyB9XG5cbi5tZXNzYWdlcyB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBtYXJnaW46IDQwcHggYXV0bzsgfVxuXG4uYmxvY2stbG9jYWwtdGFza3MtYmxvY2sge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogNDUwcHg7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMjBweDtcbiAgei1pbmRleDogMTAwMDA7IH1cbiAgLmJsb2NrLWxvY2FsLXRhc2tzLWJsb2NrID4gLmNvbnRleHR1YWwge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmJsb2NrLWxvY2FsLXRhc2tzLWJsb2NrIHVsLnRhYnMgbGkge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLmJsb2NrLWxvY2FsLXRhc2tzLWJsb2NrIHVsLnRhYnMgbGkgYSB7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC44KTsgfVxuICAgICAgLmJsb2NrLWxvY2FsLXRhc2tzLWJsb2NrIHVsLnRhYnMgbGkgYTpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6ICMwMDAwMDA7IH1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogNjIuNSU7IH1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjg7XG4gIGNvbG9yOiAjM2QzZDNkOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NDBweCkge1xuICAgIGJvZHkge1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgZm9udC1zaXplOiAxLjZyZW07IH0gfVxuICBib2R5LmNrZV9lZGl0YWJsZSB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgIHBhZGRpbmc6IDIwcHggIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmICFpbXBvcnRhbnQ7IH1cblxuaDE6Zmlyc3QtY2hpbGQsIGgyOmZpcnN0LWNoaWxkLCBoMzpmaXJzdC1jaGlsZCwgaDQ6Zmlyc3QtY2hpbGQsIGg1OmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDsgfVxuXG5oMTpsYXN0LWNoaWxkLCBoMjpsYXN0LWNoaWxkLCBoMzpsYXN0LWNoaWxkLCBoNDpsYXN0LWNoaWxkLCBoNTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgZm9udC1zaXplOiAyLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBtYXJnaW46IDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc0MHB4KSB7XG4gICAgaDEge1xuICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgZm9udC1zaXplOiAzcmVtOyB9IH1cblxuaDIge1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtc2l6ZTogMi40cmVtO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbWFyZ2luOiAwIDAgMzBweCAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NDBweCkge1xuICAgIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgIGZvbnQtc2l6ZTogMi44cmVtOyB9IH1cblxuaDMge1xuICBmb250LXNpemU6IDIzcHg7XG4gIGZvbnQtc2l6ZTogMi4zcmVtO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbWFyZ2luOiAwIDAgMzBweCAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NDBweCkge1xuICAgIGgzIHtcbiAgICAgIGZvbnQtc2l6ZTogMjZweDtcbiAgICAgIGZvbnQtc2l6ZTogMi42cmVtOyB9IH1cblxuaDQge1xuICBmb250LXNpemU6IDIycHg7XG4gIGZvbnQtc2l6ZTogMi4ycmVtO1xuICBsaW5lLWhlaWdodDogMTtcbiAgbWFyZ2luOiAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NDBweCkge1xuICAgIGg0IHtcbiAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgIGZvbnQtc2l6ZTogMi40cmVtOyB9IH1cblxuaDUge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzQwcHgpIHtcbiAgICBoNSB7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICBmb250LXNpemU6IDJyZW07IH0gfVxuXG5oNiB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBtYXJnaW46IDA7IH1cblxucCwgdWwsIG9sIHtcbiAgbWFyZ2luOiAzMHB4IDA7IH1cbiAgcDpmaXJzdC1jaGlsZCwgdWw6Zmlyc3QtY2hpbGQsIG9sOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tdG9wOiAwOyB9XG4gIHA6bGFzdC1jaGlsZCwgdWw6bGFzdC1jaGlsZCwgb2w6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG5hIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICBhOmhvdmVyLCBhOmZvY3VzIHtcbiAgICBjb2xvcjogIzNkM2QzZDsgfVxuXG5hLmltYWdlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG91dGxpbmUtb2Zmc2V0OiAycHg7IH1cblxuYmxvY2txdW90ZSB7XG4gIHBhZGRpbmc6IDIwcHggMzBweDtcbiAgbWFyZ2luOiAzMHB4IDA7IH1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmFydGljbGUuZW1iZWRkZWQtZW50aXR5ICsgYXJ0aWNsZS5lbWJlZGRlZC1lbnRpdHkge1xuICBtYXJnaW4tdG9wOiAxNXB4OyB9XG5cbmlmcmFtZSB7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbnRhYmxlIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgdGFibGUgY2FwdGlvbiB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIG1hcmdpbjogMDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc0MHB4KSB7XG4gICAgICB0YWJsZSBjYXB0aW9uIHtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICBmb250LXNpemU6IDIuNHJlbTsgfSB9XG4gIHRhYmxlIHRoIHtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc0MHB4KSB7XG4gICAgICB0YWJsZSB0aCB7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IH0gfVxuICB0YWJsZSB0aGVhZCB0aCB7XG4gICAgYmFja2dyb3VuZDogI2M5YzljOTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIHRhYmxlIHRib2R5IHRoIHtcbiAgICBmb250LXdlaWdodDogYm9sZDsgfVxuICB0YWJsZSB0aCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICB0YWJsZSB0aCxcbiAgdGFibGUgdGQge1xuICAgIHBhZGRpbmc6IDVweCAxMHB4OyB9XG4gIHRhYmxlIHRyIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmOyB9XG5cbi50YWJsZS13cmFwIHtcbiAgbWFyZ2luOiAzMHB4IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAudGFibGUtd3JhcC5zY3JvbGwge1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG4gICAgb3ZlcmZsb3cteTogaGlkZGVuOyB9XG5cbi5zY3JvbGwtaW5kaWNhdG9yIHtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgZGlzcGxheTogbm9uZTsgfVxuICAuc2Nyb2xsLWluZGljYXRvciArIC50YWJsZS13cmFwIHtcbiAgICBtYXJnaW4tdG9wOiAwOyB9XG5cbi5idXR0b24ge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzAwN2JmZjtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuNWVtOyB9XG4gIC5idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICMwRTZCQUM7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbmZvcm0gLmZvcm0taXRlbSB7XG4gIG1hcmdpbjogMzBweCAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgZm9ybSAuZm9ybS1pdGVtOjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiB0YWJsZTsgfVxuICBmb3JtIC5mb3JtLWl0ZW06Zmlyc3QtY2hpbGQge1xuICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgZm9ybSAuZm9ybS1pdGVtOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cblxuZm9ybSBpbnB1dCwgZm9ybSBzZWxlY3QsIGZvcm0gdGV4dGFyZWEsIGZvcm0gYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lICFpbXBvcnRhbnQ7XG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7IH1cblxuZm9ybSBpbnB1dFt0eXBlPVwidGV4dFwiXSwgZm9ybSBpbnB1dFt0eXBlPVwiZW1haWxcIl0sIGZvcm0gaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLCBmb3JtIGlucHV0W3R5cGU9XCJ0ZWxcIl0sIGZvcm0gaW5wdXRbdHlwZT1cIm51bWJlclwiXSwgZm9ybSBzZWxlY3Qge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCAjM2QzZDNkO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMCAyMHB4O1xuICBsaW5lLWhlaWdodDogMzVweDtcbiAgaGVpZ2h0OiAzNXB4OyB9XG5cbmZvcm0gbGFiZWwsIGZvcm0gLmZvcm0tY29tcG9zaXRlIGxlZ2VuZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuICBmb3JtIGxhYmVsLmZvcm0tcmVxdWlyZWQ6YWZ0ZXIsIGZvcm0gLmZvcm0tY29tcG9zaXRlIGxlZ2VuZC5mb3JtLXJlcXVpcmVkOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAqXCI7XG4gICAgY29sb3I6IHJlZDsgfVxuXG5mb3JtIGxhYmVsLmVycm9yIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgY29sb3I6ICNmZjAwMDA7IH1cblxuZm9ybSB0ZXh0YXJlYSB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMzZDNkM2Q7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbmZvcm0gYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0sIGZvcm0gaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG91dGxpbmUtb2Zmc2V0OiAycHg7IH1cbiAgZm9ybSBidXR0b25bdHlwZT1cInN1Ym1pdFwiXTpmb2N1cywgZm9ybSBpbnB1dFt0eXBlPVwic3VibWl0XCJdOmZvY3VzIHtcbiAgICBvdXRsaW5lOiAxcHggZG90dGVkICMwMDdiZmY7IH1cblxuZm9ybSBmaWVsZHNldC53ZWJmb3JtLXR5cGUtZmllbGRzZXQge1xuICBtYXJnaW46IDMwcHggMDtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG4gIGZvcm0gZmllbGRzZXQud2ViZm9ybS10eXBlLWZpZWxkc2V0ID4gbGVnZW5kIHtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgZm9udC1zaXplOiAyLjRyZW07XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgbWFyZ2luOiAwIDAgMzBweCAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc0MHB4KSB7XG4gICAgICBmb3JtIGZpZWxkc2V0LndlYmZvcm0tdHlwZS1maWVsZHNldCA+IGxlZ2VuZCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgICAgZm9udC1zaXplOiAyLjhyZW07IH0gfVxuXG5mb3JtIC5mb3JtLWNoZWNrYm94ZXMgLmZvcm0taXRlbSwgZm9ybSAuZm9ybS1yYWRpb3MgLmZvcm0taXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAxMHB4IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gIHdpZHRoOiAxMDAlOyB9XG5cbmZvcm0gLmZvcm0tdHlwZS1jaGVja2JveCBsYWJlbCxcbmZvcm0gLmZvcm0tdHlwZS1yYWRpbyBsYWJlbCB7XG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7IH1cblxuZm9ybSAuZGVzY3JpcHRpb24ge1xuICBtYXJnaW4tdG9wOiAxMHB4OyB9XG5cbmZvcm0gaW5wdXQuZm9ybS10eXBlLWRhdGUge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvY2FsZW5kYXIuc3ZnXCIpIDk1JSBjZW50ZXIgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IDIwcHggMjBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyOyB9XG5cbmJ1dHRvblt0eXBlPVwic3VibWl0XCJdLCBpbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwMDdiZmY7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xuICBib3JkZXItcmFkaXVzOiAwLjVlbTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lICFpbXBvcnRhbnQ7XG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7IH1cbiAgYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJzdWJtaXRcIl06aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICMwRTZCQUM7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdOmZvY3VzLCBpbnB1dFt0eXBlPVwic3VibWl0XCJdOmZvY3VzIHtcbiAgICBvdXRsaW5lOiAxcHggZG90dGVkICMwMDA7IH1cblxuLmZzLWRyb3Bkb3duLmZzLWxpZ2h0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAvKiBNVUxUSVBMRSAqLyB9XG4gIC5mcy1kcm9wZG93bi5mcy1saWdodCAuZnMtZHJvcGRvd24tc2VsZWN0ZWQge1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzNkM2QzZDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAwIDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgaGVpZ2h0OiAzNXB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmYgIWltcG9ydGFudDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIHotaW5kZXg6IC0xO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMzZDNkM2QgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4OyB9XG4gICAgLmZzLWRyb3Bkb3duLmZzLWxpZ2h0IC5mcy1kcm9wZG93bi1zZWxlY3RlZDphZnRlciB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5mcy1kcm9wZG93bi5mcy1saWdodC5mcy1kcm9wZG93bi1vcGVuIC5mcy1kcm9wZG93bi1zZWxlY3RlZDpiZWZvcmUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC0xODBkZWcpO1xuICAgIHRvcDogMTBweDsgfVxuICAuZnMtZHJvcGRvd24uZnMtbGlnaHQuZnMtZHJvcGRvd24tb3BlbiAuZnMtZHJvcGRvd24tb3B0aW9ucyB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfVxuICAuZnMtZHJvcGRvd24uZnMtbGlnaHQgLmZzLWRyb3Bkb3duLW9wdGlvbnMge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMzZDNkM2Q7XG4gICAgYm9yZGVyLXRvcDogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuICAuZnMtZHJvcGRvd24uZnMtbGlnaHQgLmZzLWRyb3Bkb3duLWl0ZW0ge1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xuICAgIGJhY2tncm91bmQ6ICNmZmYgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gICAgbWFyZ2luOiAwOyB9XG4gICAgLmZzLWRyb3Bkb3duLmZzLWxpZ2h0IC5mcy1kcm9wZG93bi1pdGVtOmhvdmVyLCAuZnMtZHJvcGRvd24uZnMtbGlnaHQgLmZzLWRyb3Bkb3duLWl0ZW06Zm9jdXMge1xuICAgICAgcGFkZGluZy1sZWZ0OiAyNXB4OyB9XG4gICAgLmZzLWRyb3Bkb3duLmZzLWxpZ2h0IC5mcy1kcm9wZG93bi1pdGVtOmZpcnN0LWNoaWxkIHtcbiAgICAgIHBhZGRpbmctdG9wOiAyMHB4OyB9XG4gICAgLmZzLWRyb3Bkb3duLmZzLWxpZ2h0IC5mcy1kcm9wZG93bi1pdGVtOmxhc3QtY2hpbGQge1xuICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7IH1cbiAgLmZzLWRyb3Bkb3duLmZzLWxpZ2h0LmZzLWRyb3Bkb3duLW11bHRpcGxlIHtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogMDsgfVxuICAgIC5mcy1kcm9wZG93bi5mcy1saWdodC5mcy1kcm9wZG93bi1tdWx0aXBsZSBzZWxlY3Qge1xuICAgICAgei1pbmRleDogLTE7IH1cbiAgICAuZnMtZHJvcGRvd24uZnMtbGlnaHQuZnMtZHJvcGRvd24tbXVsdGlwbGUgLmZzLWRyb3Bkb3duLW9wdGlvbnMge1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBib3JkZXI6IG5vbmU7IH1cblxuLyogQ0hFQ0tCT1ggKi9cbi5mcy1jaGVja2JveC1sYWJlbC5mcy1saWdodCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBsZXR0ZXItc3BhY2luZzogMDtcbiAgcG9zaXRpb246IHN0YXRpYztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBmbG9hdDogbm9uZSAhaW1wb3J0YW50O1xuICBsaW5lLWhlaWdodDogMzBweDtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7IH1cblxuLmZzLWNoZWNrYm94LmZzLWxpZ2h0IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiBSQURJTyAqLyB9XG4gIC5mcy1jaGVja2JveC5mcy1saWdodDo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLmZzLWNoZWNrYm94LmZzLWxpZ2h0IC5mcy1jaGVja2JveC1tYXJrZXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjM2QzZDNkOyB9XG4gIC5mcy1jaGVja2JveC5mcy1saWdodC5mcy1jaGVja2JveC1mb2N1cyAuZnMtY2hlY2tib3gtbWFya2VyIHtcbiAgICBvdXRsaW5lOiAxcHggZGFzaGVkICMzZDNkM2Q7IH1cbiAgLmZzLWNoZWNrYm94LmZzLWxpZ2h0Om5vdCguZnMtY2hlY2tib3gtZGlzYWJsZWQpOmhvdmVyOm5vdCguZnMtY2hlY2tib3gtY2hlY2tlZCkgLmZzLWNoZWNrYm94LW1hcmtlciB7XG4gICAgYm9yZGVyOiAycHggc29saWQgIzNkM2QzZCAhaW1wb3J0YW50OyB9XG4gIC5mcy1jaGVja2JveC5mcy1saWdodCAuZnMtY2hlY2tib3gtZmxhZzpiZWZvcmUge1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLWNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIHdpZHRoOiAxMHB4O1xuICAgIG1hcmdpbjogMnB4IDAgMCAxMXB4OyB9XG4gIC5mcy1jaGVja2JveC5mcy1saWdodC5mcy1jaGVja2JveC1yYWRpbyAuZnMtY2hlY2tib3gtbWFya2VyIHtcbiAgICBib3JkZXItcmFkaXVzOiA5OWVtOyB9XG4gIC5mcy1jaGVja2JveC5mcy1saWdodC5mcy1jaGVja2JveC1yYWRpbyAuZnMtY2hlY2tib3gtZmxhZyB7XG4gICAgYmFja2dyb3VuZDogIzAwMCAhaW1wb3J0YW50OyB9XG5cbi5tZWRpYS0tbG9hZGluZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubWVkaWEtLWxvYWRpbmc6YWZ0ZXIge1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0O1xuICAgIGNvbnRlbnQ6IFwiXFwwMjBcIjtcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDMycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IC0xNnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB6LWluZGV4OiAyO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci10b3A6IDVweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgYm9yZGVyLXJpZ2h0OiA1cHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIGJvcmRlci1ib3R0b206IDVweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjZWVlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKSB0cmFuc2xhdGVYKDEyMHB4KTtcbiAgICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTtcbiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXI7XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAuOHM7XG4gICAgYW5pbWF0aW9uLW5hbWU6IGFuaW1zaXRpb24tbG9hZGluZzsgfVxuICAubWVkaWEtLWxvYWRpbmc6YWZ0ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7IH1cbiAgLm1lZGlhLS1sb2FkaW5nOmJlZm9yZSB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG4ubWVkaWEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmJsYXp5IC5tZWRpYSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDsgfVxuICAubWVkaWEgLmltYWdlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgfVxuICAgIC5tZWRpYSAuZmllbGQtLW5hbWUtZmllbGQtbWVkaWEtaW1hZ2UgaW1nOm5vdCguYi1sYXp5KSxcbiAgICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZy5iLWxhenkuYi1sb2FkZWQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyXCI7IH1cbiAgICAgIC5mb2N1cy10b3AtbGVmdCAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZzpub3QoLmItbGF6eSksIC5mb2N1cy10b3AtbGVmdFxuICAgICAgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZSBpbWcuYi1sYXp5LmItbG9hZGVkIHtcbiAgICAgICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAtby1vYmplY3QtcG9zaXRpb246IDAgMDtcbiAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiAwIDA7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyOyBvYmplY3QtcG9zaXRpb246IDAgMFwiOyB9XG4gICAgICAuZm9jdXMtdG9wLWNlbnRlciAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZzpub3QoLmItbGF6eSksIC5mb2N1cy10b3AtY2VudGVyXG4gICAgICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZy5iLWxhenkuYi1sb2FkZWQge1xuICAgICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIC1vLW9iamVjdC1wb3NpdGlvbjogNTAlIDA7XG4gICAgICAgIG9iamVjdC1wb3NpdGlvbjogNTAlIDA7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyOyBvYmplY3QtcG9zaXRpb246IDUwJSAwXCI7IH1cbiAgICAgIC5mb2N1cy10b3AtcmlnaHQgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZSBpbWc6bm90KC5iLWxhenkpLCAuZm9jdXMtdG9wLXJpZ2h0XG4gICAgICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZy5iLWxhenkuYi1sb2FkZWQge1xuICAgICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIC1vLW9iamVjdC1wb3NpdGlvbjogMTAwJSAwO1xuICAgICAgICBvYmplY3QtcG9zaXRpb246IDEwMCUgMDtcbiAgICAgICAgZm9udC1mYW1pbHk6IFwib2JqZWN0LWZpdDogY292ZXI7IG9iamVjdC1wb3NpdGlvbjogMTAwJSAwXCI7IH1cbiAgICAgIC5mb2N1cy1taWRkbGUtbGVmdCAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZzpub3QoLmItbGF6eSksIC5mb2N1cy1taWRkbGUtbGVmdFxuICAgICAgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZSBpbWcuYi1sYXp5LmItbG9hZGVkIHtcbiAgICAgICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAtby1vYmplY3QtcG9zaXRpb246IDAgNTAlO1xuICAgICAgICBvYmplY3QtcG9zaXRpb246IDAgNTAlO1xuICAgICAgICBmb250LWZhbWlseTogXCJvYmplY3QtZml0OiBjb3Zlcjsgb2JqZWN0LXBvc2l0aW9uOiAwIDUwJVwiOyB9XG4gICAgICAuZm9jdXMtbWlkZGxlLWNlbnRlciAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZzpub3QoLmItbGF6eSksIC5mb2N1cy1taWRkbGUtY2VudGVyXG4gICAgICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZy5iLWxhenkuYi1sb2FkZWQge1xuICAgICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIC1vLW9iamVjdC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiA1MCUgNTAlO1xuICAgICAgICBmb250LWZhbWlseTogXCJvYmplY3QtZml0OiBjb3Zlcjsgb2JqZWN0LXBvc2l0aW9uOiA1MCUgNTAlXCI7IH1cbiAgICAgIC5mb2N1cy1taWRkbGUtcmlnaHQgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZSBpbWc6bm90KC5iLWxhenkpLCAuZm9jdXMtbWlkZGxlLXJpZ2h0XG4gICAgICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZy5iLWxhenkuYi1sb2FkZWQge1xuICAgICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIC1vLW9iamVjdC1wb3NpdGlvbjogMTAwJSA1MCU7XG4gICAgICAgIG9iamVjdC1wb3NpdGlvbjogMTAwJSA1MCU7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyOyBvYmplY3QtcG9zaXRpb246IDEwMCUgNTAlXCI7IH1cbiAgICAgIC5mb2N1cy1ib3R0b20tbGVmdCAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZzpub3QoLmItbGF6eSksIC5mb2N1cy1ib3R0b20tbGVmdFxuICAgICAgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZSBpbWcuYi1sYXp5LmItbG9hZGVkIHtcbiAgICAgICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgICAtby1vYmplY3QtcG9zaXRpb246IDAgMTAwJTtcbiAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiAwIDEwMCU7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyOyBvYmplY3QtcG9zaXRpb246IDAgMTAwJVwiOyB9XG4gICAgICAuZm9jdXMtYm90dG9tLWNlbnRlciAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZzpub3QoLmItbGF6eSksIC5mb2N1cy1ib3R0b20tY2VudGVyXG4gICAgICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZy5iLWxhenkuYi1sb2FkZWQge1xuICAgICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIC1vLW9iamVjdC1wb3NpdGlvbjogNTAlIDEwMCU7XG4gICAgICAgIG9iamVjdC1wb3NpdGlvbjogNTAlIDEwMCU7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyOyBvYmplY3QtcG9zaXRpb246IDUwJSAxMDAlXCI7IH1cbiAgICAgIC5mb2N1cy1ib3R0b20tcmlnaHQgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZSBpbWc6bm90KC5iLWxhenkpLCAuZm9jdXMtYm90dG9tLXJpZ2h0XG4gICAgICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlIGltZy5iLWxhenkuYi1sb2FkZWQge1xuICAgICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIC1vLW9iamVjdC1wb3NpdGlvbjogMTAwJSAxMDAlO1xuICAgICAgICBvYmplY3QtcG9zaXRpb246IDEwMCUgMTAwJTtcbiAgICAgICAgZm9udC1mYW1pbHk6IFwib2JqZWN0LWZpdDogY292ZXI7IG9iamVjdC1wb3NpdGlvbjogMTAwJSAxMDAlXCI7IH1cbiAgICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlLmZvY3VzLXRvcC1sZWZ0IGltZyB7XG4gICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgLW8tb2JqZWN0LXBvc2l0aW9uOiAwIDA7XG4gICAgICBvYmplY3QtcG9zaXRpb246IDAgMDtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyOyBvYmplY3QtcG9zaXRpb246IDAgMFwiOyB9XG4gICAgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZS5mb2N1cy10b3AtY2VudGVyIGltZyB7XG4gICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgLW8tb2JqZWN0LXBvc2l0aW9uOiA1MCUgMDtcbiAgICAgIG9iamVjdC1wb3NpdGlvbjogNTAlIDA7XG4gICAgICBmb250LWZhbWlseTogXCJvYmplY3QtZml0OiBjb3Zlcjsgb2JqZWN0LXBvc2l0aW9uOiA1MCUgMFwiOyB9XG4gICAgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZS5mb2N1cy10b3AtcmlnaHQgaW1nIHtcbiAgICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAtby1vYmplY3QtcG9zaXRpb246IDEwMCUgMDtcbiAgICAgIG9iamVjdC1wb3NpdGlvbjogMTAwJSAwO1xuICAgICAgZm9udC1mYW1pbHk6IFwib2JqZWN0LWZpdDogY292ZXI7IG9iamVjdC1wb3NpdGlvbjogMTAwJSAwXCI7IH1cbiAgICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlLmZvY3VzLW1pZGRsZS1sZWZ0IGltZyB7XG4gICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgLW8tb2JqZWN0LXBvc2l0aW9uOiAwIDUwJTtcbiAgICAgIG9iamVjdC1wb3NpdGlvbjogMCA1MCU7XG4gICAgICBmb250LWZhbWlseTogXCJvYmplY3QtZml0OiBjb3Zlcjsgb2JqZWN0LXBvc2l0aW9uOiAwIDUwJVwiOyB9XG4gICAgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZS5mb2N1cy1taWRkbGUtY2VudGVyIGltZyB7XG4gICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgLW8tb2JqZWN0LXBvc2l0aW9uOiA1MCUgNTAlO1xuICAgICAgb2JqZWN0LXBvc2l0aW9uOiA1MCUgNTAlO1xuICAgICAgZm9udC1mYW1pbHk6IFwib2JqZWN0LWZpdDogY292ZXI7IG9iamVjdC1wb3NpdGlvbjogNTAlIDUwJVwiOyB9XG4gICAgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZS5mb2N1cy1taWRkbGUtcmlnaHQgaW1nIHtcbiAgICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAtby1vYmplY3QtcG9zaXRpb246IDEwMCUgNTAlO1xuICAgICAgb2JqZWN0LXBvc2l0aW9uOiAxMDAlIDUwJTtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyOyBvYmplY3QtcG9zaXRpb246IDEwMCUgNTAlXCI7IH1cbiAgICAubWVkaWEgLmZpZWxkLS1uYW1lLWZpZWxkLW1lZGlhLWltYWdlLmZvY3VzLWJvdHRvbS1sZWZ0IGltZyB7XG4gICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgLW8tb2JqZWN0LXBvc2l0aW9uOiAwIDEwMCU7XG4gICAgICBvYmplY3QtcG9zaXRpb246IDAgMTAwJTtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIm9iamVjdC1maXQ6IGNvdmVyOyBvYmplY3QtcG9zaXRpb246IDAgMTAwJVwiOyB9XG4gICAgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZS5mb2N1cy1ib3R0b20tY2VudGVyIGltZyB7XG4gICAgICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgLW8tb2JqZWN0LXBvc2l0aW9uOiA1MCUgMTAwJTtcbiAgICAgIG9iamVjdC1wb3NpdGlvbjogNTAlIDEwMCU7XG4gICAgICBmb250LWZhbWlseTogXCJvYmplY3QtZml0OiBjb3Zlcjsgb2JqZWN0LXBvc2l0aW9uOiA1MCUgMTAwJVwiOyB9XG4gICAgLm1lZGlhIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZS5mb2N1cy1ib3R0b20tcmlnaHQgaW1nIHtcbiAgICAgIC1vLW9iamVjdC1maXQ6IGNvdmVyO1xuICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAtby1vYmplY3QtcG9zaXRpb246IDEwMCUgMTAwJTtcbiAgICAgIG9iamVjdC1wb3NpdGlvbjogMTAwJSAxMDAlO1xuICAgICAgZm9udC1mYW1pbHk6IFwib2JqZWN0LWZpdDogY292ZXI7IG9iamVjdC1wb3NpdGlvbjogMTAwJSAxMDAlXCI7IH1cblxuLm1lbnUtLW1haW4gdWwubWVudSwgLm1lbnUtLWZvb3RlciB1bC5tZW51IHtcbiAgbWFyZ2luOiAwOyB9XG4gIC5tZW51LS1tYWluIHVsLm1lbnU6OmFmdGVyLCAubWVudS0tZm9vdGVyIHVsLm1lbnU6OmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlOyB9XG5cbi5tZW51LS1tYWluIGxpLCAubWVudS0tZm9vdGVyIGxpIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiA2MHB4O1xuICBwYWRkaW5nOiAxOHB4IDIwcHggMTBweCAyMHB4OyB9XG4gIC5tZW51LS1tYWluIGxpOmZpcnN0LWNoaWxkLCAubWVudS0tZm9vdGVyIGxpOmZpcnN0LWNoaWxkIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7IH1cbiAgLm1lbnUtLW1haW4gbGk6bGFzdC1jaGlsZCwgLm1lbnUtLWZvb3RlciBsaTpsYXN0LWNoaWxkIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG5cbmZvb3Rlci5zaXRlLWZvb3RlciB7XG4gIGJhY2tncm91bmQ6ICNjOWM5Yzk7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjM2QzZDNkOyB9XG4gIGZvb3Rlci5zaXRlLWZvb3Rlcjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgZm9vdGVyLnNpdGUtZm9vdGVyIC5uYXZpZ2F0aW9uIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIGNsZWFyOiBub25lOyB9XG5cbi5zaXRlLWhlYWRlciB7XG4gIGJhY2tncm91bmQ6ICNjOWM5Yzk7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjM2QzZDNkOyB9XG4gIC5zaXRlLWhlYWRlcjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLnNpdGUtaGVhZGVyIC5sb2dvIHtcbiAgICBmbG9hdDogbGVmdDsgfVxuXG4ubWFpbi1tZW51IHtcbiAgZmxvYXQ6IGxlZnQ7IH1cbiAgLm1haW4tbWVudTo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLm1haW4tbWVudSAubmF2aWdhdGlvbiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBjbGVhcjogbm9uZTsgfVxuXG4ubGlzdGluZyAubm8tcmVzdWx0cyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWluLWhlaWdodDogMjAwcHg7IH1cblxuLmxpc3RpbmcuaXNvdG9wZSAuaXNvR3JpZCB7XG4gIG1pbi1oZWlnaHQ6IDIwMHB4OyB9XG5cbi5saXN0aW5nLmlzb3RvcGUgLm5vLXJlc3VsdHMge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5saXN0aW5nLmlzb3RvcGUgLmlzby1ndXR0ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDA7IH1cblxuLnBhZ2VyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjbGVhcjogYm90aDsgfVxuICAucGFnZXIgdWwge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cbiAgICAucGFnZXIgdWwgbGkge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cbiAgICAgIC5wYWdlciB1bCBsaTpiZWZvcmUge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLnBhZ2VyIHVsIGxpIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgICAgLnBhZ2VyIHVsIGxpLnBhZ2VyX19pdGVtLS1maXJzdCwgLnBhZ2VyIHVsIGxpLnBhZ2VyX19pdGVtLS1sYXN0LCAucGFnZXIgdWwgbGkucGFnZXJfX2l0ZW0tLWVsbGlwc2lzIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgLnBhZ2VyIHVsIGxpLm5leHQgYSwgLnBhZ2VyIHVsIGxpLnByZXYgYSwgLnBhZ2VyIHVsIGxpLnBhZ2VyX19pdGVtLS1uZXh0IGEsIC5wYWdlciB1bCBsaS5wYWdlcl9faXRlbS0tcHJldmlvdXMgYSB7XG4gICAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgIHBhZGRpbmc6IDA7IH1cbiAgICAgICAgLnBhZ2VyIHVsIGxpLm5leHQgYSBzcGFuLCAucGFnZXIgdWwgbGkucHJldiBhIHNwYW4sIC5wYWdlciB1bCBsaS5wYWdlcl9faXRlbS0tbmV4dCBhIHNwYW4sIC5wYWdlciB1bCBsaS5wYWdlcl9faXRlbS0tcHJldmlvdXMgYSBzcGFuIHtcbiAgICAgICAgICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG4gICAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICBvdmVyZmxvdy13cmFwOiBub3JtYWw7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgd2lkdGg6IDFweDsgfVxuICAgICAgICAucGFnZXIgdWwgbGkubmV4dCBhOmJlZm9yZSwgLnBhZ2VyIHVsIGxpLnByZXYgYTpiZWZvcmUsIC5wYWdlciB1bCBsaS5wYWdlcl9faXRlbS0tbmV4dCBhOmJlZm9yZSwgLnBhZ2VyIHVsIGxpLnBhZ2VyX19pdGVtLS1wcmV2aW91cyBhOmJlZm9yZSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpOyB9XG4gICAgICAgIC5wYWdlciB1bCBsaS5uZXh0IGE6aG92ZXI6YmVmb3JlLCAucGFnZXIgdWwgbGkubmV4dCBhOmZvY3VzOmJlZm9yZSwgLnBhZ2VyIHVsIGxpLnByZXYgYTpob3ZlcjpiZWZvcmUsIC5wYWdlciB1bCBsaS5wcmV2IGE6Zm9jdXM6YmVmb3JlLCAucGFnZXIgdWwgbGkucGFnZXJfX2l0ZW0tLW5leHQgYTpob3ZlcjpiZWZvcmUsIC5wYWdlciB1bCBsaS5wYWdlcl9faXRlbS0tbmV4dCBhOmZvY3VzOmJlZm9yZSwgLnBhZ2VyIHVsIGxpLnBhZ2VyX19pdGVtLS1wcmV2aW91cyBhOmhvdmVyOmJlZm9yZSwgLnBhZ2VyIHVsIGxpLnBhZ2VyX19pdGVtLS1wcmV2aW91cyBhOmZvY3VzOmJlZm9yZSB7XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpIHRyYW5zbGF0ZVkoNXB4KTsgfVxuICAgICAgLnBhZ2VyIHVsIGxpLnByZXYsIC5wYWdlciB1bCBsaS5wYWdlcl9faXRlbS0tcHJldmlvdXMge1xuICAgICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgICAgLnBhZ2VyIHVsIGxpLm5leHQsIC5wYWdlciB1bCBsaS5wYWdlcl9faXRlbS0tbmV4dCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAgICAgICAucGFnZXIgdWwgbGkubmV4dCBhOmJlZm9yZSwgLnBhZ2VyIHVsIGxpLnBhZ2VyX19pdGVtLS1uZXh0IGE6YmVmb3JlIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpOyB9XG4gICAgICAgIC5wYWdlciB1bCBsaS5uZXh0IGE6aG92ZXI6YmVmb3JlLCAucGFnZXIgdWwgbGkubmV4dCBhOmZvY3VzOmJlZm9yZSwgLnBhZ2VyIHVsIGxpLnBhZ2VyX19pdGVtLS1uZXh0IGE6aG92ZXI6YmVmb3JlLCAucGFnZXIgdWwgbGkucGFnZXJfX2l0ZW0tLW5leHQgYTpmb2N1czpiZWZvcmUge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZykgdHJhbnNsYXRlWSg1cHgpOyB9XG4gICAgICAucGFnZXIgdWwgbGkgYSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgcGFkZGluZzogMCAxMHB4OyB9XG4gICAgICAgIC5wYWdlciB1bCBsaSBhOmhvdmVyLCAucGFnZXIgdWwgbGkgYTpmb2N1cywgLnBhZ2VyIHVsIGxpIGEuYWN0aXZlIHtcbiAgICAgICAgICBjb2xvcjogIzAwN2JmZjsgfVxuICAgICAgLnBhZ2VyIHVsIGxpLmlzLWFjdGl2ZSBhIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLm5vZGUtLXZpZXctbW9kZS1jYXJkIHtcbiAgd2lkdGg6IDMxLjkxNDg5JTtcbiAgY2xlYXI6IHJpZ2h0O1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIG1hcmdpbi1yaWdodDogMi4xMjc2NiU7IH1cbiAgLm5vZGUtLXZpZXctbW9kZS1jYXJkID4gLndyYXBwZXIge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMzZDNkM2Q7XG4gICAgcGFkZGluZzogMjBweDsgfVxuXG5tYWluIHtcbiAgbWFyZ2luLXRvcDogMjBweDsgfVxuICBtYWluOjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiB0YWJsZTsgfVxuXG4ubGF5b3V0LWNvbnRhaW5lciB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMTQwMHB4O1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubGF5b3V0LWNvbnRhaW5lcjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDE0MzBweCkge1xuICAgIC5sYXlvdXQtY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7IH0gfVxuXG4ubGF5b3V0LWNvbnRlbnQge1xuICBwYWRkaW5nOiA0MHB4IDAgODBweDsgfVxuIiwiQG1peGluIHRyYW5zaXRpb24oJHdoYXQ6IGFsbCwgJHRpbWU6IDAuMnMsICRob3c6IGVhc2UtaW4tb3V0KSB7XHJcbiAgICB0cmFuc2l0aW9uOiAkd2hhdCAkdGltZSAkaG93O1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGFuaW1zaXRpb24tbG9hZGluZ3swJXt0cmFuc2Zvcm06cm90YXRlKDBkZWcpfXRve3RyYW5zZm9ybTpyb3RhdGUoMXR1cm4pfX1cclxuXHJcbkBtaXhpbiBsb2FkZXIoKXtcclxuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xyXG5cclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbigpO1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXFwwMjBcIjtcclxuICAgICAgICB3aWR0aDogMzJweDtcclxuICAgICAgICBoZWlnaHQ6IDMycHg7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC0xNnB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICB6LWluZGV4OiAyO1xyXG5cclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXItdG9wOiA1cHggc29saWQgcmdiYSgwLDAsMCwuMik7XHJcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiA1cHggc29saWQgcmdiYSgwLDAsMCwuMik7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogNXB4IHNvbGlkIHJnYmEoMCwwLDAsLjIpO1xyXG4gICAgICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2VlZTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCkgdHJhbnNsYXRlWCgxMjBweCk7XHJcbiAgICAgICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7XHJcbiAgICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyO1xyXG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogLjhzO1xyXG4gICAgICAgIGFuaW1hdGlvbi1uYW1lOiBhbmltc2l0aW9uLWxvYWRpbmc7XHJcbiAgICB9XHJcblxyXG59IiwiXHJcbi5jbGVhcmZpeCB7XHJcbiAgICBAaW5jbHVkZSBjbGVhcmZpeCgpO1xyXG59XHJcblxyXG5cclxuQG1peGluIGhvdmVyKCl7XHJcbiAgICAmOmhvdmVyLFxyXG4gICAgJjpmb2N1c3tcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIG1hcmdpblJlc2V0cygkc2lkZXM6IGZhbHNlKXtcclxuICAgICY6Zmlyc3QtY2hpbGR7XHJcbiAgICAgICAgQGlmICRzaWRlc3tcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcclxuICAgICAgICB9QGVsc2V7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6MDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmOmxhc3QtY2hpbGR7XHJcbiAgICAgICAgQGlmICRzaWRlc3tcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OjA7XHJcbiAgICAgICAgfUBlbHNle1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOjA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gcGFkZGluZygkcHgsJGRpcmVjdGlvbjogc2lkZSl7XHJcbiAgICBAaWYgJGRpcmVjdGlvbiA9PSB0b3B7XHJcbiAgICAgICAgcGFkZGluZy10b3A6JHB4OyBwYWRkaW5nLWJvdHRvbTokcHg7XHJcbiAgICB9XHJcbiAgICBAaWYgJGRpcmVjdGlvbiA9PSBzaWRle1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDokcHg7IHBhZGRpbmctcmlnaHQ6JHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gbWFyZ2luKCRweCwkZGlyZWN0aW9uKXtcclxuICAgIEBpZiAkZGlyZWN0aW9uID09IHRvcHtcclxuICAgICAgICBtYXJnaW4tdG9wOiRweDsgbWFyZ2luLWJvdHRvbTokcHg7XHJcbiAgICB9XHJcbiAgICBAaWYgJGRpcmVjdGlvbiA9PSBzaWRle1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiRweDsgbWFyZ2luLXJpZ2h0OiRweDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIG1heFdpZHRoKCR3aWR0aDogJGNvbnRhaW5lci1tYXgtd2lkdGgsICRjZW50ZXI6IHRydWUpe1xyXG4gICAgQGlmICRjZW50ZXJ7XHJcbiAgICAgICAgQGluY2x1ZGUgbWFyZ2luKGF1dG8sc2lkZSk7XHJcbiAgICB9XHJcbiAgICBtYXgtd2lkdGg6ICR3aWR0aDtcclxufVxyXG5cclxuQG1peGluIGNvbnRhaW5lcigkcGFkZGluZzogdHJ1ZSwgJG1heFdpZHRoOiAkY29udGFpbmVyLW1heC13aWR0aCkge1xyXG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcclxuICAgIEBpbmNsdWRlIG1heFdpZHRoKCRtYXhXaWR0aCk7XHJcbiAgICBAaWYgJHBhZGRpbmcge1xyXG4gICAgICAgIEBpbmNsdWRlIHBhZGRpbmcoJHNtYWxsLXNjcmVlbi1wYWRkaW5nLHNpZGUpO1xyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGJwLS1sYXJnZSkge1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBwYWRkaW5nKDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIEBlbHNle1xyXG4gICAgICAgIEBpbmNsdWRlIHBhZGRpbmcoMCk7XHJcbiAgICB9XHJcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcclxufVxyXG5cclxuQG1peGluIGNvbnRlbnQtY29udGFpbmVyKCRwYWRkaW5nOiB0cnVlKXtcclxuICAgIEBpZiAkcGFkZGluZyB7XHJcbiAgICAgICAgQGluY2x1ZGUgY29udGFpbmVyKHRydWUsICRjb250ZW50LXdpZHRoKTtcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRicC0tY29udGVudCl7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHBhZGRpbmcoMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfUBlbHNle1xyXG4gICAgICAgIEBpbmNsdWRlIGNvbnRhaW5lcihmYWxzZSwgJGNvbnRlbnQtd2lkdGgpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uY29udGFpbmVye1xyXG4gICAgQGluY2x1ZGUgY29udGFpbmVyKCk7XHJcbn1cclxuLmNvbnRlbnQtY29udGFpbmVye1xyXG4gICAgQGluY2x1ZGUgY29udGVudC1jb250YWluZXIoKTtcclxufVxyXG5cclxuQG1peGluIHJvd01hcmdpbigkc21hbGw6IGZhbHNlLCAkZm9yY2U6IGZhbHNlKXtcclxuICAgIG1hcmdpbi10b3A6JHJvdy1tYXJnaW4tc21hbGw7IG1hcmdpbi1ib3R0b206JHJvdy1tYXJnaW4tc21hbGw7XHJcbiAgICBAaWYgbm90ICRzbWFsbHtcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRicC0tdGFibGV0LWxhbmRzY2FwZSl7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6JHJvdy1tYXJnaW47IG1hcmdpbi1ib3R0b206JHJvdy1tYXJnaW47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQGlmIG5vdCAkZm9yY2V7XHJcbiAgICAgICAgQGluY2x1ZGUgbWFyZ2luUmVzZXRzKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiByb3dQYWRkaW5nKCRzbWFsbDogZmFsc2Upe1xyXG4gICAgcGFkZGluZy10b3A6JHJvdy1tYXJnaW4tc21hbGw7IHBhZGRpbmctYm90dG9tOiRyb3ctbWFyZ2luLXNtYWxsO1xyXG4gICAgQGlmIG5vdCAkc21hbGx7XHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkYnAtLXRhYmxldC1sYW5kc2NhcGUpe1xyXG4gICAgICAgICAgICBwYWRkaW5nLXRvcDokcm93LW1hcmdpbjsgcGFkZGluZy1ib3R0b206JHJvdy1tYXJnaW47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gdmVydGljYWxDZW50ZXIoKXtcclxuICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrOyBwb3NpdGlvbjphYnNvbHV0ZTsgbGVmdDowOyB0b3A6NTAlOyB3aWR0aDoxMDAlOyB0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNTAlKTtcclxufVxyXG5cclxuQG1peGluIGhvcml6b250YWxDZW50ZXIoKXtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlOyBsZWZ0OjUwJTsgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTUwJSk7XHJcbn1cclxuXHJcbkBtaXhpbiBhYnNvbHV0ZUNlbnRlcigpe1xyXG4gICAgcG9zaXRpb246YWJzb2x1dGU7IHRvcDo1MCU7IGxlZnQ6NTAlOyB0cmFuc2Zvcm06dHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xyXG59XHJcblxyXG5AbWl4aW4gZGlzcGxheVRhYmxlKCl7XHJcbiAgICBkaXNwbGF5OnRhYmxlOyBoZWlnaHQ6MTAwJTsgd2lkdGg6MTAwJTtcclxufVxyXG5cclxuQG1peGluIHRhYmxlQ2VsbCgkd2lkdGg6IDEwMCUsICRhbGlnbjogdG9wKXtcclxuICAgIGRpc3BsYXk6dGFibGUtY2VsbDsgd2lkdGg6JHdpZHRoOyB2ZXJ0aWNhbC1hbGlnbjokYWxpZ247XHJcbn1cclxuXHJcbkBtaXhpbiB2ZXJ0aWNhbEFsaWduKCR3aWR0aDphdXRvKXtcclxuICAgIEBpbmNsdWRlIGRpc3BsYXlUYWJsZSgpO1xyXG4gICAgPiAqIHtcclxuICAgICAgICBAaW5jbHVkZSB0YWJsZUNlbGwoJHdpZHRoLG1pZGRsZSk7XHJcbiAgICB9XHJcbn1cclxuLmxheW91dC10YWJsZXtcclxuICAgIEBpbmNsdWRlIHZlcnRpY2FsQWxpZ24oKTtcclxufVxyXG5cclxuQG1peGluIGNlbnRlckZsb2F0cygpe1xyXG4gICAgZmxvYXQ6bGVmdDsgcG9zaXRpb246cmVsYXRpdmU7IGxlZnQ6NTAlOyB3aWR0aDoxMDAlO1xyXG4gICAgPiAuaW5uZXIge1xyXG4gICAgICAgIGZsb2F0OmxlZnQ7IHBvc2l0aW9uOnJlbGF0aXZlOyBsZWZ0Oi01MCU7IHdpZHRoOjEwMCU7XHJcbiAgICB9XHJcbn1cclxuLmNlbnRlci1mbG9hdHN7XHJcbiAgICBAaW5jbHVkZSBjZW50ZXJGbG9hdHM7XHJcbn1cclxuXHJcbkBtaXhpbiByZXNldEZsb2F0KCl7XHJcbiAgICBmbG9hdDpub25lOyB3aWR0aDphdXRvO1xyXG59XHJcblxyXG5AbWl4aW4gY292ZXIoKXtcclxuICAgIHdpZHRoOjEwMCU7IGhlaWdodDoxMDAlOyBwb3NpdGlvbjphYnNvbHV0ZTsgdG9wOjA7IGxlZnQ6MDtcclxufVxyXG5cclxuQG1peGluIHBzZXVkbygpe1xyXG4gICAgQGluY2x1ZGUgY292ZXIoKTtcclxuICAgIGRpc3BsYXk6YmxvY2s7IGNvbnRlbnQ6Jyc7XHJcbn1cclxuXHJcbkBtaXhpbiByZXNldCgpe1xyXG4gICAgbWFyZ2luOjA7IHBhZGRpbmc6MDsgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIGxpe1xyXG4gICAgICAgIG1hcmdpbjowOyBwYWRkaW5nOjA7IGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6bm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiB2aXN1YWxseUhpZGRlbigpe1xyXG4gICAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO1xyXG4gICAgaGVpZ2h0OiAxcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3ctd3JhcDogbm9ybWFsO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XHJcbiAgICB3aWR0aDogMXB4O1xyXG59XHJcbi52aXN1YWxseS1oaWRkZW57XHJcbiAgICBAaW5jbHVkZSB2aXN1YWxseUhpZGRlbigpO1xyXG59XHJcbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIFByb3ZpZGVzIGFuIGVhc3kgd2F5IHRvIGluY2x1ZGUgYSBjbGVhcmZpeCBmb3IgY29udGFpbmluZyBmbG9hdHMuXG4vLy9cbi8vLyBAbGluayBodHRwOi8vY3NzbW9qby5jb20vbGF0ZXN0X25ld19jbGVhcmZpeF9zb19mYXIvXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVXNhZ2Vcbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgQGluY2x1ZGUgY2xlYXJmaXg7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudDo6YWZ0ZXIge1xuLy8vICAgICBjbGVhcjogYm90aDtcbi8vLyAgICAgY29udGVudDogXCJcIjtcbi8vLyAgICAgZGlzcGxheTogdGFibGU7XG4vLy8gICB9XG5cbkBtaXhpbiBjbGVhcmZpeCB7XG4gICY6OmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICB9XG59XG4iLCJcclxuLy8gTWVhc3VyZW1lbnRzXHJcbiRjb250YWluZXItbWF4LXdpZHRoOiAxNDAwcHg7XHJcbiRzbWFsbC1zY3JlZW4tcGFkZGluZzogMTVweDtcclxuJGNvbnRlbnQtd2lkdGg6IDcwMHB4O1xyXG4kYWRtaW4tYmFyOiAzOXB4O1xyXG4kYWRtaW4tYmFyLW9wZW46IDc5cHg7XHJcblxyXG4vLyBCcmVha3BvaW50IHdpbGwgb3V0cHV0IGZhbGxiYWNrIHNlbGVjdG9ycyBpbiB0aGlzIHN0eWxlc2hlZXRcclxuQGluY2x1ZGUgYnJlYWtwb2ludC1zZXQoXCJubyBxdWVyeSBmYWxsYmFja3NcIiwgdHJ1ZSk7XHJcblxyXG4vLyBTaWduIHBvc3RzXHJcbiR3aWR0aC1zbWFsbDogMzYwcHg7XHJcbiR3aWR0aC1tZWRpdW06IDYwMHB4O1xyXG4kd2lkdGgtdGFibGV0LXBvcnRyYWl0OiA3NDBweDtcclxuJHdpZHRoLWNvbnRlbnQ6ICRjb250ZW50LXdpZHRoKygkc21hbGwtc2NyZWVuLXBhZGRpbmcqMik7XHJcbiR3aWR0aC10YWJsZXQtbGFuZHNjYXBlOiA5NjBweDtcclxuJHdpZHRoLWxhcmdlOiAkY29udGFpbmVyLW1heC13aWR0aCsoJHNtYWxsLXNjcmVlbi1wYWRkaW5nKjIpO1xyXG4kd2lkdGgteGxhcmdlOiAxNjAwcHg7XHJcblxyXG4vLyBNb2JpbGUtZmlyc3QgcXVlcmllc1xyXG4kYnAtLXNtYWxsOiAkd2lkdGgtc21hbGw7XHJcbiRicC0tbWVkaXVtOiAkd2lkdGgtbWVkaXVtO1xyXG4kYnAtLXRhYmxldC1wb3J0cmFpdDogJHdpZHRoLXRhYmxldC1wb3J0cmFpdDtcclxuJGJwLS1jb250ZW50OiAkd2lkdGgtY29udGVudDtcclxuJGJwLS10YWJsZXQtbGFuZHNjYXBlOiAkd2lkdGgtdGFibGV0LWxhbmRzY2FwZTtcclxuJGJwLS1sYXJnZTogJHdpZHRoLWxhcmdlO1xyXG4kYnAtLXhsYXJnZTogJHdpZHRoLXhsYXJnZTtcclxuXHJcblxyXG4vLyBCYXNpYyBsYXlvdXRcclxuJHJvdy1tYXJnaW4tc21hbGw6IDQwcHg7XHJcbiRyb3ctbWFyZ2luOiA3MHB4O1xyXG4kc3BhY2luZzogMjBweDtcclxuXHJcbi8vIEludGVyZmFjZVxyXG4kb3V0bGluZS1vZmZzZXQ6IDJweDtcclxuJG91dGxpbmU6MXB4IGRvdHRlZDtcclxuXHJcbiRib3JkZXI6MXB4IHNvbGlkICRjb2xvci0tYm9yZGVyOyIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gRGVmYXVsdCBWYXJpYWJsZXNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuJEJyZWFrcG9pbnQtU2V0dGluZ3M6IChcbiAgJ2RlZmF1bHQgbWVkaWEnOiBhbGwsXG4gICdkZWZhdWx0IGZlYXR1cmUnOiBtaW4td2lkdGgsXG4gICdkZWZhdWx0IHBhaXInOiB3aWR0aCxcblxuICAnZm9yY2UgYWxsIG1lZGlhIHR5cGUnOiBmYWxzZSxcbiAgJ3RvIGVtcyc6IGZhbHNlLFxuICAndHJhbnNmb3JtIHJlc29sdXRpb25zJzogdHJ1ZSxcblxuICAnbm8gcXVlcmllcyc6IGZhbHNlLFxuICAnbm8gcXVlcnkgZmFsbGJhY2tzJzogZmFsc2UsXG5cbiAgJ2Jhc2UgZm9udCBzaXplJzogMTZweCxcblxuICAnbGVnYWN5IHN5bnRheCc6IGZhbHNlXG4pO1xuXG4kYnJlYWtwb2ludDogKCkgIWRlZmF1bHQ7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSW1wb3J0c1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AaW1wb3J0IFwiYnJlYWtwb2ludC9zZXR0aW5nc1wiO1xuQGltcG9ydCAnYnJlYWtwb2ludC9jb250ZXh0JztcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvaGVscGVycyc7XG5AaW1wb3J0ICdicmVha3BvaW50L3BhcnNlcnMnO1xuQGltcG9ydCAnYnJlYWtwb2ludC9uby1xdWVyeSc7XG5cbkBpbXBvcnQgJ2JyZWFrcG9pbnQvcmVzcG9uZC10byc7XG5cbkBpbXBvcnQgXCJicmVha3BvaW50L2xlZ2FjeS1zZXR0aW5nc1wiO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEJyZWFrcG9pbnQgTWl4aW5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5AbWl4aW4gYnJlYWtwb2ludCgkcXVlcnksICRuby1xdWVyeTogZmFsc2UpIHtcbiAgQGluY2x1ZGUgbGVnYWN5LXNldHRpbmdzLXdhcm5pbmc7XG5cbiAgLy8gUmVzZXQgY29udGV4dHNcbiAgQGluY2x1ZGUgcHJpdmF0ZS1icmVha3BvaW50LXJlc2V0LWNvbnRleHRzKCk7XG5cbiAgJGJyZWFrcG9pbnQ6IGJyZWFrcG9pbnQoJHF1ZXJ5LCBmYWxzZSk7XG5cbiAgJHF1ZXJ5LXN0cmluZzogbWFwLWdldCgkYnJlYWtwb2ludCwgJ3F1ZXJ5Jyk7XG4gICRxdWVyeS1mYWxsYmFjazogbWFwLWdldCgkYnJlYWtwb2ludCwgJ2ZhbGxiYWNrJyk7XG5cbiAgJHByaXZhdGUtYnJlYWtwb2ludC1jb250ZXh0LWhvbGRlcjogbWFwLWdldCgkYnJlYWtwb2ludCwgJ2NvbnRleHQgaG9sZGVyJykgIWdsb2JhbDtcbiAgJHByaXZhdGUtYnJlYWtwb2ludC1xdWVyeS1jb3VudDogbWFwLWdldCgkYnJlYWtwb2ludCwgJ3F1ZXJ5IGNvdW50JykgIWdsb2JhbDtcblxuICAvLyBBbGxvdyBmb3IgYW4gYXMtbmVlZGVkIG92ZXJyaWRlIG9yIHVzYWdlIG9mIG5vIHF1ZXJ5IGZhbGxiYWNrLlxuICBAaWYgJG5vLXF1ZXJ5ICE9IGZhbHNlIHtcbiAgICAkcXVlcnktZmFsbGJhY2s6ICRuby1xdWVyeTtcbiAgfVxuXG4gIEBpZiAkcXVlcnktZmFsbGJhY2sgIT0gZmFsc2Uge1xuICAgICRjb250ZXh0LXNldHRlcjogcHJpdmF0ZS1icmVha3BvaW50LXNldC1jb250ZXh0KCduby1xdWVyeScsICRxdWVyeS1mYWxsYmFjayk7XG4gIH1cblxuICAvLyBQcmludCBPdXQgUXVlcnkgU3RyaW5nXG4gIEBpZiBub3QgYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJpZXMnKSB7XG4gICAgQG1lZGlhICN7JHF1ZXJ5LXN0cmluZ30ge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG5cbiAgQGlmIGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSAhPSBmYWxzZSBvciBicmVha3BvaW50LWdldCgnbm8gcXVlcmllcycpID09IHRydWUge1xuXG4gICAgJHR5cGU6IHR5cGUtb2YoYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJ5IGZhbGxiYWNrcycpKTtcbiAgICAkcHJpbnQ6IGZhbHNlO1xuXG4gICAgQGlmICgkdHlwZSA9PSAnYm9vbCcpIHtcbiAgICAgICRwcmludDogdHJ1ZTtcbiAgICB9XG4gICAgQGVsc2UgaWYgKCR0eXBlID09ICdzdHJpbmcnKSB7XG4gICAgICBAaWYgJHF1ZXJ5LWZhbGxiYWNrID09IGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSB7XG4gICAgICAgICRwcmludDogdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgQGVsc2UgaWYgKCR0eXBlID09ICdsaXN0Jykge1xuICAgICAgQGVhY2ggJHdyYXBwZXIgaW4gYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJ5IGZhbGxiYWNrcycpIHtcbiAgICAgICAgQGlmICRxdWVyeS1mYWxsYmFjayA9PSAkd3JhcHBlciB7XG4gICAgICAgICAgJHByaW50OiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gV3JpdGUgRmFsbGJhY2tcbiAgICBAaWYgKCRxdWVyeS1mYWxsYmFjayAhPSBmYWxzZSkgYW5kICgkcHJpbnQgPT0gdHJ1ZSkge1xuICAgICAgJHR5cGUtZmFsbGJhY2s6IHR5cGUtb2YoJHF1ZXJ5LWZhbGxiYWNrKTtcblxuICAgICAgQGlmICgkdHlwZS1mYWxsYmFjayAhPSAnYm9vbCcpIHtcbiAgICAgICAgI3skcXVlcnktZmFsbGJhY2t9ICYge1xuICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBAZWxzZSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpbmNsdWRlIHByaXZhdGUtYnJlYWtwb2ludC1yZXNldC1jb250ZXh0cygpO1xufVxuXG5cbkBtaXhpbiBtcSgkcXVlcnksICRuby1xdWVyeTogZmFsc2UpIHtcbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgkcXVlcnksICRuby1xdWVyeSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG4iLCIubWVzc2FnZXN7XHJcbiAgICBAaW5jbHVkZSBmb250c2l6ZSgpO1xyXG4gICAgQGluY2x1ZGUgbWF4V2lkdGgoKTtcclxuICAgIG1hcmdpbjo0MHB4IGF1dG87XHJcbn1cclxuXHJcbi5ibG9jay1sb2NhbC10YXNrcy1ibG9jayB7XHJcblxyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiA0NTBweDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTIwcHg7XHJcbiAgICB6LWluZGV4OiAxMDAwMDtcclxuXHJcbiAgICAmID4gLmNvbnRleHR1YWwgeyBkaXNwbGF5OiBub25lOyB9XHJcblxyXG4gICAgdWwudGFicyB7XHJcbiAgICAgICAgbGkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBmb250c2l6ZSgpO1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC44KTtcclxuICAgICAgICAgICAgICAgICY6aG92ZXIgeyBiYWNrZ3JvdW5kOiAjMDAwMDAwOyB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSIsIiRiYXNlLWZvbnQtc2l6ZTogMTY7XHJcbiRtb2JpbGUtZm9udC1zaXplOiAxNTtcclxuJGJhc2UtdHlwb2dyYXBoeS1zcGFjaW5nOiAzMHB4O1xyXG4kYmFzZS1saW5lLWhlaWdodDogMS44O1xyXG5cclxuQG1peGluIGZvbnRzaXplKCRmb250U2l6ZTogJGJhc2UtZm9udC1zaXplKXtcclxuICAgIGZvbnQtc2l6ZTogI3skZm9udFNpemV9cHg7XHJcbiAgICBmb250LXNpemU6ICN7JGZvbnRTaXplIC8gMTB9cmVtO1xyXG59XHJcblxyXG5AbWl4aW4gYm9keS1jb3B5KCkge1xyXG4gICAgQGluY2x1ZGUgZm9udHNpemUoJG1vYmlsZS1mb250LXNpemUpO1xyXG4gICAgbGluZS1oZWlnaHQ6JGJhc2UtbGluZS1oZWlnaHQ7XHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRicC0tdGFibGV0LXBvcnRyYWl0KXtcclxuICAgICAgICBAaW5jbHVkZSBmb250c2l6ZSgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gaDEoKSB7XHJcbiAgICBAaW5jbHVkZSBmb250c2l6ZSgyNSk7XHJcbiAgICBsaW5lLWhlaWdodDoxOyBtYXJnaW46MDtcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGJwLS10YWJsZXQtcG9ydHJhaXQpe1xyXG4gICAgICAgIEBpbmNsdWRlIGZvbnRzaXplKDMwKTtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGgyKCkge1xyXG4gICAgQGluY2x1ZGUgZm9udHNpemUoMjQpO1xyXG4gICAgbGluZS1oZWlnaHQ6MTsgbWFyZ2luOjAgMCAkYmFzZS10eXBvZ3JhcGh5LXNwYWNpbmcgMDtcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGJwLS10YWJsZXQtcG9ydHJhaXQpe1xyXG4gICAgICAgIEBpbmNsdWRlIGZvbnRzaXplKDI4KTtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGgzKCkge1xyXG4gICAgQGluY2x1ZGUgZm9udHNpemUoMjMpO1xyXG4gICAgbGluZS1oZWlnaHQ6MTsgbWFyZ2luOjAgMCAkYmFzZS10eXBvZ3JhcGh5LXNwYWNpbmcgMDtcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJGJwLS10YWJsZXQtcG9ydHJhaXQpe1xyXG4gICAgICAgIEBpbmNsdWRlIGZvbnRzaXplKDI2KTtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIGg0KCkge1xyXG4gICAgQGluY2x1ZGUgZm9udHNpemUoMjIpO1xyXG4gICAgbGluZS1oZWlnaHQ6MTsgbWFyZ2luOjA7XHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50KCRicC0tdGFibGV0LXBvcnRyYWl0KXtcclxuICAgICAgICBAaW5jbHVkZSBmb250c2l6ZSgyNCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBoNSgpIHtcclxuICAgIEBpbmNsdWRlIGZvbnRzaXplKDIwKTtcclxuICAgIGxpbmUtaGVpZ2h0OjE7IG1hcmdpbjowO1xyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCgkYnAtLXRhYmxldC1wb3J0cmFpdCl7XHJcbiAgICAgICAgQGluY2x1ZGUgZm9udHNpemUoMjApO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gaDYoKSB7XHJcbiAgICBAaW5jbHVkZSBmb250c2l6ZSgpO1xyXG4gICAgbGluZS1oZWlnaHQ6MTsgbWFyZ2luOjA7XHJcbn1cclxuXHJcbkBtaXhpbiBmb250aWNvbiAoJGNvbnRlbnQsICRzaXplOjIwcHgsICRjb2xvcjogIzAwMCwgJHRvcDogXCJcIiwgJGxlZnQ6IFwiXCIsICRyaWdodDogXCJcIiwgJGJvdHRvbTogXCJcIiwgJGNlbnRlcjogZmFsc2UsICRtaWRkbGU6IGZhbHNlLCAkZWxlbTogYmVmb3JlKSB7XHJcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcclxuICAgICY6I3skZWxlbX0ge1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oKTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgY29udGVudDogJGNvbnRlbnQ7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjtcclxuICAgICAgICBmb250LXNpemU6JHNpemU7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6J2ljb21vb24nO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6bm9ybWFsO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0Om5vcm1hbDtcclxuICAgICAgICBzcGVhazpub25lO1xyXG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XHJcbiAgICAgICAgd2lkdGg6JHNpemU7XHJcbiAgICAgICAgaGVpZ2h0OiRzaXplO1xyXG4gICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xyXG4gICAgICAgIHRleHQtcmVuZGVyaW5nOm9wdGltaXplTGVnaWJpbGl0eTtcclxuICAgICAgICBsaW5lLWhlaWdodDogJHNpemU7XHJcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgei1pbmRleDoyO1xyXG4gICAgICAgIHRleHQtaW5kZW50OjA7XHJcbiAgICAgICAgQGlmICR0b3AgIT0gJycgeyB0b3A6ICR0b3A7IH1cclxuICAgICAgICBAaWYgJGxlZnQgIT0gJycgeyBsZWZ0OiAkbGVmdDsgfVxyXG4gICAgICAgIEBpZiAkcmlnaHQgIT0gJycgeyByaWdodDogJHJpZ2h0OyB9XHJcbiAgICAgICAgQGlmICRib3R0b20gIT0gJycgeyBib3R0b206ICRib3R0b207IH1cclxuICAgICAgICBAaWYgJGNlbnRlcnsgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTUwJSk7IH1cclxuICAgICAgICBAaWYgJG1pZGRsZXsgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSk7IH1cclxuICAgICAgICBAaWYgJGNlbnRlciBhbmQgJG1pZGRsZXsgdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpOyB9XHJcbiAgICB9XHJcbn0iLCIqIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gICAgZm9udC1zaXplOjYyLjUlO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICAgIEBpbmNsdWRlIGJvZHktY29weSgpO1xyXG4gICAgY29sb3I6JGNvbG9yLS10ZXh0O1xyXG5cclxuICAgICYuY2tlX2VkaXRhYmxle1xyXG4gICAgICAgIEBpbmNsdWRlIGZvbnRzaXplKCk7XHJcbiAgICAgICAgcGFkZGluZzoyMHB4ICFpbXBvcnRhbnQ7IGJhY2tncm91bmQ6I2ZmZiAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuaDEsIGgyLCBoMywgaDQsIGg1e1xyXG4gICAgQGluY2x1ZGUgbWFyZ2luUmVzZXRzKCk7XHJcbn1cclxuaDEgeyBAaW5jbHVkZSBoMSgpOyB9XHJcbmgyIHsgQGluY2x1ZGUgaDIoKTsgfVxyXG5oMyB7IEBpbmNsdWRlIGgzKCk7IH1cclxuaDQgeyBAaW5jbHVkZSBoNCgpOyB9XHJcbmg1IHsgQGluY2x1ZGUgaDUoKTsgfVxyXG5oNiB7IEBpbmNsdWRlIGg2KCk7IH1cclxuXHJcbnAsIHVsLCBvbHtcclxuICAgIEBpbmNsdWRlIG1hcmdpblJlc2V0cygpO1xyXG4gICAgbWFyZ2luOiRiYXNlLXR5cG9ncmFwaHktc3BhY2luZyAwO1xyXG59XHJcblxyXG5hIHtcclxuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oKTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xyXG5cclxuICAgIEBpbmNsdWRlIGhvdmVyKCl7XHJcbiAgICAgICAgY29sb3I6JGNvbG9yLS10ZXh0O1xyXG4gICAgfVxyXG59XHJcblxyXG5hLmltYWdle1xyXG4gICAgZGlzcGxheTpibG9jazsgb3V0bGluZS1vZmZzZXQ6JG91dGxpbmUtb2Zmc2V0O1xyXG59XHJcblxyXG5ibG9ja3F1b3RlIHtcclxuICAgIHBhZGRpbmc6MjBweCAzMHB4OyBtYXJnaW46JGJhc2UtdHlwb2dyYXBoeS1zcGFjaW5nIDA7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG59XHJcblxyXG5hcnRpY2xlLmVtYmVkZGVkLWVudGl0eXtcclxuICAgICsgYXJ0aWNsZS5lbWJlZGRlZC1lbnRpdHl7XHJcbiAgICAgICAgbWFyZ2luLXRvcDokYmFzZS10eXBvZ3JhcGh5LXNwYWNpbmcvMjtcclxuICAgIH1cclxufVxyXG5cclxuaWZyYW1le1xyXG4gICAgd2lkdGg6MTAwJTtcclxufSIsIlxyXG4kY29sb3ItLXByaW1hcnktLWJsdWU6ICMwMDdiZmY7XHJcbiRjb2xvci0tcHJpbWFyeTogJGNvbG9yLS1wcmltYXJ5LS1ibHVlO1xyXG4kY29sb3ItLXNlY29uZGFyeS0tYmx1ZTogIzBFNkJBQztcclxuJGNvbG9yLS1zZWNvbmRhcnk6ICRjb2xvci0tc2Vjb25kYXJ5LS1ibHVlO1xyXG4kY29sb3ItLWdyZXk6ICMzZDNkM2Q7XHJcbiRjb2xvci0tZ3JleS0tbGlnaHQ6ICNjOWM5Yzk7XHJcblxyXG4kY29sb3ItLXRleHQ6ICRjb2xvci0tZ3JleTtcclxuJGNvbG9yLS1ib3JkZXI6ICRjb2xvci0tZ3JleTtcclxuJGNvbG9yLS1iYWNrZ3JvdW5kOiAkY29sb3ItLWdyZXktLWxpZ2h0O1xyXG4iLCJcclxudGFibGV7XHJcbiAgICBAaW5jbHVkZSBmb250c2l6ZSgxNik7XHJcblxyXG4gICAgd2lkdGg6MTAwJTtcclxuXHJcbiAgICBjYXB0aW9ue1xyXG4gICAgICAgIEBpbmNsdWRlIGg0KCk7XHJcbiAgICAgICAgdGV4dC1hbGlnbjpsZWZ0O1xyXG4gICAgfVxyXG5cclxuICAgIHRoe1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOm5vd3JhcDtcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KCRicC0tdGFibGV0LXBvcnRyYWl0KXtcclxuICAgICAgICAgICAgd2hpdGUtc3BhY2U6bm9ybWFsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0aGVhZHtcclxuICAgICAgICB0aHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yLS1iYWNrZ3JvdW5kOyBjb2xvcjojZmZmOyB0ZXh0LWFsaWduOmxlZnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgdGJvZHl7XHJcbiAgICAgICAgdGh7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OmJvbGQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoe1xyXG4gICAgICAgIHRleHQtYWxpZ246bGVmdDtcclxuICAgIH1cclxuXHJcbiAgICB0aCxcclxuICAgIHRke1xyXG4gICAgICAgIHBhZGRpbmc6NXB4IDEwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgdHJ7XHJcbiAgICAgICAgYmFja2dyb3VuZDojZmZmO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLnRhYmxlLXdyYXB7XHJcbiAgICBtYXJnaW46JGJhc2UtdHlwb2dyYXBoeS1zcGFjaW5nIDA7IHBvc2l0aW9uOnJlbGF0aXZlO1xyXG5cclxuICAgICYuc2Nyb2xse1xyXG4gICAgICAgIG92ZXJmbG93LXg6YXV0bzsgb3ZlcmZsb3cteTpoaWRkZW47XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4uc2Nyb2xsLWluZGljYXRvcntcclxuICAgIHBhZGRpbmctcmlnaHQ6MjBweDsgZGlzcGxheTpub25lO1xyXG5cclxuICAgICsgLnRhYmxlLXdyYXB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDowO1xyXG4gICAgfVxyXG5cclxufSIsIkBtaXhpbiBidXR0b24oKSB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQ6ICRjb2xvci0tcHJpbWFyeTtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuNWVtO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRjb2xvci0tc2Vjb25kYXJ5O1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIH1cclxufVxyXG5cclxuLmJ1dHRvbntcclxuICAgIEBpbmNsdWRlIGJ1dHRvbigpO1xyXG59IiwiJG1hcmdpbi1mb3JtLWl0ZW06IDMwcHg7XHJcbiRmb3JtLWZpZWxkLWhlaWdodDogMzVweDtcclxuXHJcbkBtaXhpbiBsYWJlbCgpIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrOyBtYXJnaW4tYm90dG9tOiAxMHB4OyBmb250LXdlaWdodDpib2xkO1xyXG59XHJcblxyXG5AbWl4aW4gZmllbGQoKSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmOyBib3JkZXI6JGJvcmRlcjsgd2lkdGg6MTAwJTsgcGFkZGluZzowIDIwcHg7IGxpbmUtaGVpZ2h0OiRmb3JtLWZpZWxkLWhlaWdodDsgaGVpZ2h0OiRmb3JtLWZpZWxkLWhlaWdodDtcclxufVxyXG5cclxuQG1peGluIHJlcXVpcmVkKCkge1xyXG4gICAgJjphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogXCIgKlwiO1xyXG4gICAgICAgIGNvbG9yOiByZWQ7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5mb3JtIHtcclxuXHJcbiAgICAuZm9ybS1pdGVtIHtcclxuICAgICAgICBAaW5jbHVkZSBjbGVhcmZpeCgpO1xyXG4gICAgICAgIG1hcmdpbjogJG1hcmdpbi1mb3JtLWl0ZW0gMDsgcG9zaXRpb246cmVsYXRpdmU7XHJcbiAgICAgICAgQGluY2x1ZGUgbWFyZ2luUmVzZXRzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEsIGJ1dHRvbntcclxuICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSAhaW1wb3J0YW50OyAtd2Via2l0LWJvcmRlci1yYWRpdXM6MCAhaW1wb3J0YW50OyBib3JkZXItcmFkaXVzOjAgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSwgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sIGlucHV0W3R5cGU9XCJ0ZWxcIl0sIGlucHV0W3R5cGU9XCJudW1iZXJcIl0sIHNlbGVjdCB7XHJcbiAgICAgICAgQGluY2x1ZGUgZmllbGQoKTtcclxuICAgIH1cclxuXHJcbiAgICBsYWJlbCwgLmZvcm0tY29tcG9zaXRlIGxlZ2VuZCB7XHJcbiAgICAgICAgQGluY2x1ZGUgbGFiZWwoKTtcclxuICAgICAgICAmLmZvcm0tcmVxdWlyZWR7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHJlcXVpcmVkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGxhYmVsLmVycm9ye1xyXG4gICAgICAgIEBpbmNsdWRlIGZvbnRzaXplKCk7XHJcbiAgICAgICAgY29sb3I6I2ZmMDAwMDtcclxuICAgIH1cclxuXHJcbiAgICB0ZXh0YXJlYSB7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDsgYm9yZGVyOiRib3JkZXI7IHdpZHRoOjEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7IG91dGxpbmUtb2Zmc2V0OiRvdXRsaW5lLW9mZnNldDtcclxuICAgICAgICAmOmZvY3Vze1xyXG4gICAgICAgICAgICBvdXRsaW5lOiN7JG91dGxpbmV9ICRjb2xvci0tcHJpbWFyeTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZmllbGRzZXQud2ViZm9ybS10eXBlLWZpZWxkc2V0IHtcclxuICAgICAgICBtYXJnaW46ICRtYXJnaW4tZm9ybS1pdGVtIDA7IGJvcmRlcjpub25lOyBwYWRkaW5nOjA7XHJcbiAgICAgICAgPiBsZWdlbmR7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGgyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5mb3JtLWNoZWNrYm94ZXMgLmZvcm0taXRlbSwgLmZvcm0tcmFkaW9zIC5mb3JtLWl0ZW0ge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBtYXJnaW46IDEwcHggMDtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICAgIC5mb3JtLXR5cGUtY2hlY2tib3gsXHJcbiAgICAuZm9ybS10eXBlLXJhZGlve1xyXG4gICAgICAgIGxhYmVse1xyXG4gICAgICAgICAgICB3aWR0aDphdXRvICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICBpbnB1dC5mb3JtLXR5cGUtZGF0ZXtcclxuICAgICAgICBiYWNrZ3JvdW5kOnVybChcIi4uL2ltYWdlcy9jYWxlbmRhci5zdmdcIikgOTUlIGNlbnRlciBuby1yZXBlYXQ7IGJhY2tncm91bmQtc2l6ZToyMHB4IDIwcHg7IHBvc2l0aW9uOnJlbGF0aXZlOyB6LWluZGV4OjI7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl17XHJcbiAgICBAaW5jbHVkZSBidXR0b24oKTtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTpub25lICFpbXBvcnRhbnQ7IC13ZWJraXQtYm9yZGVyLXJhZGl1czowICFpbXBvcnRhbnQ7IGJvcmRlci1yYWRpdXM6MCAhaW1wb3J0YW50O1xyXG5cclxuICAgICY6Zm9jdXN7XHJcbiAgICAgICAgb3V0bGluZToxcHggZG90dGVkICMwMDA7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4iLCIuZnMtZHJvcGRvd24uZnMtbGlnaHQge1xyXG5cclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAuZnMtZHJvcGRvd24tc2VsZWN0ZWQge1xyXG4gICAgICAgIEBpbmNsdWRlIGZpZWxkKCk7XHJcbiAgICAgICAgLy9AaW5jbHVkZSBmb250aWNvbihcIlxcZTkwM1wiLCAyMHB4LCAjMDAwLCA1MCUsIGF1dG8sIDEwcHgsIGF1dG8sIGZhbHNlLCB0cnVlKTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICBib3JkZXI6ICRib3JkZXIgIWltcG9ydGFudDtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OjQwcHg7XHJcblxyXG4gICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbiAgICAmLmZzLWRyb3Bkb3duLW9wZW4ge1xyXG4gICAgICAgIC5mcy1kcm9wZG93bi1zZWxlY3RlZDpiZWZvcmUge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTgwZGVnKTtcclxuICAgICAgICAgICAgdG9wOiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAuZnMtZHJvcGRvd24tb3B0aW9ucyB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmZzLWRyb3Bkb3duLW9wdGlvbnMge1xyXG4gICAgICAgIGJvcmRlcjokYm9yZGVyO1xyXG4gICAgICAgIGJvcmRlci10b3A6bm9uZTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIC5mcy1kcm9wZG93bi1pdGVtIHtcclxuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKCk7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZiAhaW1wb3J0YW50O1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgJjpob3ZlcixcclxuICAgICAgICAmOmZvY3VzIHsgcGFkZGluZy1sZWZ0OiAyNXB4OyB9XHJcbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7IHBhZGRpbmctdG9wOiAyMHB4OyB9XHJcbiAgICAgICAgJjpsYXN0LWNoaWxkIHsgcGFkZGluZy1ib3R0b206IDIwcHg7IH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgLyogTVVMVElQTEUgKi9cclxuICAgICYuZnMtZHJvcGRvd24tbXVsdGlwbGUge1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgICAgIHNlbGVjdCB7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuZnMtZHJvcGRvd24tb3B0aW9ucyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLyogQ0hFQ0tCT1ggKi9cclxuJGNoZWNrYm94LWhlaWdodDogMzBweDtcclxuXHJcbi5mcy1jaGVja2JveC1sYWJlbC5mcy1saWdodCB7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMDtcclxuICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIGZsb2F0OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICBsaW5lLWhlaWdodDogJGNoZWNrYm94LWhlaWdodDtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC0tZmFtaWx5LS1yZWd1bGFyO1xyXG59XHJcbi5mcy1jaGVja2JveC5mcy1saWdodCB7XHJcblxyXG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHJcbiAgICAuZnMtY2hlY2tib3gtbWFya2VyIHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgICAgIHdpZHRoOiAkY2hlY2tib3gtaGVpZ2h0O1xyXG4gICAgICAgIGhlaWdodDogJGNoZWNrYm94LWhlaWdodDtcclxuICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgYm9yZGVyOiRib3JkZXI7XHJcbiAgICB9XHJcbiAgICAmLmZzLWNoZWNrYm94LWZvY3VzIHtcclxuICAgICAgICAuZnMtY2hlY2tib3gtbWFya2VyIHtcclxuICAgICAgICAgICAgb3V0bGluZTogMXB4IGRhc2hlZCAkY29sb3ItLWJvcmRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmOm5vdCguZnMtY2hlY2tib3gtZGlzYWJsZWQpIHtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgJjpub3QoLmZzLWNoZWNrYm94LWNoZWNrZWQpIC5mcy1jaGVja2JveC1tYXJrZXIge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgJGNvbG9yLS1ib3JkZXIgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5mcy1jaGVja2JveC1mbGFnIHtcclxuICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogIzAwMCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDJweCAwIDAgMTFweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyogUkFESU8gKi9cclxuICAgICYuZnMtY2hlY2tib3gtcmFkaW8ge1xyXG4gICAgICAgIC5mcy1jaGVja2JveC1tYXJrZXIge1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA5OWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuZnMtY2hlY2tib3gtZmxhZyB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICMwMDAgIWltcG9ydGFudDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiXHJcbi8qIEdPT0dMRSBGT05UU1xyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnTGlicmUgRnJhbmtsaW4nO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtZGlzcGxheTogc3dhcDtcclxuICAgIHNyYzogbG9jYWwoJ0xpYnJlIEZyYW5rbGluIEJvbGQnKSwgbG9jYWwoJ0xpYnJlRnJhbmtsaW4tQm9sZCcpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvbGlicmVmcmFua2xpbi92Mi9qaXpBUkVWSXRIZ2M4cURJYlNUS3E0WGtSaTJrX2lJMHExcy53b2ZmMlwiKSBmb3JtYXQoJ3dvZmYyJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9saWJyZWZyYW5rbGluL3YyL2ppekFSRVZJdEhnYzhxREliU1RLcTRYa1JpMmtfaUkwcTEwLndvZmZcIikgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkJCLTAyQkMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMTIyLCBVKzIxOTEsIFUrMjE5MywgVSsyMjEyLCBVKzIyMTUsIFUrRkVGRiwgVStGRkZEO1xyXG59XHJcbiovXHJcblxyXG4vKiBJQ09NT09OXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdpY29tb29uJztcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbiAgICBzcmM6IHVybCgnaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2ljb21vb24uaW8vNDI1NjAvTkVJUkEvaWNvbW9vbi53b2ZmMj82cjF5MmUnKSBmb3JtYXQoJ3dvZmYyJyksIHVybCgnaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2ljb21vb24uaW8vNDI1NjAvTkVJUkEvaWNvbW9vbi53b2ZmPzZyMXkyZScpIGZvcm1hdCgnd29mZicpO1xyXG59Ki9cclxuXHJcbiRmb250LS1mYW1pbHktLXJlZ3VsYXI6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XHJcbiIsIlxyXG4ubWVkaWEtLWxvYWRpbmd7XHJcbiAgICBAaW5jbHVkZSBsb2FkZXIoKTtcclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgQGluY2x1ZGUgYWJzb2x1dGVDZW50ZXIoKTtcclxuICAgIH1cclxuICAgICY6YmVmb3Jle1xyXG4gICAgICAgIGRpc3BsYXk6bm9uZTtcclxuICAgIH1cclxufVxyXG5cclxuLm1lZGlhIHtcclxuXHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgLmJsYXp5ICZ7XHJcbiAgICAgICAgQGluY2x1ZGUgY292ZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICAuaW1hZ2Uge1xyXG4gICAgICAgIEBpbmNsdWRlIGNvdmVyKCk7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG5cclxuICAgIC5maWVsZC0tbmFtZS1maWVsZC1tZWRpYS1pbWFnZXtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgb2JqZWN0Rml0SW1hZ2UoKTtcclxuXHJcbiAgICB9XHJcblxyXG59IiwiXHJcbiRiYXNlLWltYWdlLXBhZGRpbmc6IDU2LjI1JTtcclxuXHJcbkBtaXhpbiBvYmplY3QtZml0KCRmaXQ6IGZpbGwsICRwb3NpdGlvbjogbnVsbCkge1xyXG4gICAgLW8tb2JqZWN0LWZpdDogJGZpdDtcclxuICAgIG9iamVjdC1maXQ6ICRmaXQ7XHJcbiAgICBAaWYgJHBvc2l0aW9uIHtcclxuICAgICAgICAtby1vYmplY3QtcG9zaXRpb246ICRwb3NpdGlvbjtcclxuICAgICAgICBvYmplY3QtcG9zaXRpb246ICRwb3NpdGlvbjtcclxuICAgICAgICBmb250LWZhbWlseTogXCJvYmplY3QtZml0OiAjeyRmaXR9OyBvYmplY3QtcG9zaXRpb246ICN7JHBvc2l0aW9ufVwiO1xyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwib2JqZWN0LWZpdDogI3skZml0fVwiO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gb2JqZWN0Rml0SW1hZ2UoJHBhZGRpbmc6JGJhc2UtaW1hZ2UtcGFkZGluZywgJGZpdDogY292ZXIsICRwb3NpdGlvbjogbnVsbCkge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTokcGFkZGluZztcclxuICAgIGltZzpub3QoLmItbGF6eSksXHJcbiAgICBpbWcuYi1sYXp5LmItbG9hZGVkIHtcclxuICAgICAgICBAaW5jbHVkZSBjb3ZlcigpO1xyXG4gICAgICAgIEBpbmNsdWRlIG9iamVjdC1maXQoJGZpdCwgJHBvc2l0aW9uKTtcclxuICAgICAgICAuZm9jdXMtdG9wLWxlZnQgJnsgQGluY2x1ZGUgb2JqZWN0LWZpdCgkZml0LCAwIDApOyB9XHJcbiAgICAgICAgLmZvY3VzLXRvcC1jZW50ZXIgJnsgQGluY2x1ZGUgb2JqZWN0LWZpdCgkZml0LCA1MCUgMCk7IH1cclxuICAgICAgICAuZm9jdXMtdG9wLXJpZ2h0ICZ7IEBpbmNsdWRlIG9iamVjdC1maXQoJGZpdCwgMTAwJSAwKTsgfVxyXG4gICAgICAgIC5mb2N1cy1taWRkbGUtbGVmdCAmeyBAaW5jbHVkZSBvYmplY3QtZml0KCRmaXQsIDAgNTAlKTsgfVxyXG4gICAgICAgIC5mb2N1cy1taWRkbGUtY2VudGVyICZ7IEBpbmNsdWRlIG9iamVjdC1maXQoJGZpdCwgNTAlIDUwJSk7IH1cclxuICAgICAgICAuZm9jdXMtbWlkZGxlLXJpZ2h0ICZ7IEBpbmNsdWRlIG9iamVjdC1maXQoJGZpdCwgMTAwJSA1MCUpOyB9XHJcbiAgICAgICAgLmZvY3VzLWJvdHRvbS1sZWZ0ICZ7IEBpbmNsdWRlIG9iamVjdC1maXQoJGZpdCwgMCAxMDAlKTsgfVxyXG4gICAgICAgIC5mb2N1cy1ib3R0b20tY2VudGVyICZ7IEBpbmNsdWRlIG9iamVjdC1maXQoJGZpdCwgNTAlIDEwMCUpOyB9XHJcbiAgICAgICAgLmZvY3VzLWJvdHRvbS1yaWdodCAmeyBAaW5jbHVkZSBvYmplY3QtZml0KCRmaXQsIDEwMCUgMTAwJSk7IH1cclxuICAgIH1cclxuICAgICYuZm9jdXMtdG9wLWxlZnQgaW1neyBAaW5jbHVkZSBvYmplY3QtZml0KCRmaXQsIDAgMCk7IH1cclxuICAgICYuZm9jdXMtdG9wLWNlbnRlciBpbWd7IEBpbmNsdWRlIG9iamVjdC1maXQoJGZpdCwgNTAlIDApOyB9XHJcbiAgICAmLmZvY3VzLXRvcC1yaWdodCBpbWd7IEBpbmNsdWRlIG9iamVjdC1maXQoJGZpdCwgMTAwJSAwKTsgfVxyXG4gICAgJi5mb2N1cy1taWRkbGUtbGVmdCBpbWd7IEBpbmNsdWRlIG9iamVjdC1maXQoJGZpdCwgMCA1MCUpOyB9XHJcbiAgICAmLmZvY3VzLW1pZGRsZS1jZW50ZXIgaW1neyBAaW5jbHVkZSBvYmplY3QtZml0KCRmaXQsIDUwJSA1MCUpOyB9XHJcbiAgICAmLmZvY3VzLW1pZGRsZS1yaWdodCBpbWd7IEBpbmNsdWRlIG9iamVjdC1maXQoJGZpdCwgMTAwJSA1MCUpOyB9XHJcbiAgICAmLmZvY3VzLWJvdHRvbS1sZWZ0IGltZ3sgQGluY2x1ZGUgb2JqZWN0LWZpdCgkZml0LCAwIDEwMCUpOyB9XHJcbiAgICAmLmZvY3VzLWJvdHRvbS1jZW50ZXIgaW1neyBAaW5jbHVkZSBvYmplY3QtZml0KCRmaXQsIDUwJSAxMDAlKTsgfVxyXG4gICAgJi5mb2N1cy1ib3R0b20tcmlnaHQgaW1neyBAaW5jbHVkZSBvYmplY3QtZml0KCRmaXQsIDEwMCUgMTAwJSk7IH1cclxufVxyXG4iLCIubWVudS0tbWFpbiwgLm1lbnUtLWZvb3RlciB7XHJcblxyXG4gICAgdWwubWVudSB7XHJcbiAgICAgICAgQGluY2x1ZGUgY2xlYXJmaXg7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG4gICAgbGkge1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMThweCAyMHB4IDEwcHggMjBweDtcclxuXHJcbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7IHBhZGRpbmctbGVmdDogMDsgfVxyXG4gICAgICAgICY6bGFzdC1jaGlsZCB7IHBhZGRpbmctcmlnaHQ6IDA7IH1cclxuICAgIH1cclxuXHJcbn0iLCJcclxuZm9vdGVyLnNpdGUtZm9vdGVyIHtcclxuICAgIEBpbmNsdWRlIGNsZWFyZml4KCk7XHJcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3ItLWJhY2tncm91bmQ7XHJcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGNvbG9yLS1ib3JkZXI7XHJcblxyXG4gICAgLm5hdmlnYXRpb24ge1xyXG4gICAgICAgIEBpbmNsdWRlIGdyaWQtc3BhbigxMiwgMSk7XHJcbiAgICB9XHJcblxyXG59IiwiQGltcG9ydCBcImFwaS9mbG9hdFwiO1xuQGltcG9ydCBcImFwaS9pc29sYXRpb25cIjtcbkBpbXBvcnQgXCJhcGkvY2FsY1wiO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIE1hc3RlciBHcmlkIFNwYW4gbWl4aW5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQG1peGluIGdyaWQtc3Bhbigkc3BhbiwgJGxvY2F0aW9uOiAxLCAkZ3JpZDogbnVsbCwgJGd1dHRlcjogbnVsbCwgJG91dHB1dC1zdHlsZTogbnVsbCwgJGd1dHRlci1zdHlsZTogbnVsbCwgJG9wdGlvbnM6IG51bGwpIHtcblxuICBAaWYgJG91dHB1dC1zdHlsZSA9PSBudWxsIHtcbiAgICAkb3V0cHV0LXN0eWxlOiBzZ3MtZ2V0KCdvdXRwdXQnKTtcbiAgfVxuXG4gICRHcmlkOiBmaW5kLWdyaWQoJGdyaWQpO1xuICAkR3V0dGVyOiBmaW5kLWd1dHRlcigkZ3V0dGVyKTtcbiAgJFN0eWxlOiBmaW5kLWd1dHRlci1zdHlsZSgkZ3V0dGVyLXN0eWxlKTtcblxuICAkU3RhcnQtUm93OiBzdGFydC1yb3coJGxvY2F0aW9uKTtcbiAgJEVuZC1Sb3c6IGVuZC1yb3coJHNwYW4sICRsb2NhdGlvbiwgJEdyaWQpO1xuXG4gICRGaXhlZC1HdXR0ZXI6IGZpeGVkLWd1dHRlcigkR3JpZCwgJEd1dHRlciwgJFN0eWxlKTtcbiAgJFNwbGl0LUd1dHRlcjogaW5kZXgoJFN0eWxlLCAnc3BsaXQnKTtcbiAgJEd1dHRlci1Qcm9wZXJ0eTogZ3V0dGVyLXByb3BlcnR5KCRHcmlkLCAkR3V0dGVyLCAkU3R5bGUpO1xuXG4gICREaXJlY3Rpb246IHNncy1nZXQoJ2RpcmVjdGlvbicpO1xuICAkRnJvbTogaWYoJG9wdGlvbnMgYW5kIHR5cGUtb2YoJG9wdGlvbnMpID09ICdtYXAnLCBpZihtYXAtZ2V0KCRvcHRpb25zLCAnZnJvbScpLCBtYXAtZ2V0KCRvcHRpb25zLCAnZnJvbScpLCAkRGlyZWN0aW9uKSwgJERpcmVjdGlvbik7XG4gICRGcm9tOiBpZigkRnJvbSA9PSAnbHRyJyBvciAkRnJvbSA9PSAncnRsJywgbmFtZWQtZGlyZWN0aW9uKCRGcm9tKSwgJEZyb20pO1xuXG4gICRIb2xkZXI6ICgpO1xuICBAZWFjaCAkaywgJHYgaW4gJG9wdGlvbnMge1xuICAgICRIb2xkZXI6IGlmKCRrID09ICdmcm9tJywgJEhvbGRlciwgbWFwLW1lcmdlKCRIb2xkZXIsICgkazogJHYpKSk7XG4gIH1cbiAgJG9wdGlvbnM6IGlmKGxlbmd0aCgkSG9sZGVyKSA+IDAsICRIb2xkZXIsIG51bGwpO1xuXG4gICRTcGFuLU1hcDogKFxuICAgICdzcGFuJzogJHNwYW4sXG4gICAgJ2xvY2F0aW9uJzogJGxvY2F0aW9uLFxuICAgICdncmlkJzogJEdyaWQsXG4gICAgJ2d1dHRlcic6ICRHdXR0ZXIsXG4gICAgJ3N0eWxlJzogJFN0eWxlLFxuICAgICdzdGFydCByb3cnOiAkU3RhcnQtUm93LFxuICAgICdlbmQgcm93JzogJEVuZC1Sb3csXG4gICAgJ2ZpeGVkIGd1dHRlcic6ICRGaXhlZC1HdXR0ZXIsXG4gICAgJ3NwbGl0IGd1dHRlcic6ICRTcGxpdC1HdXR0ZXIsXG4gICAgJ2d1dHRlciBwcm9wZXJ0eSc6ICRHdXR0ZXItUHJvcGVydHksXG4gICAgJ29wdGlvbnMnOiAkb3B0aW9uc1xuICApO1xuXG4gIEBpZiBzZ3MtZ2V0KCdkZWJ1ZycpICE9IGZhbHNlIHtcbiAgICAtc2dzLXNwYW4tc2V0dGluZ3M6IGluc3BlY3QoJFNwYW4tTWFwKTtcbiAgfVxuXG5cbiAgQGlmIGZ1bmN0aW9uLWV4aXN0cygnb3V0cHV0LSN7JG91dHB1dC1zdHlsZX0nKSB7XG4gICAgJExlZnQ6ICgpO1xuICAgICRSaWdodDogKCk7XG5cbiAgICBAaWYgJERpcmVjdGlvbiA9PSAnYm90aCcgb3IgJEZyb20gPT0gJ2xlZnQnIG9yICgkRGlyZWN0aW9uID09ICdydGwnIGFuZCAkRnJvbSA9PSAnb3Bwb3NpdGUnKSB7XG4gICAgICAkTGVmdDogY2FsbCgnb3V0cHV0LSN7JG91dHB1dC1zdHlsZX0nLCBtYXAtbWVyZ2UoJFNwYW4tTWFwLCAoJ2RpcmVjdGlvbic6IGxlZnQpKSk7XG4gICAgfVxuXG4gICAgQGlmICREaXJlY3Rpb24gPT0gJ2JvdGgnIG9yICRGcm9tID09ICdyaWdodCcgb3IgKCREaXJlY3Rpb24gPT0gJ2x0cicgYW5kICRGcm9tID09ICdvcHBvc2l0ZScpIHtcbiAgICAgICRSaWdodDogY2FsbCgnb3V0cHV0LSN7JG91dHB1dC1zdHlsZX0nLCBtYXAtbWVyZ2UoJFNwYW4tTWFwLCAoJ2RpcmVjdGlvbic6IHJpZ2h0KSkpO1xuICAgIH1cblxuICAgICRMZWZ0LUtleXM6IG1hcC1rZXlzKCRMZWZ0KTtcbiAgICAkUmlnaHQtS2V5czogbWFwLWtleXMoJFJpZ2h0KTtcbiAgICAkRXhjbHVkZTogKCk7XG5cbiAgICBAZWFjaCAka2V5IGluICRMZWZ0LUtleXMge1xuICAgICAgQGlmIGluZGV4KCRSaWdodC1LZXlzLCAka2V5KSB7XG4gICAgICAgIEBpZiBtYXAtZ2V0KCRSaWdodCwgJGtleSkgPT0gbWFwLWdldCgkTGVmdCwgJGtleSkge1xuICAgICAgICAgICRFeGNsdWRlOiBhcHBlbmQoJEV4Y2x1ZGUsICRrZXkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWx3YXlzIHRyeSBhbmQgcHJpbnQgdGhlIExlZnQgdmFsdWVcbiAgICBAaW5jbHVkZSBncmlkLXNwYW4tYnVpbGQtZXhjbHVkZSgkTGVmdCwgJEV4Y2x1ZGUsIGZhbHNlKTtcblxuICAgIC8vIElmIERpcmVjdGlvbiBpcyBCb3RoIG9yIFJUTCwgYWRkIHRoZSBSVEwgYXR0cmlidXRlIHNlbGVjdG9yXG4gICAgQGlmICREaXJlY3Rpb24gPT0gJ2JvdGgnIG9yICREaXJlY3Rpb24gPT0gJ3J0bCcge1xuICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgQGluY2x1ZGUgZ3JpZC1zcGFuLWJ1aWxkLWV4Y2x1ZGUoJFJpZ2h0LCAkRXhjbHVkZSwgdHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgIEBpbmNsdWRlIGdyaWQtc3Bhbi1idWlsZC1leGNsdWRlKCRSaWdodCwgJEV4Y2x1ZGUsIHRydWUpO1xuICAgIH1cbiAgfVxuICBAZWxzZSB7XG4gICAgQHdhcm4gXCJUaGVyZSBkb2Vzbid0IGFwcGVhciB0byBiZSBhbiBvdXRwdXQgc3R5bGUgbmFtZWQgYCN7JG91dHB1dC1zdHlsZX1gLiBQbGVhc2UgZW5zdXJlIHRoYXQgdGhlIGZ1bmN0aW9uIGBvdXRwdXQtI3skb3V0cHV0LXN0eWxlfWAgYW5kIHRoYXQgdGhlIG91dHB1dCBzdHlsZSBgI3skb3V0cHV0LXN0eWxlfWAgYXJlIGJvdGggYXZhaWxhYmxlIGJlZm9yZSB0cnlpbmcgdG8gdXNlIHRoZW0uXCI7XG4gIH1cbn1cblxuQG1peGluIGdyaWQtc3Bhbi1idWlsZCgkcHJvcGVydHksICR2YWx1ZSkge1xuICBAaWYgdHlwZS1vZigkdmFsdWUpICE9ICdtYXAnIHtcbiAgICAjeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgfVxuICBAZWxzZSB7XG4gICAgQGVhY2ggJHByZWZpeCwgJHZhbCBpbiAkdmFsdWUge1xuICAgICAgI3skcHJvcGVydHl9OiAkdmFsO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gZ3JpZC1zcGFuLWJ1aWxkLWV4Y2x1ZGUoJHByb3BlcnRpZXMsICRkZWx0YSwgJGV4Y2x1ZGU6IGZhbHNlKSB7XG4gIEBlYWNoICRwcm9wZXJ0eSwgJHZhbHVlIGluICRwcm9wZXJ0aWVzIHtcbiAgICBAaWYgJGV4Y2x1ZGUge1xuICAgICAgQGlmIG5vdCBpbmRleCgkZGVsdGEsICRwcm9wZXJ0eSkge1xuICAgICAgICBAaW5jbHVkZSBncmlkLXNwYW4tYnVpbGQoJHByb3BlcnR5LCAkdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICBAaW5jbHVkZSBncmlkLXNwYW4tYnVpbGQoJHByb3BlcnR5LCAkdmFsdWUpO1xuICAgIH1cbiAgfVxufSIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gRmluZCB3aWR0aCwgaW4gcGVyY2VudGFnZXMsIG9mIHRoZSBjb2x1bW4gc3BhblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AZnVuY3Rpb24gY29sdW1uLXNwYW4oJHNwYW4sICRsb2NhdGlvbiwgJGdyaWQ6IG51bGwsICRndXR0ZXI6IG51bGwsICRndXR0ZXItc3R5bGU6IG51bGwpIHtcbiAgLy8gRmluZCB0aGUgZ3JpZCBhbmQgZ3V0dGVyc1xuICAkZ3JpZDogZmluZC1ncmlkKCRncmlkKTtcbiAgJGd1dHRlcjogZmluZC1ndXR0ZXIoJGd1dHRlcik7XG4gICRndXR0ZXItc3R5bGU6IGZpbmQtZ3V0dGVyLXN0eWxlKCRndXR0ZXItc3R5bGUpO1xuXG4gIEBpZiBmaXhlZC1ndXR0ZXIoJGdyaWQsICRndXR0ZXIsICRndXR0ZXItc3R5bGUpIHtcbiAgICAkZ3V0dGVyOiAwO1xuICB9XG5cbiAgLy8gQGRlYnVnICRncmlkO1xuICAvLyBAZGVidWcgJGd1dHRlcjtcblxuICAvLyBDb21iaW5lIHRoZSBncmlkIGFuZCBndXR0ZXJzXG4gICRncmlkLWFuZC1ndXR0ZXJzOiBjb2x1bW4tc3VtKCRncmlkLCAkZ3V0dGVyLCAkZ3V0dGVyLXN0eWxlKTtcblxuICAvLyBAZGVidWcgJGdyaWQtYW5kLWd1dHRlcnM7XG5cbiAgLy8gRXF1YWwgd2lkdGggZ3JpZCBhcmUgZWFzeSEgRGVhbCB3aXRoIHRoZW0hXG4gIEBpZiB0eXBlLW9mKCRncmlkKSA9PSAnbnVtYmVyJyBvciBsZW5ndGgoJGdyaWQpID09IDEge1xuICAgICRzcGFuLWFuZC1ndXR0ZXJzOiAkc3BhbiArICRndXR0ZXIgKiAoJHNwYW4gLSAxKTtcbiAgICBAcmV0dXJuICRzcGFuLWFuZC1ndXR0ZXJzIC8gJGdyaWQtYW5kLWd1dHRlcnMgKiAxMDAlO1xuICB9XG4gIC8vIEFzeW1tZXRyaWMgbGlzdHMgYXJlIGhhcmRlciwgc28gd2UncmUgZ29pbmcgdG8gdHJlYXQgdGhlbSBhcyB0aGVpciBvd24gZ3JpZFxuICBAZWxzZSBpZiB0eXBlLW9mKCRncmlkKSA9PSAnbGlzdCcgb3IgbGVuZ3RoKCRncmlkKSA+IDEge1xuICAgICRzcGFuLWFuZC1ndXR0ZXJzOiAwO1xuXG4gICAgQGlmICRsb2NhdGlvbiA9PSAxIGFuZCAkc3BhbiA+PSAxIHtcbiAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJHNwYW4ge1xuICAgICAgICAkc3Bhbi1hbmQtZ3V0dGVyczogJHNwYW4tYW5kLWd1dHRlcnMgKyBudGgoJGdyaWQsICRpKSArICRndXR0ZXI7XG4gICAgICB9XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgICR0b3RhbDogJGxvY2F0aW9uICsgJHNwYW4gLSAxO1xuICAgICAgQGlmICR0b3RhbCAhPSAwIHtcbiAgICAgICAgQGZvciAkaSBmcm9tICRsb2NhdGlvbiB0aHJvdWdoICR0b3RhbCB7XG4gICAgICAgICAgJHNwYW4tYW5kLWd1dHRlcnM6ICRzcGFuLWFuZC1ndXR0ZXJzICsgbnRoKCRncmlkLCAkaSkgKyAkZ3V0dGVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgICRzcGFuLWFuZC1ndXR0ZXJzOiAkc3Bhbi1hbmQtZ3V0dGVycyAtICRndXR0ZXI7XG5cbiAgICBAcmV0dXJuICRzcGFuLWFuZC1ndXR0ZXJzIC8gJGdyaWQtYW5kLWd1dHRlcnMgKiAxMDAlO1xuICB9XG4gIEBlbHNlIHtcbiAgICBAd2FybiBcIkNhbid0IGZpbmQgYSB3b3JraW5nIHNldCBvZiBncmlkISBUaGF0J3MgdGVycmlibGUhXCI7XG4gICAgQHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEZpbmQgdGhlIHRvdGFsIHN1bSBvZiB0aGUgZ3JpZFxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AZnVuY3Rpb24gY29sdW1uLXN1bSgkZ3JpZCwgJGd1dHRlciwgJGd1dHRlci1zdHlsZSkge1xuICAkc3BsaXQ6IGlmKGluZGV4KCRndXR0ZXItc3R5bGUsICdzcGxpdCcpLCB0cnVlLCBmYWxzZSk7XG5cbiAgQGlmIHR5cGUtb2YoJGdyaWQpID09ICdudW1iZXInIG9yIGxlbmd0aCgkZ3JpZCkgPT0gMSB7XG4gICAgQGlmICRzcGxpdCB7XG4gICAgICBAcmV0dXJuIG50aCgkZ3JpZCwgMSkgKyAoKGNvbHVtbi1jb3VudChudGgoJGdyaWQsIDEpKSkgKiBudGgoJGd1dHRlciwgMSkpO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICBAcmV0dXJuIG50aCgkZ3JpZCwgMSkgKyAoKGNvbHVtbi1jb3VudChudGgoJGdyaWQsIDEpKSAtIDEpICogbnRoKCRndXR0ZXIsIDEpKTtcbiAgICB9XG5cbiAgfVxuICBAZWxzZSBpZiB0eXBlLW9mKCRncmlkKSA9PSAnbGlzdCcge1xuICAgICRzdW06IDA7XG4gICAgQGVhY2ggJGNvbHVtbiBpbiAkZ3JpZCB7XG4gICAgICAkc3VtOiAkc3VtICsgbnRoKCRjb2x1bW4sIDEpO1xuICAgIH1cbiAgICBAaWYgJHNwbGl0IHtcbiAgICAgICRzdW06ICRzdW0gKyAoY29sdW1uLWNvdW50KCRncmlkKSkgKiBudGgoJGd1dHRlciwgMSk7XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgICRzdW06ICRzdW0gKyAoY29sdW1uLWNvdW50KCRncmlkKSAtIDEpICogbnRoKCRndXR0ZXIsIDEpO1xuICAgIH1cbiAgICBAcmV0dXJuICRzdW07XG4gIH1cbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBGaW5kIHRoZSBudW1iZXIgb2YgZ3JpZFxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AZnVuY3Rpb24gY29sdW1uLWNvdW50KCRncmlkKSB7XG4gIEBpZiB0eXBlLW9mKCRncmlkKSA9PSAnbnVtYmVyJyB7XG4gICAgQHJldHVybiAkZ3JpZDtcbiAgfVxuICBAaWYgdHlwZS1vZigkZ3JpZCkgPT0gJ2xpc3QnIHtcbiAgICBAaWYgbGVuZ3RoKCRncmlkKSA9PSAxIHtcbiAgICAgIEByZXR1cm4gbnRoKCRncmlkLCAxKTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgQHJldHVybiBsZW5ndGgoJGdyaWQpO1xuICAgIH1cbiAgfVxufSIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gRmluZCBPcHBvc2l0ZSBEaXJlY3Rpb25cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGZ1bmN0aW9uIG9wcG9zaXRlLWRpcmVjdGlvbigkZGlyKSB7XG4gIEBpZiAkZGlyID09ICdsZWZ0JyB7XG4gICAgQHJldHVybiByaWdodDtcbiAgfVxuICBAZWxzZSBpZiAgJGRpciA9PSAncmlnaHQnIHtcbiAgICBAcmV0dXJuIGxlZnQ7XG4gIH1cbiAgQGVsc2UgaWYgJGRpciA9PSAnbHRyJyB7XG4gICAgQHJldHVybiBydGw7XG4gIH1cbiAgQGVsc2UgaWYgJGRpciA9PSAncnRsJyB7XG4gICAgQHJldHVybiBsdHI7XG4gIH1cbiAgQGVsc2UgaWYgJGRpciA9PSAndG9wJyB7XG4gICAgQHJldHVybiBib3R0b207XG4gIH1cbiAgQGVsc2UgaWYgJGRpciA9PSAnYm90dG9tJyB7XG4gICAgQHJldHVybiB0b3A7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEB3YXJuIFwiI3skZGlyfSBpcyBub3QgYSBkaXJlY3Rpb24hIE1ha2Ugc3VyZSB5b3VyIGRpcmVjdGlvbiBpcyBhbGwgbG93ZXJjYXNlIVwiO1xuICAgIEByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBGaW5kIERpcmVjdGlvbiBOYW1lXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbkBmdW5jdGlvbiBuYW1lZC1kaXJlY3Rpb24oJGRpcikge1xuICBAaWYgJGRpciA9PSAnbHRyJyB7XG4gICAgQHJldHVybiBsZWZ0O1xuICB9XG4gIEBlbHNlIGlmICRkaXIgPT0gJ3J0bCcge1xuICAgIEByZXR1cm4gcmlnaHQ7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEB3YXJuIFwiI3skZGlyfSBpcyBub3QgYSB2YWxpZCBIVE1MIGRpcmVjdGlvbiEgTWFrZSBzdXJlIHlvdSBhcmUgdXNpbmcgYSB2YWxpZCBIVE1MIGRpcmVjdGlvblwiO1xuICAgIEByZXR1cm4gZmFsc2U7XG4gIH1cbn0iLCJAZnVuY3Rpb24gb3V0cHV0LWlzb2xhdGlvbigkU3Bhbi1NYXApIHtcbiAgLy8gU2V0IHVwIExlZnQvUmlnaHQgbWFwc1xuICAkUmV0dXJuOiAoKTtcblxuICAkU3BhbjogbWFwLWdldCgkU3Bhbi1NYXAsICdzcGFuJyk7XG4gICRMb2NhdGlvbjogbWFwLWdldCgkU3Bhbi1NYXAsICdsb2NhdGlvbicpO1xuXG4gICRHcmlkOiBtYXAtZ2V0KCRTcGFuLU1hcCwgJ2dyaWQnKTtcbiAgJEd1dHRlcjogbWFwLWdldCgkU3Bhbi1NYXAsICdndXR0ZXInKTtcbiAgJFN0eWxlOiBtYXAtZ2V0KCRTcGFuLU1hcCwgJ3N0eWxlJyk7XG5cbiAgJFN0YXJ0LVJvdzogbWFwLWdldCgkU3Bhbi1NYXAsICdzdGFydCByb3cnKTtcbiAgJEVuZC1Sb3c6IG1hcC1nZXQoJFNwYW4tTWFwLCAnZW5kIHJvdycpO1xuXG4gICRGaXhlZC1HdXR0ZXI6IG1hcC1nZXQoJFNwYW4tTWFwLCAnZml4ZWQgZ3V0dGVyJyk7XG4gICRTcGxpdC1HdXR0ZXI6IG1hcC1nZXQoJFNwYW4tTWFwLCAnc3BsaXQgZ3V0dGVyJyk7XG4gICRHdXR0ZXItUHJvcGVydHk6IG1hcC1nZXQoJFNwYW4tTWFwLCAnZ3V0dGVyIHByb3BlcnR5Jyk7XG5cbiAgJERpcmVjdGlvbjogbWFwLWdldCgkU3Bhbi1NYXAsICdkaXJlY3Rpb24nKTtcbiAgJE9wdGlvbnM6IG1hcC1nZXQoJFNwYW4tTWFwLCAnb3B0aW9ucycpO1xuXG4gICRXaWR0aDogY29sdW1uLXNwYW4oJFNwYW4sICRMb2NhdGlvbiwgJEdyaWQsICRHdXR0ZXIsICRTdHlsZSk7XG4gICRNYXJnaW4tU3BhbjogY29sdW1uLXNwYW4oKCRMb2NhdGlvbiAtIDEpLCAxLCAkR3JpZCwgJEd1dHRlciwgJFN0eWxlKTtcbiAgJEd1dHRlci1TcGFuOiBndXR0ZXItc3BhbigkR3V0dGVyLCAkR3JpZCk7XG5cbiAgLy8gQmFja3dhcmRzIENvbXBhdGliaWxpdHkgZm9yIE9wdGlvbnNcbiAgQGlmIHR5cGUtb2YoJE9wdGlvbnMpICE9ICdtYXAnIGFuZCAkT3B0aW9ucyAhPSBudWxsIHtcbiAgICAkT3B0aW9uczogKCdjbGVhcic6IHVucXVvdGUobnRoKCRPcHRpb25zLCAxKSkpO1xuICB9XG5cbiAgJERpcjogJERpcmVjdGlvbjtcbiAgJE9wcDogb3Bwb3NpdGUtZGlyZWN0aW9uKCREaXIpO1xuXG4gICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJ3dpZHRoJzogJFdpZHRoKSk7XG5cbiAgQGlmICgkRW5kLVJvdykge1xuICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJ2Zsb2F0JzogJE9wcCkpO1xuICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJ21hcmdpbi0jeyREaXJ9JzogMCkpO1xuXG4gICAgQGlmICRTcGxpdC1HdXR0ZXIgYW5kIG5vdCAkRml4ZWQtR3V0dGVyIHtcbiAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJyN7JEd1dHRlci1Qcm9wZXJ0eX0tI3skT3BwfSc6ICRHdXR0ZXItU3BhbiAvIDIpKTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnbWFyZ2luLSN7JE9wcH0nOiAwKSk7XG4gICAgfVxuICB9XG4gIEBlbHNlIHtcbiAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCdmbG9hdCc6ICREaXIpKTtcbiAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCdtYXJnaW4tI3skT3BwfSc6IC0xMDAlKSk7XG5cbiAgICBAaWYgJFN0YXJ0LVJvdyB7XG4gICAgICBAaWYgJFNwbGl0LUd1dHRlciBhbmQgbm90ICRGaXhlZC1HdXR0ZXIge1xuICAgICAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCdtYXJnaW4tI3skRGlyfSc6ICRHdXR0ZXItU3BhbiAvIDIpKTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIGlmIG5vdCAkRml4ZWQtR3V0dGVyIHtcbiAgICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnbWFyZ2luLSN7JERpcn0nOiAwKSk7XG4gICAgICB9XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgIEBpZiAkU3BsaXQtR3V0dGVyIGFuZCBub3QgJEZpeGVkLUd1dHRlciB7XG4gICAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJ21hcmdpbi0jeyREaXJ9JzogJE1hcmdpbi1TcGFuICsgJEd1dHRlci1TcGFuICsgJEd1dHRlci1TcGFuIC8gMikpO1xuICAgICAgfVxuICAgICAgQGVsc2UgaWYgbm90ICRGaXhlZC1HdXR0ZXIge1xuICAgICAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCdtYXJnaW4tI3skRGlyfSc6ICRNYXJnaW4tU3BhbiArICRHdXR0ZXItU3BhbikpO1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCdtYXJnaW4tI3skRGlyfSc6ICRNYXJnaW4tU3BhbikpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAvLyBJZiBvcHRpb25zIGFyZSBzZXQsIHdlIG1lcmdlIHRoZW0gaW4hXG4gIEBpZiAoJE9wdGlvbnMpIHtcbiAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgJE9wdGlvbnMpO1xuICB9XG5cbiAgLy8gSWYgQ0xlYXIgaXNuJ3QgYWxyZWFkeSBhdmFpbGFibGUsIHNldCBpdCFcbiAgQGlmIG5vdCBtYXAtaGFzLWtleSgkUmV0dXJuLCAnY2xlYXInKSB7XG4gICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnY2xlYXInOiBub25lKSk7XG4gIH1cblxuICAvLyBMZWZ0IEZpeGVkIEd1dHRlcnNcbiAgQGlmICRGaXhlZC1HdXR0ZXIge1xuICAgIEBpZiBpbmRleCgkU3R5bGUsICdzcGxpdCcpIHtcbiAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJyN7JEd1dHRlci1Qcm9wZXJ0eX0tI3skRGlyfSc6ICRHdXR0ZXItU3BhbiAvIDIpKTtcbiAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJyN7JEd1dHRlci1Qcm9wZXJ0eX0tI3skT3BwfSc6ICRHdXR0ZXItU3BhbiAvIDIpKTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgQGlmIG5vdCAkRW5kLVJvdyB7XG4gICAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJyN7JEd1dHRlci1Qcm9wZXJ0eX0tI3skT3BwfSc6ICRHdXR0ZXItU3BhbikpO1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCcjeyRHdXR0ZXItUHJvcGVydHl9LSN7JE9wcH0nOiAwKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkUmV0dXJuO1xufVxuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEhhcHB5IFN5bnRheCBmb3IgSXNvbGF0aW9uXG4vL1xuLy8gTWFrZXMgd29ya2luZyB3aXRoIElzb2xhdGlvbiBlYXNpZXIsIGFzIGl0IG1vdmVzIENsZWFyIHRvIGEgMXN0IGNsYXNzIGNpdGl6ZW4gb2YgdGhlIG1peGluLCBhbmQgYXV0b21hdGljYWxseSBidWlsZHMgdGhlIHZlcmJvc2UgZ3JpZC1zcGFuIG1peGluIGNhbGxcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQG1peGluIGlzb2xhdGlvbi1zcGFuKCRTcGFuLCAkTG9jYXRpb24sICRjbGVhcjogZmFsc2UsICRncmlkOiBmYWxzZSwgJGd1dHRlcjogZmFsc2UsICRndXR0ZXItc3R5bGU6IGZhbHNlLCAkZnJvbTogZmFsc2UpIHtcbiAgJE9wdGlvbnM6ICgpO1xuICBAaWYgJGNsZWFyIHtcbiAgICAkT3B0aW9uczogbWFwLW1lcmdlKCRPcHRpb25zLCAoJ2NsZWFyJzogdW5xdW90ZSgkY2xlYXIpKSk7XG4gIH1cbiAgQGlmICRmcm9tIHtcbiAgICAkT3B0aW9uczogbWFwLW1lcmdlKCRPcHRpb25zLCAoJ2Zyb20nOiAkZnJvbSkpO1xuICB9XG5cbiAgJE9wdGlvbnM6IGlmKGxlbmd0aCgkT3B0aW9ucykgPiAwLCAkT3B0aW9ucywgbnVsbCk7XG4gIEBpbmNsdWRlIGdyaWQtc3BhbigkU3BhbiwgJExvY2F0aW9uLCAkZ3JpZCwgJGd1dHRlciwgJ2lzb2xhdGlvbicsICRndXR0ZXItc3R5bGUsICRPcHRpb25zKTtcbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBIYXBweSBTeW50YXggb2YgQXN5bW1ldHJpYyBHcmlkc1xuLy9cbi8vIE1ha2VzIHdvcmtpbmcgd2l0aCBhc3ltbWV0cmljIGdyaWRzIGVhc2llciFcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQG1peGluIGFzeW1tZXRyaWMtc3BhbigkTG9jYXRpb24sICRTcGFuOiBmYWxzZSwgJGdyaWQ6IGZhbHNlLCAkZ3V0dGVyOiBmYWxzZSwgJGd1dHRlci1zdHlsZTogZmFsc2UsICRmcm9tOiBmYWxzZSwgJG91dHB1dC1zdHlsZTogZmFsc2UpIHtcblxuICAkU3BhbjogaWYoJFNwYW4gIT0gZmFsc2UsICRTcGFuLCAxKTtcbiAgJG91dHB1dC1zdHlsZTogaWYoJG91dHB1dC1zdHlsZSAhPSBmYWxzZSwgJG91dHB1dC1zdHlsZSwgc2dzLWdldCgnYXN5bW1ldHJpYyBvdXRwdXQnKSk7XG5cbiAgJE9wdGlvbnM6ICgpO1xuICBAaWYgJGZyb20ge1xuICAgICRPcHRpb25zOiBtYXAtbWVyZ2UoJE9wdGlvbnMsICgnZnJvbSc6ICRmcm9tKSk7XG4gIH1cbiAgJE9wdGlvbnM6IGlmKGxlbmd0aCgkT3B0aW9ucykgPiAwLCAkT3B0aW9ucywgbnVsbCk7XG5cbiAgQGluY2x1ZGUgZ3JpZC1zcGFuKCRTcGFuLCAkTG9jYXRpb24sICRncmlkLCAkZ3V0dGVyLCAkb3V0cHV0LXN0eWxlLCAkZ3V0dGVyLXN0eWxlLCAkT3B0aW9ucyk7XG59IiwiXHJcbi5zaXRlLWhlYWRlcntcclxuICAgIEBpbmNsdWRlIGNsZWFyZml4KCk7XHJcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3ItLWJhY2tncm91bmQ7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNvbG9yLS1ib3JkZXI7XHJcblxyXG4gICAgLmxvZ297XHJcbiAgICAgICAgZmxvYXQ6bGVmdDtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4ubWFpbi1tZW51e1xyXG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcclxuICAgIGZsb2F0OmxlZnQ7XHJcblxyXG4gICAgLm5hdmlnYXRpb24ge1xyXG4gICAgICAgIEBpbmNsdWRlIGdyaWQtc3BhbigxMiwgMSk7XHJcbiAgICB9XHJcblxyXG59IiwiLmxpc3Rpbmcge1xyXG5cclxuICAgIEBpbmNsdWRlIGFkZC1ncmlkKDEyKTtcclxuICAgIEBpbmNsdWRlIGFkZC1ndXR0ZXIoMS8zKTtcclxuXHJcblxyXG4gICAgLm5vLXJlc3VsdHMge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtaW4taGVpZ2h0OiAyMDBweDtcclxuICAgIH1cclxuXHJcbiAgICAmLmlzb3RvcGUge1xyXG5cclxuICAgICAgICAuaXNvR3JpZCB7XHJcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm5vLXJlc3VsdHMge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmlzby1ndXR0ZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgd2lkdGg6IDA7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9XHJcblxyXG59IiwiXHJcbi5wYWdlcntcclxuICAgIHRleHQtYWxpZ246Y2VudGVyOyBjbGVhcjpib3RoO1xyXG5cclxuICAgIHVse1xyXG4gICAgICAgIEBpbmNsdWRlIHJlc2V0KCk7XHJcblxyXG4gICAgICAgIGxpe1xyXG4gICAgICAgICAgICBtYXJnaW46MDsgZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcblxyXG4gICAgICAgICAgICAmLnBhZ2VyX19pdGVtLS1maXJzdCxcclxuICAgICAgICAgICAgJi5wYWdlcl9faXRlbS0tbGFzdCxcclxuICAgICAgICAgICAgJi5wYWdlcl9faXRlbS0tZWxsaXBzaXN7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5Om5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYubmV4dCxcclxuICAgICAgICAgICAgJi5wcmV2LFxyXG4gICAgICAgICAgICAmLnBhZ2VyX19pdGVtLS1uZXh0LFxyXG4gICAgICAgICAgICAmLnBhZ2VyX19pdGVtLS1wcmV2aW91c3tcclxuICAgICAgICAgICAgICAgIGF7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9AaW5jbHVkZSBmb250aWNvbignXFxlOTAzJywzMHB4LCMwMDApO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjMwcHg7IGhlaWdodDoyMHB4OyBwYWRkaW5nOjA7XHJcbiAgICAgICAgICAgICAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgdmlzdWFsbHlIaWRkZW4oKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTpyb3RhdGUoOTBkZWcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBob3Zlcigpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTpyb3RhdGUoOTBkZWcpIHRyYW5zbGF0ZVkoNXB4KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmLnByZXYsXHJcbiAgICAgICAgICAgICYucGFnZXJfX2l0ZW0tLXByZXZpb3Vze1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmLm5leHQsXHJcbiAgICAgICAgICAgICYucGFnZXJfX2l0ZW0tLW5leHR7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6MDtcclxuICAgICAgICAgICAgICAgIGF7XHJcbiAgICAgICAgICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTpyb3RhdGUoLTkwZGVnKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgaG92ZXIoKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06cm90YXRlKC05MGRlZykgdHJhbnNsYXRlWSg1cHgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBhe1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7IHBhZGRpbmc6MCAxMHB4O1xyXG4gICAgICAgICAgICAgICAgJjpob3ZlcixcclxuICAgICAgICAgICAgICAgICY6Zm9jdXMsXHJcbiAgICAgICAgICAgICAgICAmLmFjdGl2ZXtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjokY29sb3ItLXByaW1hcnk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJi5pcy1hY3RpdmV7XHJcbiAgICAgICAgICAgICAgICBhe1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OmJvbGQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbn0iLCIubm9kZS0tdmlldy1tb2RlLWNhcmQge1xyXG5cclxuICAgIEBpbmNsdWRlIGZsb2F0LXNwYW4oNCk7XHJcblxyXG4gICAgJiA+IC53cmFwcGVyIHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3ItLWJvcmRlcjtcclxuICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgfVxyXG5cclxufSIsIkBmdW5jdGlvbiBvdXRwdXQtZmxvYXQoJFNwYW4tTWFwKSB7XG4gIC8vIFNldCB1cCBMZWZ0L1JpZ2h0IG1hcHNcbiAgJFJldHVybjogKCk7XG5cbiAgJFNwYW46IG1hcC1nZXQoJFNwYW4tTWFwLCAnc3BhbicpO1xuICAkTG9jYXRpb246IG1hcC1nZXQoJFNwYW4tTWFwLCAnbG9jYXRpb24nKTtcblxuICAkR3JpZDogbWFwLWdldCgkU3Bhbi1NYXAsICdncmlkJyk7XG4gICRHdXR0ZXI6IG1hcC1nZXQoJFNwYW4tTWFwLCAnZ3V0dGVyJyk7XG4gICRTdHlsZTogbWFwLWdldCgkU3Bhbi1NYXAsICdzdHlsZScpO1xuXG4gICRTdGFydC1Sb3c6IG1hcC1nZXQoJFNwYW4tTWFwLCAnc3RhcnQgcm93Jyk7XG4gICRFbmQtUm93OiBtYXAtZ2V0KCRTcGFuLU1hcCwgJ2VuZCByb3cnKTtcblxuICAkRml4ZWQtR3V0dGVyOiBtYXAtZ2V0KCRTcGFuLU1hcCwgJ2ZpeGVkIGd1dHRlcicpO1xuICAkU3BsaXQtR3V0dGVyOiBtYXAtZ2V0KCRTcGFuLU1hcCwgJ3NwbGl0IGd1dHRlcicpO1xuICAkR3V0dGVyLVByb3BlcnR5OiBtYXAtZ2V0KCRTcGFuLU1hcCwgJ2d1dHRlciBwcm9wZXJ0eScpO1xuXG4gICREaXJlY3Rpb246IG1hcC1nZXQoJFNwYW4tTWFwLCAnZGlyZWN0aW9uJyk7XG4gICRPcHRpb25zOiBtYXAtZ2V0KCRTcGFuLU1hcCwgJ29wdGlvbnMnKTtcblxuICBAaWYgJFN0YXJ0LVJvdyB7XG4gICAgJExvY2F0aW9uOiAxO1xuICB9XG4gIEBlbHNlIGlmICRFbmQtUm93IHtcbiAgICAkTG9jYXRpb246IGNvbHVtbi1jb3VudCgkR3JpZCkgLSAkU3BhbiArIDE7XG4gIH1cblxuICAkV2lkdGg6IGNvbHVtbi1zcGFuKCRTcGFuLCAkTG9jYXRpb24sICRHcmlkLCAkR3V0dGVyLCAkU3R5bGUpO1xuICAkTWFyZ2luLVNwYW46IGNvbHVtbi1zcGFuKCgkTG9jYXRpb24gLSAxKSwgMSwgJEdyaWQsICRHdXR0ZXIsICRTdHlsZSk7XG4gICRHdXR0ZXItU3BhbjogZ3V0dGVyLXNwYW4oJEd1dHRlciwgJEdyaWQpO1xuXG4gIC8vIEJhY2t3YXJkcyBDb21wYXRpYmlsaXR5IGZvciBPcHRpb25zXG4gIEBpZiB0eXBlLW9mKCRPcHRpb25zKSAhPSAnbWFwJyBhbmQgJE9wdGlvbnMgIT0gbnVsbCB7XG4gICAgJE9wdGlvbnM6ICgnY2xlYXInOiB1bnF1b3RlKG50aCgkT3B0aW9ucywgMSkpKTtcbiAgfVxuXG4gICREaXI6ICREaXJlY3Rpb247XG4gICRPcHA6IG9wcG9zaXRlLWRpcmVjdGlvbigkRGlyKTtcblxuICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCd3aWR0aCc6ICRXaWR0aCkpO1xuICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCdjbGVhcic6ICRPcHApKTtcblxuICBAaWYgKCRFbmQtUm93KSB7XG4gICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnZmxvYXQnOiAkT3BwKSk7XG5cbiAgICBAaWYgJFNwbGl0LUd1dHRlciBhbmQgbm90ICRGaXhlZC1HdXR0ZXIge1xuICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnI3skR3V0dGVyLVByb3BlcnR5fS0jeyREaXJ9JzogMCkpO1xuICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnI3skR3V0dGVyLVByb3BlcnR5fS0jeyRPcHB9JzogJEd1dHRlci1TcGFuIC8gMikpO1xuICAgIH1cbiAgICBAZWxzZSBpZiBub3QgJEZpeGVkLUd1dHRlciB7XG4gICAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCcjeyRHdXR0ZXItUHJvcGVydHl9LSN7JE9wcH0nOiAwKSk7XG4gICAgfVxuICB9XG4gIEBlbHNlIHtcbiAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCdmbG9hdCc6ICREaXIpKTtcblxuICAgIEBpZiAkU3BsaXQtR3V0dGVyIGFuZCBub3QgJEZpeGVkLUd1dHRlciB7XG4gICAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCcjeyRHdXR0ZXItUHJvcGVydHl9LSN7JERpcn0nOiAkR3V0dGVyLVNwYW4gLyAyKSk7XG4gICAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCcjeyRHdXR0ZXItUHJvcGVydHl9LSN7JE9wcH0nOiAkR3V0dGVyLVNwYW4gLyAyKSk7XG4gICAgfVxuICAgIEBlbHNlIGlmIG5vdCAkRml4ZWQtR3V0dGVyIHtcbiAgICAgIEBpZiAkU3RhcnQtUm93IHtcbiAgICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnI3skR3V0dGVyLVByb3BlcnR5fS0jeyREaXJ9JzogMCkpO1xuICAgICAgfVxuICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnI3skR3V0dGVyLVByb3BlcnR5fS0jeyRPcHB9JzogJEd1dHRlci1TcGFuKSk7XG4gICAgfVxuICB9XG4gIC8vIElmIG9wdGlvbnMgYXJlIHNldCwgd2UgbWVyZ2UgdGhlbSBpbiFcbiAgQGlmICgkT3B0aW9ucykge1xuICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAkT3B0aW9ucyk7XG4gIH1cblxuICAvLyBJZiBDTGVhciBpc24ndCBhbHJlYWR5IGF2YWlsYWJsZSwgc2V0IGl0IVxuICBAaWYgbm90IG1hcC1oYXMta2V5KCRSZXR1cm4sICdjbGVhcicpIHtcbiAgICAkUmV0dXJuOiBtYXAtbWVyZ2UoJFJldHVybiwgKCdjbGVhcic6IG5vbmUpKTtcbiAgfVxuXG4gIC8vIExlZnQgRml4ZWQgR3V0dGVyc1xuICBAaWYgJEZpeGVkLUd1dHRlciB7XG4gICAgQGlmIGluZGV4KCRTdHlsZSwgJ3NwbGl0Jykge1xuICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnI3skR3V0dGVyLVByb3BlcnR5fS0jeyREaXJ9JzogJEd1dHRlci1TcGFuIC8gMikpO1xuICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnI3skR3V0dGVyLVByb3BlcnR5fS0jeyRPcHB9JzogJEd1dHRlci1TcGFuIC8gMikpO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICBAaWYgbm90ICRFbmQtUm93IHtcbiAgICAgICAgJFJldHVybjogbWFwLW1lcmdlKCRSZXR1cm4sICgnI3skR3V0dGVyLVByb3BlcnR5fS0jeyRPcHB9JzogJEd1dHRlci1TcGFuKSk7XG4gICAgICB9XG4gICAgICBAZWxzZSB7XG4gICAgICAgICRSZXR1cm46IG1hcC1tZXJnZSgkUmV0dXJuLCAoJyN7JEd1dHRlci1Qcm9wZXJ0eX0tI3skT3BwfSc6IDApKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAcmV0dXJuICRSZXR1cm47XG59XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSGFwcHkgU3ludGF4IGZvciBGbG9hdFxuLy9cbi8vIE1ha2VzIHdvcmtpbmcgd2l0aCBGbG9hdCBlYXNpZXIsIGFzIGl0IGFsbG93cyB5b3UgdG8gd2FsayB0aGUgZ3JpZCBmb3Igc3ltbWV0cmljIGdyaWRzIGFuZCBlYXN5IGFwcGx5aW5nIG9mICdsYXN0JyBhbmQgJ2ZpcnN0JywgYXMgd2VsbCBhcyBhdXRvbWF0aWNhbGx5IGJ1aWxkaW5nIHRoZSB2ZXJib3NlIGdyaWQtc3BhbiBtaXhpbiBjYWxsXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbkBtaXhpbiBmbG9hdC1zcGFuKCRTcGFuLCAkTG9jYXRpb246IGZhbHNlLCAkZ3JpZDogZmFsc2UsICRndXR0ZXI6IGZhbHNlLCAkZ3V0dGVyLXN0eWxlOiBmYWxzZSwgJGZyb206IGZhbHNlKSB7XG4gICRncmlkOiBmaW5kLWdyaWQoJGdyaWQpO1xuICAkZ3V0dGVyOiBmaW5kLWd1dHRlcigkZ3V0dGVyKTtcbiAgJHJvdzogZmFsc2U7XG5cbiAgJE9wdGlvbnM6IGlmKCRmcm9tLCAoJ2Zyb20nOiAkZnJvbSksIG51bGwpO1xuXG4gIC8vIFdvcmtpbmcgYXJvdW5kIFNBU1MgdHJlYXRpbmcgYSBudW1iZXIgbGlrZSBhIGxpc3Qgd2l0aCBvbmUgZWxlbWVudFxuICBAaWYgdHlwZS1vZigkZ3JpZCkgPT0gJ2xpc3QnIGFuZCBsZW5ndGgoJGdyaWQpID09IDEge1xuICAgICRncmlkOiBudGgoJGdyaWQsIDEpO1xuICB9XG5cbiAgLy8gV29ya2luZyB3aXRoIGEgc3ltbWV0cmljIGdyaWRcbiAgQGlmIHR5cGUtb2YoJGdyaWQpID09ICdudW1iZXInIHtcbiAgICAvLyBTcGVjaWFsIHRyZWF0bWVudCBmb3Igbm9uLW51bWVyaWMgbG9jYXRpb25cbiAgICBAaWYgdHlwZS1vZigkTG9jYXRpb24pICE9ICdudW1iZXInIHtcbiAgICAgIEBpZiAkTG9jYXRpb24gPT0gJ2xhc3QnIG9yICRMb2NhdGlvbiA9PSAnb21lZ2EnIHtcbiAgICAgICAgJExvY2F0aW9uOiAkZ3JpZCAtICRTcGFuICsgMTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgQGlmICRMb2NhdGlvbiA9PSAnZmlyc3QnIG9yICRMb2NhdGlvbiA9PSAnYWxwaGEnIHtcbiAgICAgICAgICAkcm93OiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgICRMb2NhdGlvbjogMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBAaW5jbHVkZSBncmlkLXNwYW4oJFNwYW4sICRMb2NhdGlvbiwgJGdyaWQsICRndXR0ZXIsICdmbG9hdCcsICRndXR0ZXItc3R5bGUsICRPcHRpb25zKTtcblxuICAgIEBpZiAkcm93IHtcbiAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbiAgfVxuICAvLyBXb3JraW5nIHdpdGggYW4gYXN5bW1ldHJpYyBncmlkLCBzaG91bGQgaGF2ZSBsb2NhdGlvbiBwcm92aWRlZFxuICBAZWxzZSBpZiB0eXBlLW9mKCRncmlkKSA9PSAnbGlzdCcgYW5kICRMb2NhdGlvbiAhPSBmYWxzZSB7XG4gICAgQGluY2x1ZGUgZ3JpZC1zcGFuKCRTcGFuLCAkTG9jYXRpb24sICRncmlkLCAkZ3V0dGVyLCAnZmxvYXQnLCAkZ3V0dGVyLXN0eWxlLCAkT3B0aW9ucyk7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEB3YXJuICdBc3ltbWV0cmljIEdyaWRzIG5lZWQgYSBMb2NhdGlvbiB2YWx1ZSBhcyB3ZWxsIGFzIGEgc3BhbiB2YWx1ZSBpbiBvcmRlciB0byBrbm93IHdoZXJlIG9uIHRoZSBncmlkIHlvdSBhcmUhIFBsZWFzZSBpbmNsdWRlIGEgbG9jYXRpb24gdmFsdWUhJztcbiAgfVxufVxuIiwiQGZ1bmN0aW9uIGd1dHRlci1zcGFuKCRndXR0ZXI6IGZhbHNlLCAkZ3JpZDogZmFsc2UsICRndXR0ZXItc3R5bGU6IGZhbHNlKSB7XG5cbiAgLy8gRmluZCB0aGUgY29sdW1ucyBhbmQgZ3V0dGVyc1xuICAkZ3JpZDogZmluZC1ncmlkKCRncmlkKTtcbiAgJGd1dHRlcjogZmluZC1ndXR0ZXIoJGd1dHRlcik7XG4gICRndXR0ZXItc3R5bGU6IGZpbmQtZ3V0dGVyLXN0eWxlKCRndXR0ZXItc3R5bGUpO1xuXG4gIEBpZiBmaXhlZC1ndXR0ZXIoJGdyaWQsICRndXR0ZXIsICRndXR0ZXItc3R5bGUpIHtcbiAgICBAcmV0dXJuIG50aCgkZ3V0dGVyLCAxKTtcbiAgfVxuXG4gIC8vIENvbWJpbmUgdGhlIGNvbHVtbnMgYW5kIGd1dHRlcnNcbiAgJGdyaWQtYW5kLWd1dHRlcnM6IGNvbHVtbi1zdW0oJGdyaWQsICRndXR0ZXIsICRndXR0ZXItc3R5bGUpO1xuXG4gIEByZXR1cm4gKG50aCgkZ3V0dGVyLCAxKSAvICRncmlkLWFuZC1ndXR0ZXJzKSAqIDEwMCVcbn0iLCJtYWluIHtcclxuICAgIEBpbmNsdWRlIGNsZWFyZml4KCk7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcblxyXG4ubGF5b3V0LWNvbnRhaW5lcntcclxuICAgIEBpbmNsdWRlIGNvbnRhaW5lcigpO1xyXG59XHJcblxyXG4ubGF5b3V0LWNvbnRlbnR7XHJcbiAgICBwYWRkaW5nOjQwcHggMCA4MHB4O1xyXG59XHJcbiJdfQ== */

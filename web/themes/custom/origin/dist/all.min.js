"use strict";!function(o,r){r.behaviors.resizer={},r.behaviors.resizer.resizeTimer=null,r.behaviors.resizer.isMobile=!1,r.behaviors.resizer.isTabletPortrait=!1,r.behaviors.resizer.isTabletLandscape=!1,r.behaviors.resizer.isDesktop=!0,r.behaviors.resizer.deviceHasChanged=!1,r.behaviors.resizer.attach=function(e){o(window,e).resize(function(){clearTimeout(r.behaviors.resizer.resizeTimer),r.behaviors.resizer.resizeTimer=setTimeout(function(){r.attachBehaviors()},100)})},r.behaviors.checkViewport={attach:function(e){var s=r.behaviors.resizer,i=s.isMobile,a=s.isTabletLandscape,t=s.isDesktop;"block"===o(".hamburger",e).css("display")?(s.isMobile=!0,s.isTabletPortrait=!1,s.isTabletLandscape=!1,s.isDesktop=!1,o("body").addClass("is-mobile").removeClass("is-tablet-portrait").removeClass("is-tablet-landscape").removeClass("is-desktop"),768<=o(window).width()&&(s.isMobile=!1,s.isTabletPortrait=!0,s.isTabletLandscape=!1,s.isDesktop=!1,o("body").removeClass("is-mobile").addClass("is-tablet-portrait").removeClass("is-tablet-landscape").removeClass("is-desktop"))):(1024<=o(window).width()&&(s.isMobile=!1,s.isTabletPortrait=!1,s.isTabletLandscape=!0,s.isDesktop=!1,o("body").removeClass("is-mobile").removeClass("is-tablet-portrait").addClass("is-tablet-landscape").removeClass("is-desktop")),220===o(".header .logo").width()&&(s.isMobile=!1,s.isTabletPortrait=!1,s.isTabletLandscape=!1,s.isDesktop=!0,o("body").removeClass("is-mobile").removeClass("is-tablet-portrait").removeClass("is-tablet-landscape").addClass("is-desktop"))),s.deviceHasChanged=s.isMobile!==i||s.isTabletLandscape!==a||s.isDesktop!==t}}}(jQuery,Drupal,drupalSettings),function(t,i){i.behaviors.global={},i.behaviors.global.checkTables=function(){t(".node--view-mode-full .table-wrap").each(function(){var e=t(this),s=e.prev(".scroll-indicator");t(this).find("table").width()>e.width()?(e.addClass("scroll"),s.show()):(e.removeClass("scroll"),s.hide())})},i.behaviors.global.attach=function(){t("body").once("global").each(function(){var e,s=i.behaviors.global;/iP(hone|od|ad)/.test(navigator.platform)&&(e=navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),9===[parseInt(e[1],10),parseInt(e[2],10),parseInt(e[3]||0,10)][0]&&s.html.addClass("ios9")),t('a[href*="pdf"]').attr("target","_blank"),t("h2,h3,h4,h5,h6").each(function(){var e=t(this).text();t(this).find("div").each(function(){t(this).replaceWith("<span>"+e+"</span>")})}),t(".node--view-mode-full table").wrap('<div class="table-wrap" />'),t(".node--view-mode-full .table-wrap").each(function(){t(this).before('<span class="scroll-indicator">Scroll</span>')}),i.behaviors.global.checkTables(),t(window).resize(function(){i.behaviors.global.checkTables()})}),t("input[type=checkbox], input[type=radio]").checkbox(),t("select:not([class^='ui'])").dropdown(),t("div.webform-document-file").removeAttr("id"),t(".form-type-date input").attr("readonly","readonly")},i.behaviors.slick={},i.behaviors.slick.attach=function(){t("body").once("slick").each(function(){t(".paragraph--type--media-slideshow").each(function(){var i,a,e=t(this).find(".field--name-field-medias");0<e.find("> .slides-wrap").length&&(i=e.find(".slick-count .total"),a=e.find(".slick-count .current"),e.find(".slides-wrap").on("init",function(e,s){i.text(s.slideCount)}).on("afterChange",function(e,s,i){a.text(i+1)}).slick({adaptiveHeight:!0,appendArrows:e.find(".slick-arrows"),dots:!1,arrows:!0}),t(".slick-arrow").on("click",function(){t(this).blur()}))})})}}(jQuery,Drupal);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

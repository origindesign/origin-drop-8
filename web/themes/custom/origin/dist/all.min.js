"use strict";!function(o,t){t.behaviors.ajaxListLoading={},t.behaviors.ajaxListLoading.xhr=null,t.behaviors.ajaxListLoading.ajaxContainer="",t.behaviors.ajaxListLoading.ajaxPath="",t.behaviors.ajaxListLoading.params="",t.behaviors.ajaxListLoading.attach=function(a){var e=t.behaviors.ajaxListLoading;o(".ajax-list-container",a).once("ajaxListLoading").each(function(){e.ajaxContainer=o(this),e.ajaxPath=e.ajaxContainer.attr("data-ajax-path"),e.params=e.ajaxContainer.data("default-params"),""!==window.location.hash&&e.updateParamsFromHash(),e.displayList(e.ajaxContainer,e.ajaxPath,e.params),o(window).off("hashchange.form-fragment").on("hashchange",function(){e.updateParamsFromHash(),e.displayList(e.ajaxContainer,e.ajaxPath,e.params)})}),o(".pager.ajax a").off("click").on("click",function(a){a.preventDefault(),a.stopPropagation();var e=o(this).data("params");window.location.hash=o.trim("/paged="+e.paged)})},t.behaviors.ajaxListLoading.updateParamsFromHash=function(){var s=t.behaviors.ajaxListLoading,a=window.location.hash.substring(2).split("/");o.each(a,function(a,e){var i=e.split("=");s.params[i[0]]=i[1]})},t.behaviors.ajaxListLoading.displayList=function(i,a,e){i.html("").removeClass("loaded"),t.behaviors.ajaxListLoading.xhr=o.ajax({type:"POST",url:a+"?response_type=ajax",data:e,success:function(a){var e=o("<div/>",{class:"wrapper"});e.html(a),i.html(e),i.addClass("loaded"),t.attachBehaviors()}})},t.behaviors.ajaxBlock={},t.behaviors.ajaxBlock.xhr=null,t.behaviors.ajaxBlock.attach=function(a){o("body",a).once("ajaxBlock").each(function(){o(".ajax-block").each(function(){var i=o(this),a=i.data("ajax-url")+"/"+(new Date).getTime().toString(36);i.addClass("loading"),t.behaviors.ajaxBlock.xhr=o.ajax({type:"GET",url:a,success:function(a){i.css("opacity",0).removeClass("loading");var e=o(a).find(".ajax-block-container");i.html(e).css("opacity",1),t.attachBehaviors()}})})})}}(jQuery,Drupal),function(t,r){r.behaviors.resizer={},r.behaviors.resizer.resizeTimer=null,r.behaviors.resizer.isMobile=!1,r.behaviors.resizer.isTabletPortrait=!1,r.behaviors.resizer.isTabletLandscape=!1,r.behaviors.resizer.isDesktop=!0,r.behaviors.resizer.deviceHasChanged=!1,r.behaviors.resizer.attach=function(a){t(window,a).resize(function(){clearTimeout(r.behaviors.resizer.resizeTimer),r.behaviors.resizer.resizeTimer=setTimeout(function(){r.attachBehaviors()},100)})},r.behaviors.checkViewport={attach:function(a){var e=r.behaviors.resizer,i=e.isMobile,s=e.isTabletLandscape,o=e.isDesktop;"block"===t(".hamburger",a).css("display")?(e.isMobile=!0,e.isTabletPortrait=!1,e.isTabletLandscape=!1,e.isDesktop=!1,t("body").addClass("is-mobile").removeClass("is-tablet-portrait").removeClass("is-tablet-landscape").removeClass("is-desktop"),768<=t(window).width()&&(e.isMobile=!1,e.isTabletPortrait=!0,e.isTabletLandscape=!1,e.isDesktop=!1,t("body").removeClass("is-mobile").addClass("is-tablet-portrait").removeClass("is-tablet-landscape").removeClass("is-desktop"))):(1024<=t(window).width()&&(e.isMobile=!1,e.isTabletPortrait=!1,e.isTabletLandscape=!0,e.isDesktop=!1,t("body").removeClass("is-mobile").removeClass("is-tablet-portrait").addClass("is-tablet-landscape").removeClass("is-desktop")),220===t(".header .logo").width()&&(e.isMobile=!1,e.isTabletPortrait=!1,e.isTabletLandscape=!1,e.isDesktop=!0,t("body").removeClass("is-mobile").removeClass("is-tablet-portrait").removeClass("is-tablet-landscape").addClass("is-desktop"))),e.deviceHasChanged=e.isMobile!==i||e.isTabletLandscape!==s||e.isDesktop!==o}}}(jQuery,Drupal,drupalSettings),function(i,a){a.behaviors.global={},a.behaviors.global.checkTables=function(){i(".node--view-mode-full .table-wrap").each(function(){var a=i(this),e=a.prev(".scroll-indicator");i(this).find("table").width()>a.width()?(a.addClass("scroll"),e.show()):(a.removeClass("scroll"),e.hide())})},a.behaviors.global.attach=function(){i("body").once("global").each(function(){objectFitImages(),i('a[href*="pdf"]').attr("target","_blank"),i("h2,h3,h4,h5,h6").each(function(){var a=i(this).text();i(this).find("div").each(function(){i(this).replaceWith("<span>"+a+"</span>")})}),i(".node--view-mode-full table").wrap('<div class="table-wrap" />'),i(".node--view-mode-full .table-wrap").each(function(){i(this).before('<span class="scroll-indicator">Scroll</span>')}),a.behaviors.global.checkTables(),i(window).resize(function(){a.behaviors.global.checkTables()})}),i("input[type=checkbox], input[type=radio]").checkbox(),i("select:not([class^='ui'])").dropdown(),i("div.webform-document-file").removeAttr("id")},a.behaviors.slick={},a.behaviors.slick.attach=function(){i("body").once("slick").each(function(){i(".slick").slick({dots:!0,arrows:!0}).on("afterChange",function(){a.blazy.init.revalidate()})})}}(jQuery,Drupal);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict";!function(s,n){n.behaviors.ajaxListLoading={},n.behaviors.ajaxListLoading.xhr=null,n.behaviors.ajaxListLoading.ajaxContainer="",n.behaviors.ajaxListLoading.ajaxPath="",n.behaviors.ajaxListLoading.params="",n.behaviors.ajaxListLoading.filterForm=s(".filterform"),n.behaviors.ajaxListLoading.category=s(".filterform .category"),n.behaviors.ajaxListLoading.attach=function(a){var o=n.behaviors.ajaxListLoading;s(".ajax-list-container",a).once("ajaxListLoading").each(function(){o.ajaxContainer=s(this),o.ajaxPath=o.ajaxContainer.attr("data-ajax-path"),o.params=o.ajaxContainer.data("default-params"),""!==window.location.hash&&o.updateParamsFromHash(),o.displayList(o.ajaxContainer,o.ajaxPath,o.params),s(window).off("hashchange.form-fragment").on("hashchange",function(){o.updateParamsFromHash(),o.displayList(o.ajaxContainer,o.ajaxPath,o.params)})}),s(".pager.ajax a").off("click").on("click",function(a){a.preventDefault(),a.stopPropagation();var t=s(this).data("params"),i=o.getTopPosition(s(".ajax-list-container"));0<o.category.length&&(-1===(a=o.category.val()).indexOf("all")&&(t.category="field_category--"+a.replace(".term-",""))),o.xhr.abort(),window.history.pushState({params:JSON.stringify(t)},null,window.location),0<o.filterForm.length&&(i=o.getTopPosition(o.filterForm)),s("html,body").animate({scrollTop:i},"500"),s(".ajax-list-container .wrapper").fadeOut(function(){o.displayList(o.ajaxContainer,o.ajaxPath,t)})})},n.behaviors.ajaxListLoading.updateParamsFromHash=function(){var i=n.behaviors.ajaxListLoading,a=window.location.hash.substring(2).split("/");s.each(a,function(a,t){t=t.split("=");i.params[t[0]]=t[1]})},n.behaviors.ajaxListLoading.updateFilters=function(a){var t,i,o=n.behaviors.ajaxListLoading,r=s(".filterform .from-date"),e=s(".filterform .to-date");0<r.length&&0<e.length&&(t=(i=a.date.replace("field_date_range--","").split(","))[0].split("-"),i=i[1].split("-"),r.val(Date.parse(t[1]+"-"+t[0]+"-"+t[2]).toString("MMM d, yyyy")),e.val(Date.parse(i[1]+"-"+i[0]+"-"+i[2]).toString("MMM d, yyyy"))),0<o.category.length&&(i=void 0,i="all"!==a.category?".term-"+a.category.replace("field_category--",""):"all",o.category.val(i).blur().dropdown("update"))},n.behaviors.ajaxListLoading.displayList=function(i,a,t){var o=n.behaviors.ajaxListLoading;i.html("").removeClass("loaded"),o.updateFilters(t),o.xhr=s.ajax({type:"POST",url:a+"?response_type=ajax",data:t,success:function(a){var t=s("<div/>",{class:"wrapper"});t.html(a),i.html(t),i.addClass("loaded"),n.attachBehaviors()}})},n.behaviors.ajaxListLoading.getTopPosition=function(a){return a.offset().top-100}}(jQuery,Drupal);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

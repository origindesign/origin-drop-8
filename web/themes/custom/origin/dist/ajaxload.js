"use strict";!function(s,n){n.behaviors.ajaxListLoading={},n.behaviors.ajaxListLoading.xhr=null,n.behaviors.ajaxListLoading.ajaxContainer="",n.behaviors.ajaxListLoading.ajaxPath="",n.behaviors.ajaxListLoading.params="",n.behaviors.ajaxListLoading.filterForm=s(".filterform"),n.behaviors.ajaxListLoading.category=s(".filterform .category"),n.behaviors.ajaxListLoading.attach=function(a){var o=n.behaviors.ajaxListLoading;s(".ajax-list-container",a).once("ajaxListLoading").each(function(){o.ajaxContainer=s(this),o.ajaxPath=o.ajaxContainer.attr("data-ajax-path"),o.params=o.ajaxContainer.data("default-params"),""!==window.location.hash&&o.updateParamsFromHash(),o.displayList(o.ajaxContainer,o.ajaxPath,o.params),s(window).off("hashchange.form-fragment").on("hashchange",function(){o.updateParamsFromHash(),o.displayList(o.ajaxContainer,o.ajaxPath,o.params)})}),s(".pager.ajax a").off("click").on("click",function(a){a.preventDefault(),a.stopPropagation();var t=s(this).data("params"),i=o.getTopPosition(s(".ajax-list-container"));0<o.category.length&&(-1===(a=o.category.val()).indexOf("all")&&(t.category="field_category--"+a.replace(".term-",""))),o.xhr.abort(),window.history.pushState({params:JSON.stringify(t)},null,window.location),0<o.filterForm.length&&(i=o.getTopPosition(o.filterForm)),s("html,body").animate({scrollTop:i},"500"),s(".ajax-list-container .wrapper").fadeOut(function(){o.displayList(o.ajaxContainer,o.ajaxPath,t)})})},n.behaviors.ajaxListLoading.updateParamsFromHash=function(){var i=n.behaviors.ajaxListLoading,a=window.location.hash.substring(2).split("/");s.each(a,function(a,t){t=t.split("=");i.params[t[0]]=t[1]})},n.behaviors.ajaxListLoading.updateFilters=function(a){var t,i,o=n.behaviors.ajaxListLoading,e=s(".filterform .from-date"),r=s(".filterform .to-date");0<e.length&&0<r.length&&(t=(i=a.date.replace("field_date_range--","").split(","))[0].split("-"),i=i[1].split("-"),e.val(Date.parse(t[1]+"-"+t[0]+"-"+t[2]).toString("MMM d, yyyy")),r.val(Date.parse(i[1]+"-"+i[0]+"-"+i[2]).toString("MMM d, yyyy"))),0<o.category.length&&(i=void 0,i="all"!==a.category?".term-"+a.category.replace("field_category--",""):"all",o.category.val(i).blur().dropdown("update"))},n.behaviors.ajaxListLoading.displayList=function(i,a,t){var o=n.behaviors.ajaxListLoading;i.html("").removeClass("loaded"),o.updateFilters(t),o.xhr=s.ajax({type:"POST",url:a+"?response_type=ajax",data:t,success:function(a){var t=s(a).find("#block-origin-content").html(),a=s("<div/>",{class:"wrapper"});a.html('<div class="block block-system block-system-main-block">'+t+"</div>"),i.html(a),i.addClass("loaded"),n.attachBehaviors()}})},n.behaviors.ajaxListLoading.getTopPosition=function(a){return a.offset().top-100}}(jQuery,Drupal);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFqYXhsb2FkLmpzIl0sIm5hbWVzIjpbIiQiLCJEcnVwYWwiLCJhamF4TG9hZFNjcmlwdCIsImJlaGF2aW9ycyIsImFqYXhMaXN0TG9hZGluZyIsInhociIsImFqYXhQYXRoIiwiYWpheENvbnRhaW5lciIsInBhcmFtcyIsImNhdGVnb3J5IiwiY29udGV4dCIsImF0dGFjaCIsIm9uY2UiLCJlYWNoIiwiYXR0ciIsIl9vYmoiLCJkYXRhIiwid2luZG93IiwibG9jYXRpb24iLCJoYXNoIiwidXBkYXRlUGFyYW1zRnJvbUhhc2giLCJkaXNwbGF5TGlzdCIsIm9mZiIsIm9uIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInRoaXMiLCJpbmRleE9mIiwibGVuZ3RoIiwidmFsIiwicmVwbGFjZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJmaWx0ZXJGb3JtIiwidG9wIiwiZ2V0VG9wUG9zaXRpb24iLCJhbmltYXRlIiwic2Nyb2xsVG9wIiwiZmFkZU91dCIsInZhbHVlQXJyYXkiLCJoYXNoQXJyYXkiLCJzdWJzdHJpbmciLCJzcGxpdCIsInRvU2VsZWN0IiwiaW5kZXgiLCJ2YWx1ZSIsImZyb21TZWxlY3QiLCJmcm9tIiwiZGF0ZSIsInVwZGF0ZUZpbHRlcnMiLCJ0byIsIkRhdGUiLCJwYXJzZSIsInRvU3RyaW5nIiwiJHBhcmFtcyIsImJsdXIiLCJkcm9wZG93biIsIiRjb250YWluZXIiLCIkcGF0aCIsImh0bWwiLCJyZW1vdmVDbGFzcyIsImFqYXgiLCJ1cmwiLCJzdWNjZXNzIiwicmVzdWx0IiwiZmluZCIsIndyYXBwZXIiLCJjbGFzcyIsImFkZENsYXNzIiwiYXR0YWNoQmVoYXZpb3JzIiwiJGVsZW0iLCJvZmZzZXQiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJjQUFDLFNBQXlCQSxFQUFHQyxHQUE1QkEsRUFBU0MsVUFBQUEsZ0JBQTJCLEdBRWpDRCxFQUFPRSxVQUFVQyxnQkFBa0JDLElBQW5DLEtBQ0FKLEVBQU9FLFVBQVVDLGdCQUFnQkMsY0FBWSxHQUU3Q0os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bUJBQUEsSUFBQSxNQU9pQmYsRUFBQU4sU0FBU29CLElBQUFwQixHQUFBOEMsT0FBQUMsU0FBQSxZQU9wRHZELEVBQUFFLFVBQUFDLGdCQUFBaUIsWUFBQSxTQUFBb0MsRUFBQUMsRUFBQUosR0FFQSxJQUFBdkMsRUFBQWQsRUFBQUUsVUFBQUMsZ0JBaEJRcUQsRUFBQUUsS0FBQSxJQUFBQyxZQUFBLFVBMkJFN0MsRUFBQ1osY0FBVUMsR0FBakJXLEVBQUFWLElBQUFMLEVBQUE2RCxLQUFBLENBT001RCxLQTFMVixPQTBKWTZELElBQUtKLEVBQVEsc0JBQ2IxQyxLQUFNc0MsRUFDTlMsUUFBUyxTQUFTQyxHQUVkLElBQUlMLEVBQU8zRCxFQUFFZ0UsR0FBUUMsS0FBSyx5QkFBeUJOLE9BQy9DTyxFQUFVbEUsRUFBRSxTQUFVLENBQUNtRSxNQUFTLFlBQ3BDRCxFQUFRUCxLQUFLLDJEQUE2REEsRUFBTyxVQUNqRkYsRUFBV0UsS0FBS08sR0FDaEJULEVBQVdXLFNBQVMsVUFDcEJuRSxFQUFPb0Usc0JBZ0JuQnBFLEVBQU9FLFVBQVVDLGdCQUFnQitCLGVBQWlCLFNBQVNtQyxHQUV2RCxPQUFPQSxFQUFNQyxTQUFTckMsSUFBTSxLQXJMbkMsQ0EwTENzQyxPQUFRdkUiLCJmaWxlIjoiYWpheGxvYWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gYWpheExvYWRTY3JpcHQgKCQsIERydXBhbCkge1xuXG4gICAgRHJ1cGFsLmJlaGF2aW9ycy5hamF4TGlzdExvYWRpbmcgPSB7fTtcbiAgICBEcnVwYWwuYmVoYXZpb3JzLmFqYXhMaXN0TG9hZGluZy54aHIgPSBudWxsOyAvLyBhamF4IGNhbGxcbiAgICBEcnVwYWwuYmVoYXZpb3JzLmFqYXhMaXN0TG9hZGluZy5hamF4Q29udGFpbmVyID0gJyc7XG4gICAgRHJ1cGFsLmJlaGF2aW9ycy5hamF4TGlzdExvYWRpbmcuYWpheFBhdGggPSAnJztcbiAgICBEcnVwYWwuYmVoYXZpb3JzLmFqYXhMaXN0TG9hZGluZy5wYXJhbXMgPSAnJztcbiAgICBEcnVwYWwuYmVoYXZpb3JzLmFqYXhMaXN0TG9hZGluZy5maWx0ZXJGb3JtID0gJCgnLmZpbHRlcmZvcm0nKTtcbiAgICBEcnVwYWwuYmVoYXZpb3JzLmFqYXhMaXN0TG9hZGluZy5jYXRlZ29yeSA9ICQoXCIuZmlsdGVyZm9ybSAuY2F0ZWdvcnlcIik7XG5cbiAgICBEcnVwYWwuYmVoYXZpb3JzLmFqYXhMaXN0TG9hZGluZy5hdHRhY2ggPSBmdW5jdGlvbiAoY29udGV4dCkge1xuXG4gICAgICAgIGxldCBfb2JqID0gRHJ1cGFsLmJlaGF2aW9ycy5hamF4TGlzdExvYWRpbmc7XG5cbiAgICAgICAgJCgnLmFqYXgtbGlzdC1jb250YWluZXInLCBjb250ZXh0KS5vbmNlKCdhamF4TGlzdExvYWRpbmcnKS5lYWNoKGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgX29iai5hamF4Q29udGFpbmVyID0gJCh0aGlzKTtcbiAgICAgICAgICAgIF9vYmouYWpheFBhdGggPSBfb2JqLmFqYXhDb250YWluZXIuYXR0cignZGF0YS1hamF4LXBhdGgnKTtcbiAgICAgICAgICAgIF9vYmoucGFyYW1zID0gX29iai5hamF4Q29udGFpbmVyLmRhdGEoJ2RlZmF1bHQtcGFyYW1zJyk7XG5cbiAgICAgICAgICAgIC8vIElmIGhhc2ggaGFzIGJlZW4gcHJvdmlkZWQsIHVwZGF0ZSBwYXJhbXNcbiAgICAgICAgICAgIGlmKHdpbmRvdy5sb2NhdGlvbi5oYXNoICE9PSAnJyl7XG4gICAgICAgICAgICAgICAgX29iai51cGRhdGVQYXJhbXNGcm9tSGFzaCgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBEaXNwbGF5IGxpc3RcbiAgICAgICAgICAgIF9vYmouZGlzcGxheUxpc3QoX29iai5hamF4Q29udGFpbmVyLCBfb2JqLmFqYXhQYXRoLCBfb2JqLnBhcmFtcyk7XG5cbiAgICAgICAgICAgIC8vIE9uIGhhc2ggY2hhbmdlLCB1cGRhdGUgcGFyYW1zLCByZWxvYWQgbGlzdFxuICAgICAgICAgICAgJCh3aW5kb3cpLm9mZignaGFzaGNoYW5nZS5mb3JtLWZyYWdtZW50Jykub24oJ2hhc2hjaGFuZ2UnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBfb2JqLnVwZGF0ZVBhcmFtc0Zyb21IYXNoKCk7XG4gICAgICAgICAgICAgICAgX29iai5kaXNwbGF5TGlzdChfb2JqLmFqYXhDb250YWluZXIsIF9vYmouYWpheFBhdGgsIF9vYmoucGFyYW1zKTtcbiAgICAgICAgICAgIH0pO1xuXG5cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gQWpheCBwYWdlciBsaW5rc1xuICAgICAgICAkKCcucGFnZXIuYWpheCBhJykub2ZmKFwiY2xpY2tcIikub24oJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpe1xuXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAgICAgICAgIGxldCBwYXJhbXMgPSAkKHRoaXMpLmRhdGEoJ3BhcmFtcycpO1xuICAgICAgICAgICAgbGV0IHRvcCA9IF9vYmouZ2V0VG9wUG9zaXRpb24oJCgnLmFqYXgtbGlzdC1jb250YWluZXInKSk7XG5cbiAgICAgICAgICAgIGlmKF9vYmouY2F0ZWdvcnkubGVuZ3RoID4gMCl7XG4gICAgICAgICAgICAgICAgbGV0IGNhdGVnb3J5ID0gX29iai5jYXRlZ29yeS52YWwoKTtcbiAgICAgICAgICAgICAgICBpZihjYXRlZ29yeS5pbmRleE9mKCdhbGwnKSA9PT0gLTEpe1xuICAgICAgICAgICAgICAgICAgICBwYXJhbXMuY2F0ZWdvcnkgPSAnZmllbGRfY2F0ZWdvcnktLScgKyBjYXRlZ29yeS5yZXBsYWNlKCcudGVybS0nLCAnJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBBYm9ydCBhbnkgcG9zc2libGUgY3VycmVudCBhamF4IGNhbGxcbiAgICAgICAgICAgIF9vYmoueGhyLmFib3J0KCk7XG5cbiAgICAgICAgICAgIC8vIFNldCBoaXN0b3J5IHN0YXRlXG4gICAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoeyBwYXJhbXM6IEpTT04uc3RyaW5naWZ5KHBhcmFtcykgfSwgbnVsbCwgd2luZG93LmxvY2F0aW9uKTtcblxuICAgICAgICAgICAgLy8gR2V0IHRvcCBvZiBmaWx0ZXJzIGlmIHByZXNlbnRcbiAgICAgICAgICAgIGlmKF9vYmouZmlsdGVyRm9ybS5sZW5ndGggPiAwKXtcbiAgICAgICAgICAgICAgICB0b3AgPSBfb2JqLmdldFRvcFBvc2l0aW9uKF9vYmouZmlsdGVyRm9ybSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEFuaW1hdGUgdG8gcG9zaXRpb25cbiAgICAgICAgICAgICQoXCJodG1sLGJvZHlcIikuYW5pbWF0ZShcbiAgICAgICAgICAgICAgICB7IHNjcm9sbFRvcDogdG9wIH0sICc1MDAnXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAvLyBGYWRlIG91dCB3cmFwcGVyXG4gICAgICAgICAgICAkKCcuYWpheC1saXN0LWNvbnRhaW5lciAud3JhcHBlcicpLmZhZGVPdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAvLyBUcmlnZ2VyIHRoZSBkaXNwbGF5IG9mIHRoZSBsaXN0XG4gICAgICAgICAgICAgICAgX29iai5kaXNwbGF5TGlzdChfb2JqLmFqYXhDb250YWluZXIsIF9vYmouYWpheFBhdGgsIHBhcmFtcyk7XG4gICAgICAgICAgICB9KTtcblxuXG4gICAgICAgICAgICAvKlxuICAgICAgICAgICAgJCgnLmFqYXgtbGlzdC1jb250YWluZXIgLndyYXBwZXInKS5mYWRlT3V0KCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gJC50cmltKFwiL2NhdGVnb3J5PVwiK3BhcmFtcy5jYXRlZ29yeStcIi9wYWdlZD1cIitwYXJhbXMucGFnZWQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAqL1xuXG4gICAgICAgIH0pO1xuXG4gICAgfTtcblxuXG4gICAgRHJ1cGFsLmJlaGF2aW9ycy5hamF4TGlzdExvYWRpbmcudXBkYXRlUGFyYW1zRnJvbUhhc2ggPSBmdW5jdGlvbiAoKXtcblxuICAgICAgICBsZXQgX29iaiA9IERydXBhbC5iZWhhdmlvcnMuYWpheExpc3RMb2FkaW5nO1xuICAgICAgICBsZXQgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoO1xuXG4gICAgICAgIC8vIFNwbGl0IGhhc2ggaW50byBhcnJheSBvZiB2YWx1ZXNcbiAgICAgICAgbGV0IGhhc2hBcnJheSA9IGhhc2guc3Vic3RyaW5nKDIpLnNwbGl0KCcvJyk7XG5cbiAgICAgICAgJC5lYWNoKGhhc2hBcnJheSwgZnVuY3Rpb24oaW5kZXgsIHZhbHVlKSB7XG4gICAgICAgICAgICAvLyBGb3IgZWFjaCB2YWx1ZSBzcGxpdCBpbnRvIGtleSA9PiB2YWx1ZSBhcnJheVxuICAgICAgICAgICAgbGV0IHZhbHVlQXJyYXkgPSB2YWx1ZS5zcGxpdCgnPScpO1xuICAgICAgICAgICAgLy8gQWRkL292ZXJyaWRlIGRlZmF1bHRQYXJhbXMgb2JqZWN0XG4gICAgICAgICAgICBfb2JqLnBhcmFtc1t2YWx1ZUFycmF5WzBdXSA9IHZhbHVlQXJyYXlbMV07XG4gICAgICAgIH0pO1xuXG4gICAgfTtcblxuXG4gICAgRHJ1cGFsLmJlaGF2aW9ycy5hamF4TGlzdExvYWRpbmcudXBkYXRlRmlsdGVycyA9IGZ1bmN0aW9uIChwYXJhbXMpe1xuXG4gICAgICAgIGxldCBfb2JqID0gRHJ1cGFsLmJlaGF2aW9ycy5hamF4TGlzdExvYWRpbmc7XG5cbiAgICAgICAgLy8gSGFuZGxlIGRhdGUgaWYgZXhpc3RzXG4gICAgICAgIGxldCBmcm9tU2VsZWN0ID0gJChcIi5maWx0ZXJmb3JtIC5mcm9tLWRhdGVcIik7XG4gICAgICAgIGxldCB0b1NlbGVjdCA9ICQoXCIuZmlsdGVyZm9ybSAudG8tZGF0ZVwiKTtcblxuICAgICAgICBpZihmcm9tU2VsZWN0Lmxlbmd0aCA+IDAgJiYgdG9TZWxlY3QubGVuZ3RoID4gMCl7XG4gICAgICAgICAgICBsZXQgZGF0ZSA9IHBhcmFtcy5kYXRlLnJlcGxhY2UoJ2ZpZWxkX2RhdGVfcmFuZ2UtLScsICcnKS5zcGxpdCgnLCcpO1xuICAgICAgICAgICAgbGV0IGZyb20gPSBkYXRlWzBdLnNwbGl0KCctJyk7XG4gICAgICAgICAgICBsZXQgdG8gPSBkYXRlWzFdLnNwbGl0KCctJyk7XG5cbiAgICAgICAgICAgIC8vIFVwZGF0ZXMgRmlsdGVycyBWYWx1ZSBvbiBQYWdlXG4gICAgICAgICAgICBmcm9tU2VsZWN0LnZhbChEYXRlLnBhcnNlKGZyb21bMV0gKyAnLScgKyBmcm9tWzBdICsgJy0nICsgZnJvbVsyXSkudG9TdHJpbmcoJ01NTSBkLCB5eXl5JykpO1xuICAgICAgICAgICAgdG9TZWxlY3QudmFsKERhdGUucGFyc2UodG9bMV0gKyAnLScgKyB0b1swXSArICctJyArIHRvWzJdKS50b1N0cmluZygnTU1NIGQsIHl5eXknKSk7XG4gICAgICAgIH1cblxuXG4gICAgICAgIC8vIEhhbmRsZSBjYXRlZ29yeSBpZiBleGlzdHNcbiAgICAgICAgaWYoX29iai5jYXRlZ29yeS5sZW5ndGggPiAwKXtcbiAgICAgICAgICAgIGxldCBjYXRlZ29yeTtcblxuICAgICAgICAgICAgaWYocGFyYW1zLmNhdGVnb3J5ICE9PSAnYWxsJyl7XG4gICAgICAgICAgICAgICAgY2F0ZWdvcnkgPSAnLnRlcm0tJyArIHBhcmFtcy5jYXRlZ29yeS5yZXBsYWNlKCdmaWVsZF9jYXRlZ29yeS0tJywgJycpO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgY2F0ZWdvcnkgPSAnYWxsJztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVXBkYXRlcyBGaWx0ZXJzIFZhbHVlIG9uIFBhZ2VcbiAgICAgICAgICAgIF9vYmouY2F0ZWdvcnkudmFsKGNhdGVnb3J5KS5ibHVyKCkuZHJvcGRvd24oXCJ1cGRhdGVcIik7XG4gICAgICAgIH1cblxuXG4gICAgfTtcblxuXG4gICAgRHJ1cGFsLmJlaGF2aW9ycy5hamF4TGlzdExvYWRpbmcuZGlzcGxheUxpc3QgPSBmdW5jdGlvbiAoJGNvbnRhaW5lciwgJHBhdGgsICRwYXJhbXMpe1xuXG4gICAgICAgIGxldCBfb2JqID0gRHJ1cGFsLmJlaGF2aW9ycy5hamF4TGlzdExvYWRpbmc7XG5cbiAgICAgICAgLy8gSGFuZGxlIGNsYXNzIGZvciBsb2FkaW5nIGljb25cbiAgICAgICAgJGNvbnRhaW5lci5odG1sKCcnKS5yZW1vdmVDbGFzcygnbG9hZGVkJyk7XG5cbiAgICAgICAgLy8gVXBkYXRlIEZpbHRlcnNcbiAgICAgICAgX29iai51cGRhdGVGaWx0ZXJzKCRwYXJhbXMpO1xuXG4gICAgICAgIF9vYmoueGhyID0gJC5hamF4KHtcbiAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgIHVybDogJHBhdGggKyAnP3Jlc3BvbnNlX3R5cGU9YWpheCcsXG4gICAgICAgICAgICBkYXRhOiAkcGFyYW1zLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzdWx0KSB7XG5cbiAgICAgICAgICAgICAgICBsZXQgaHRtbCA9ICQocmVzdWx0KS5maW5kKCcjYmxvY2stb3JpZ2luLWNvbnRlbnQnKS5odG1sKCk7XG4gICAgICAgICAgICAgICAgbGV0IHdyYXBwZXIgPSAkKFwiPGRpdi8+XCIsIHsnY2xhc3MnOiAnd3JhcHBlcicgfSk7XG4gICAgICAgICAgICAgICAgd3JhcHBlci5odG1sKCc8ZGl2IGNsYXNzPVwiYmxvY2sgYmxvY2stc3lzdGVtIGJsb2NrLXN5c3RlbS1tYWluLWJsb2NrXCI+JyArIGh0bWwgKyAnPC9kaXY+Jyk7XG4gICAgICAgICAgICAgICAgJGNvbnRhaW5lci5odG1sKHdyYXBwZXIpO1xuICAgICAgICAgICAgICAgICRjb250YWluZXIuYWRkQ2xhc3MoJ2xvYWRlZCcpO1xuICAgICAgICAgICAgICAgIERydXBhbC5hdHRhY2hCZWhhdmlvcnMoKTtcblxuICAgICAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJHBhdGgrJz9yZXNwb25zZV90eXBlPWFqYXgnKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygkcGFyYW1zKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAgICAgICAgICAgICovXG5cblxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgIH07XG5cblxuXG4gICAgRHJ1cGFsLmJlaGF2aW9ycy5hamF4TGlzdExvYWRpbmcuZ2V0VG9wUG9zaXRpb24gPSBmdW5jdGlvbigkZWxlbSl7XG5cbiAgICAgICAgcmV0dXJuICRlbGVtLm9mZnNldCgpLnRvcCAtIDEwMDtcbiAgICB9O1xuXG5cblxufShqUXVlcnksIERydXBhbCkpO1xuIl19

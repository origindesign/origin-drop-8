"use strict";!function(n,s){s.behaviors.events={},s.behaviors.events.from="",s.behaviors.events.to="",s.behaviors.events.categories="",s.behaviors.events.attach=function(e){n(".ajax-events",e).once("events").each(function(){var o=s.behaviors.events,r=s.behaviors.ajaxListLoading;if(o.from=n(".filterform .from-date"),o.to=n(".filterform .to-date"),o.categories=n(".filterform .categories"),""!==window.location.hash){var e=window.location.hash.substring(1);o.updateFilters(e)}n(".filter-list").on("change",function(){o.reloadList()});var a=2;s.behaviors.resizer.isMobile&&(a=1),o.from.datepicker({dateFormat:"yy-mm-dd",changeMonth:!0,changeYear:!0,showAnim:"fadeIn",yearRange:"c:c+1",numberOfMonths:a,onSelect:function(e){o.to.datepicker("option","minDate",e),n(this).change()}}),o.to.datepicker({dateFormat:"yy-mm-dd",changeMonth:!0,changeYear:!0,showAnim:"fadeIn",yearRange:"c:c+1",numberOfMonths:a}),window.onpopstate=function(e){var a="";null!==e.state?(a=n.parseJSON(e.state.params),o.updateFilters(a)):(a=s.behaviors.ajaxListLoading.params,o.updateFilters(a),o.categories.val("all").blur().dropdown("update"));var t=n(".filter-ajax").offset().top-200;n("html, body").animate({scrollTop:t},"500",function(){r.displayList(r.ajaxContainer,r.ajaxPath,a)})}})},s.behaviors.events.reloadList=function(){var e=s.behaviors.events,a=s.behaviors.ajaxListLoading,t=Date.parse(e.from.val()).toString("yyyy-MM-dd"),o=Date.parse(e.to.val()).toString("yyyy-MM-dd"),r=e.categories.val();"all"!==r&&(r="field_categories--"+r.replace(".term-",""));var i='{"content_type":"event","category":"'+r+'","date":"field_date_range--'+t+","+o+'","sort":"field_date_range-ASC"}';a.xhr.abort(),console.log(i),a.displayList(a.ajaxContainer,a.ajaxPath,n.parseJSON(i)),window.history.pushState({params:i},null,window.location)},s.behaviors.events.updateFilters=function(e){var a=s.behaviors.events,t=e.date.replace("field_date_range--","").split(","),o=void 0;o="all"!==e.category?".term-"+e.category.replace("field_categories--",""):"all";var r=t[0].split("-"),i=t[1].split("-");a.from.val(Date.parse(r[1]+"-"+r[0]+"-"+r[2]).toString("Y-m-d")),a.to.val(Date.parse(i[1]+"-"+i[0]+"-"+i[2]).toString("Y-m-d")),a.categories.val(o).blur().dropdown("update")}}(jQuery,Drupal);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
